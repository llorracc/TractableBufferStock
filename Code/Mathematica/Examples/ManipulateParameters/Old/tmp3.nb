Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Initialization", " ", "file", " ", "necessary", " ", "for", " ", 
    "running", " ", "the", " ", "Manipulate", " ", "notebooks"}], " ", "*)"}],
   "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SetDirectory", "[", 
     RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Get", "[", "\"\<../../CoreCode/Autoload/init.m\>\"", "]"}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
    "Get", "[", "\"\<../../CoreCode/MakeAnalyticalResults.m\>\"", "]"}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Get", "[", "\"\<../../CoreCode/VarsAndFuncs.m\>\"", "]"}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Get", "[", "\"\<../../CoreCode/DrawDiagrams.m\>\"", "]"}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Omega]", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\[Rho]", "-", "1"}], ")"}], "/", "2"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Gamma]", "=", 
     RowBox[{"\[GothicG]", "+", "\[Mho]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"VerboseOutput", "=", "False"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Kappa]U", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Kappa]", " ", "/.", " ", 
          RowBox[{"Severance", " ", "\[Rule]", "0"}]}], ")"}], " ", "/.", " ", 
        RowBox[{"PDies", " ", "\[Rule]", " ", "0"}]}], ")"}], " ", "/.", " ", 
      
      RowBox[{"\[Tau]", " ", "\[Rule]", " ", "0"}]}]}], ";"}]}]}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Zeta]", " ", "\[CapitalGamma]"}], ",", 
      RowBox[{"R", " ", "\[Kappa]U", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[CapitalThorn]\[CapitalGamma]", 
              RowBox[{"-", "\[Rho]"}]], "-", "1"}], ")"}], "/", "\[Mho]"}]}], 
         ")"}], 
        RowBox[{"1", "/", "\[Rho]"}]]}], ",", 
      RowBox[{"R", " ", "\[Kappa]U", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", "\[Aleph]"}], ")"}], 
        RowBox[{"1", "/", "\[Rho]"}]]}]}], "}"}], " ", "/.", " ", 
    RowBox[{"PDies", " ", "\[Rule]", " ", "0"}]}], ")"}], " "}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "+", "r"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      FractionBox[
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox[
          RowBox[{"1", "+", "r"}], 
          RowBox[{"1", "+", "\[CurlyTheta]"}]], ")"}], 
        FractionBox["1", "\[Rho]"]], 
       RowBox[{"1", "+", "r"}]]}], ")"}], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       FractionBox[
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox[
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               FractionBox[
                RowBox[{"1", "+", "r"}], 
                RowBox[{"1", "+", "\[CurlyTheta]"}]], ")"}], 
              FractionBox["1", "\[Rho]"]], " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", "\[Mho]"}], ")"}]}], 
            RowBox[{"1", "+", "\[GothicG]"}]], ")"}], 
          RowBox[{"-", "\[Rho]"}]]}], "\[Mho]"]}], ")"}], 
     FractionBox["1", "\[Rho]"]]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "+", "r"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      FractionBox[
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox[
          RowBox[{"1", "+", "r"}], 
          RowBox[{"1", "+", "\[CurlyTheta]"}]], ")"}], 
        FractionBox["1", "\[Rho]"]], 
       RowBox[{"1", "+", "r"}]]}], ")"}], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       FractionBox[
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox[
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               FractionBox[
                RowBox[{"1", "+", "r"}], 
                RowBox[{"1", "+", "\[CurlyTheta]"}]], ")"}], 
              FractionBox["1", "\[Rho]"]], " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", "\[Mho]"}], ")"}]}], 
            RowBox[{"1", "+", "\[GothicG]"}]], ")"}], 
          RowBox[{"-", "\[Rho]"}]]}], "\[Mho]"]}], ")"}], 
     FractionBox["1", "\[Rho]"]]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "+", "r"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      FractionBox[
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox[
          RowBox[{"1", "+", "r"}], 
          RowBox[{"1", "+", "\[CurlyTheta]"}]], ")"}], 
        FractionBox["1", "\[Rho]"]], 
       RowBox[{"1", "+", "r"}]]}], ")"}], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       FractionBox[
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox[
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               FractionBox[
                RowBox[{"1", "+", "r"}], 
                RowBox[{"1", "+", "\[CurlyTheta]"}]], ")"}], 
              FractionBox["1", "\[Rho]"]], " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", "\[Mho]"}], ")"}]}], 
            RowBox[{"1", "+", "\[GothicG]"}]], ")"}], 
          RowBox[{"-", "\[Rho]"}]]}], "\[Mho]"]}], ")"}], 
     FractionBox["1", "\[Rho]"]]}]}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"\[ScriptB]E", " ", "/.", " ", 
      RowBox[{"Severance", " ", "\[Rule]", "0"}]}], ")"}], " ", "/.", " ", 
    RowBox[{"PDies", " ", "\[Rule]", " ", "0"}]}], ")"}], " ", "/.", " ", 
  RowBox[{"\[Tau]", " ", "\[Rule]", " ", "0"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{"1", "+", "\[GothicG]"}]], 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "+", "r"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{"1", "+", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", "r"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           FractionBox[
            SuperscriptBox[
             RowBox[{"(", 
              FractionBox[
               RowBox[{"1", "+", "r"}], 
               RowBox[{"1", "+", "\[CurlyTheta]"}]], ")"}], 
             FractionBox["1", "\[Rho]"]], 
            RowBox[{"1", "+", "r"}]]}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "+", 
            FractionBox[
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"(", 
                    FractionBox[
                    RowBox[{"1", "+", "r"}], 
                    RowBox[{"1", "+", "\[CurlyTheta]"}]], ")"}], 
                   FractionBox["1", "\[Rho]"]], " ", 
                  RowBox[{"(", 
                   RowBox[{"1", "-", "\[Mho]"}], ")"}]}], 
                 RowBox[{"1", "+", "\[GothicG]"}]], ")"}], 
               RowBox[{"-", "\[Rho]"}]]}], "\[Mho]"]}], ")"}], 
          FractionBox["1", "\[Rho]"]], " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", "\[Mho]"}], ")"}]}], 
        RowBox[{"1", "+", "\[GothicG]"}]]}], 
      RowBox[{"1", "-", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", "r"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", "\[Mho]"}], ")"}]}], 
        RowBox[{"1", "+", "\[GothicG]"}]], "+", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", "r"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           FractionBox[
            SuperscriptBox[
             RowBox[{"(", 
              FractionBox[
               RowBox[{"1", "+", "r"}], 
               RowBox[{"1", "+", "\[CurlyTheta]"}]], ")"}], 
             FractionBox["1", "\[Rho]"]], 
            RowBox[{"1", "+", "r"}]]}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "+", 
            FractionBox[
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"(", 
                    FractionBox[
                    RowBox[{"1", "+", "r"}], 
                    RowBox[{"1", "+", "\[CurlyTheta]"}]], ")"}], 
                   FractionBox["1", "\[Rho]"]], " ", 
                  RowBox[{"(", 
                   RowBox[{"1", "-", "\[Mho]"}], ")"}]}], 
                 RowBox[{"1", "+", "\[GothicG]"}]], ")"}], 
               RowBox[{"-", "\[Rho]"}]]}], "\[Mho]"]}], ")"}], 
          FractionBox["1", "\[Rho]"]], " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", "\[Mho]"}], ")"}]}], 
        RowBox[{"1", "+", "\[GothicG]"}]]}]], "-", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", 
         FractionBox[
          RowBox[{"1", "+", "\[GothicG]"}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", "r"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", "\[Mho]"}], ")"}]}]]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         FractionBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", "r"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             FractionBox[
              SuperscriptBox[
               RowBox[{"(", 
                FractionBox[
                 RowBox[{"1", "+", "r"}], 
                 RowBox[{"1", "+", "\[CurlyTheta]"}]], ")"}], 
               FractionBox["1", "\[Rho]"]], 
              RowBox[{"1", "+", "r"}]]}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "+", 
              FractionBox[
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"1", "+", "r"}], 
                    RowBox[{"1", "+", "\[CurlyTheta]"}]], ")"}], 
                    FractionBox["1", "\[Rho]"]], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Mho]"}], ")"}]}], 
                   RowBox[{"1", "+", "\[GothicG]"}]], ")"}], 
                 RowBox[{"-", "\[Rho]"}]]}], "\[Mho]"]}], ")"}], 
            FractionBox["1", "\[Rho]"]], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", "\[Mho]"}], ")"}]}], 
          RowBox[{"1", "+", "\[GothicG]"}]]}], ")"}]}], 
      RowBox[{"1", "-", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", "r"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", "\[Mho]"}], ")"}]}], 
        RowBox[{"1", "+", "\[GothicG]"}]], "+", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", "r"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           FractionBox[
            SuperscriptBox[
             RowBox[{"(", 
              FractionBox[
               RowBox[{"1", "+", "r"}], 
               RowBox[{"1", "+", "\[CurlyTheta]"}]], ")"}], 
             FractionBox["1", "\[Rho]"]], 
            RowBox[{"1", "+", "r"}]]}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "+", 
            FractionBox[
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"(", 
                    FractionBox[
                    RowBox[{"1", "+", "r"}], 
                    RowBox[{"1", "+", "\[CurlyTheta]"}]], ")"}], 
                   FractionBox["1", "\[Rho]"]], " ", 
                  RowBox[{"(", 
                   RowBox[{"1", "-", "\[Mho]"}], ")"}]}], 
                 RowBox[{"1", "+", "\[GothicG]"}]], ")"}], 
               RowBox[{"-", "\[Rho]"}]]}], "\[Mho]"]}], ")"}], 
          FractionBox["1", "\[Rho]"]], " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", "\[Mho]"}], ")"}]}], 
        RowBox[{"1", "+", "\[GothicG]"}]]}]], "-", 
     FractionBox[
      RowBox[{"1", "+", "\[GothicG]"}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", "r"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "\[Mho]"}], ")"}]}]]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{"1", "-", "\[Mho]"}], ")"}]}]}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "\[CurlyTheta]", ",", "\[Rho]", ",", "Severance", ",", "PDies", ",", 
     "\[Mho]", ",", "\[Tau]"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"0.03", ",", "2", ",", "0", ",", "0", ",", "0.005", ",", "0"}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", "\[IndentingNewLine]", 
   RowBox[{"MatrixForm", "[", 
    RowBox[{
     RowBox[{"ResultsByGandR", "=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\[ScriptB]E", ",", 
               RowBox[{"1", "/", 
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"\[CapitalGamma]", "/", "R"}]}], ")"}]}], ",", 
               RowBox[{"(", 
                RowBox[{"\[CapitalThorn]\[CapitalGamma]", "-", "1"}], ")"}], ",", 
               RowBox[{
                RowBox[{"R", "/", "\[CapitalGamma]"}], "-", "1"}]}], " ", 
              "}"}], "/.", " ", 
             RowBox[{"\[GothicG]", " ", "\[Rule]", " ", 
              RowBox[{"{", 
               RowBox[{"0.025", ",", "0.02"}], "}"}]}]}], ")"}], "/.", " ", 
           RowBox[{"r", " ", "\[Rule]", " ", 
            RowBox[{"{", 
             RowBox[{"0.035", ",", "0.045", ",", "0.055"}], "}"}]}]}], "}"}], 
         ")"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ")"}]}], ",", "1"}], "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "\[ScriptB]EHi", ",", "\[ScriptB]ELo", ",", "HWHi", ",", "HWLo", ",", 
     "\[Thorn]gHi", ",", "\[Thorn]gLo", ",", "rM\[Gamma]Hi", ",", 
     "rM\[Gamma]Lo"}], "}"}], "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"ResultsByGandR", ",", "1"}], "]"}]}], ";", 
  RowBox[{"Print", "[", 
   RowBox[{"MatrixForm", "[", 
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[ScriptB]EHi", "/", 
        RowBox[{"Total", "[", "\[ScriptB]EHi", "]"}]}], ",", 
       RowBox[{"\[ScriptB]ELo", "/", 
        RowBox[{"Total", "[", "\[ScriptB]ELo", "]"}]}]}], "}"}], "]"}], "]"}],
    "]"}]}]}], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"9.494433496107218`"},
          {"9.889115760903605`"},
          {"10.74357997210794`"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"11.014622337759045`"},
          {"11.882594771245444`"},
          {"13.70072735943239`"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}]},
     {
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"213.43523316062206`"},
          {"70.37394247038945`"},
          {"42.456016177957466`"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"104.81679389313098`"},
          {"52.58027812895103`"},
          {"35.31455004205211`"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}]},
     {
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {
           RowBox[{"-", "0.026915000242126008`"}]},
          {
           RowBox[{"-", "0.022225406814073034`"}]},
          {
           RowBox[{"-", "0.017558198463629826`"}]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {
           RowBox[{"-", "0.022144975733509153`"}]},
          {
           RowBox[{"-", "0.017432394102377402`"}]},
          {
           RowBox[{"-", "0.012742307279628107`"}]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}]},
     {
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"0.004707317073170847`"},
          {"0.014414634146341587`"},
          {"0.024121951219512328`"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"0.009632352941176592`"},
          {"0.019387254901960915`"},
          {"0.02914215686274524`"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$, 1]]]], "Print"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.31514564245074395`", "0.30096286820857854`"},
     {"0.3282462024740639`", "0.32467929398311796`"},
     {"0.35660815507519217`", "0.37435783780830345`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Print"]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{
      SuperscriptBox["\[Rho]", 
       RowBox[{"-", "1"}]], 
      RowBox[{"(", 
       RowBox[{"r", " ", "-", " ", "\[CurlyTheta]"}], ")"}]}], " ", "-", " ", 
     "\[Gamma]"}], ",", 
    RowBox[{"r", "-", "\[Gamma]"}]}], "}"}], "=", 
  RowBox[{"{", 
   RowBox[{"impatience", ",", "temptation"}], "}"}]}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ClearAll", "[", "\[CurlyTheta]", "]"}], ";", 
  "\[CapitalThorn]\[CapitalGamma]"}]], "Input"],

Cell[BoxData[
 FractionBox[
  RowBox[{"0.995`", " ", 
   SqrtBox[
    FractionBox[
     RowBox[{"1", "+", "r"}], 
     RowBox[{"1", "+", "\[CurlyTheta]"}]]]}], 
  RowBox[{"1", "+", "\[GothicG]"}]]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot3D", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"{", 
          RowBox[{"r", ",", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", "\[CapitalThorn]\[CapitalGamma]"}], ")"}], 
            RowBox[{"-", "1"}]], ",", "\[ScriptB]E"}], "}"}], " ", ")"}], "/.",
         " ", 
        RowBox[{"\[GothicG]", "\[Rule]", "0.025"}]}], ")"}], ")"}], "/.", " ", 
     RowBox[{"r", " ", "\[Rule]", "rIndex"}]}], " ", "/.", " ", 
    RowBox[{"\[CurlyTheta]", "\[Rule]", "\[CurlyTheta]Index"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"\[CurlyTheta]Index", ",", "0.", ",", "0.05"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"rIndex", ",", "0.04", ",", "0.08"}], "}"}]}], "]"}]], "Input"],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJyU3Hc4lmH/P3AlRaWMkL333sm4P/bee++VkZG9STYhI3tklWRFpbhQ0pbI
KKRSVpFVRP16vg+nv54/fn91HK/jPO77c1/XOa/rLWaH8wbOB/Hw8MQO4+Hh
//t3AU/Kbjr0Go7iSsXn1U9mADMf1t5xycKeZ+pSNofyGUO6ZCQdFfkZ5GdN
tyRizhtA7dLb9kBbMeTlxLI/C431oOo53lxMpjByz9ckEaWm2uAWQ8Ik0y2A
POoTCx52TQMmOMlL1HC8yK+5qckRuKuB0YQaE5MDF/JS9yjyk4kqoPyHiD33
AAfy9BPR599+U4K1J6bV7gfYkIOCo+rrFEXAyKnD+bVZkBeIq3AKmSqABF1J
eu8wE/K1SdfCTlV5EHYJDIllZES+85i+jt0UIIC6Ng/7TIf8bbT0+7d4OLiX
s3Eo4xsN8tc8MXRiUbKgrDAqSSVIDYT3t3hsf1ThdMoPvF/st4In+RqHdDVw
yCNFjqsQL5rCwaVgcR0XKeTLdJedCcOMILdIQVccJ478gcLhHw3z+sCvf77r
Dq8Ici8T7sCMCV2IkFgnEC0WRG6v/M6Hs1UL/LgEKyM/8CLPrao6fZRJA/qY
L/csjXMhn/euv+/8WxXETHMbX1lzIK/6pckvxKcCjPVJZxfU2JCXa7y4OFOq
BEMPTidbxrMgv0Z4CPdXTRFumkh2uB5kRr5YJUxuT68Ah63oIzhcGZHr0zJ6
GlPIw4VwFv27DPTIQzdUOaZ5AFQXSOkH6GiRZ6kT6RU1y0GNwAWLcWNqYA+6
v/7etQZX0tAs0nvCHmaEH5+I55VH7qH0u5M83BLiz7DN3ZCQRk7DrVInTGgK
tx8TjHe5SSB3cv1xe3bYEOSEAqaH10SQ8/2hxFvx0gfFH450LFZCyDnWIeko
rS58tk+cOd3Ah/xkxmuVutNa4PJDoZbhAjfyc7xZVmfK1aHlbtgz80EO5JZX
qtdkslSBpeHoU7ZKNuSjn8YfPnqjDN088fHwnAV5TmFM200jJfj+oTpk8Cwz
chIeNjlLQkXoDt9s+97NiHw8jq3bZEYe7Bh+zAa60SPvkG3+YfsZQKR1pFrC
nBY5z3rsn/K/OPByU/nRmEANCiKRmMVkLe400RX+xG9OcPOie9GSryLymo0b
aTVsdtD51CvEr0sWeWT6G/cf2hZAqcNFWvZTEjmbU/HqUQkTmCFMv0nzWxS5
r0/a8UlpQzia0kwsQSqMXDrx1YnsX3qwQM1TX9rEj5z86GjOYwcduHQ1Z+aa
KA/yg1HWNNkXNYFgZUbgtCMn8qoin5RZTnXA6O8stZKxIx9lSYxQ4VeFFRLe
l/WsrMhXtHKmSiKVgXfOgEw7mhk5z0oP7bHjShAiLfD53Wkm5M+sZ5yfPlGA
fvLz8Wa99MiPtFfe3W6Qh0AOZrcnlbTIt7MembxsBXCz/2zu8IgabL/hUkaN
ruN+3Vx7TXLSA4p+btefpVZFLiDozHM03RGKMgldh9oAOdn8SKZbjQ2YvbQn
z6Q+izxrSDk+4Kw5sBDOfckxEkdOfLQ7vsjfGIzUJzevbAojdyp+Rzp0wwAc
Vf160n4JID90dXFgKUkP2sW8b7Yw8yJv/yZ8ZrtFG7aephfKU3Ah57PBFdj9
1IBrIedHiQvZkT89xd2FtahBXQ0R6VYaK/JVRy51xecqMCPIuRw+xIy8X3Tm
ZDqfMhwvE3nhbcWE3Iw/4Mz7R4pAvUQdRCXMgJzFhCpZNE0B/qY3BAzs0CKX
xBncx4XKw1AgsfCXkzQQXnvAxOTZDZzEWUe5KUZ/SD/NZpv+RBu5+0hnocgT
N/hzqfbW2GVF5Kux9Wk9lg6QIXvQl5lJFvkrmjQzJiFryDY4fZqGXRK5n9l4
DE7ODBLkU5LoOEWRb/co0oh2GYF9w4KCuKYQ8r4rvMJjbAaQjeH4OtT5kMsV
+Z8KZtYDTNb41uwSF/Ll4suGK8TakDo/fKQbOJCfORMXcdVHAxKdjutInmBD
niASleatpAbXj8QpRkqxIP9u5cy06a0CtU0XbARuMiHnW9Nic59QAukHN3ve
tzAgbxpreXIgVhFmu2KDP7nRIZ/oOXcyykABLib7/vVyo4Grjr1MQ/I3cR6V
Zn94NKLBU4ThpNqMCfIv7OycNHM+0LPY6X0zSg35Fknrr8QPLrDFMWxA8haQ
55bcOx6lYw/XK35rPb4uhdxpdMdFYcISxiTEJWTaxJD/UZ/5FWpiCgHKVEek
jISRBy0aHTSjMgKxg70/Ke/zI/+pR6ZFXa0P6VIrvK+3uZE3egoWmEToggHd
6JdlIk7kblXbeQQ+WjCZd++eWy0b8gJuDv6BJXVgdaqvJGpmQS48/kipekwV
nM1a5fCImZH3eUcJiFCogE/Fc10bHUbkvTbbk4SZSnCL7G7z9he6/fZ6Znk2
oAirnKTLvgM00MYQv6B/pwHX4Rd0bM6hELyehTipE/siN260D+XMC4XkwxXH
qWP0kQt8Ezglb+wNrwtVPKtylZB/Lfs5bwrO8CTrZXiapSxyn43P1Qu2dqD5
ri+LaEQC+YDjdgVWZwHYX5Fg7gYR5Hdqau0eRpvAWJ9F2/xlQeSBQ3fX+0IN
wbsTTver8yKvmK21GRPQhx89jW1//3AiXzgRcpi/RwcMMzZTv9izI9fjfu1Q
PqYJ4/aHBK/LsyJ3yXQpKLugDvmWRZ36kczIP6Vt41j8VeF6TtwF/INMyC9P
O16936kMp3strmSF0iMfG59oVVNVAkrW7xXd6rQw78n6zpWqEbej2ZGJx3EF
c7szf6bZ2xnbcx3nOz1tRBnAeOTBdzY1B9ReioU94VR4IFDrCGI1s5rI1Qu7
raviPCD12VisWKE8cvarlALFY44QHXbgT++0FHKLsXRvVkpbcCttf/soUmy/
HiWDad9Mc/jc0hdQvSGEPJ/Z4DN5hzG4lcQPfJnnQy5K/2nKedYARI8EiVXz
ciN3Xeb97N+pBwcHBfy+yXMg39bV4K4i0YG8SH064m+syH0m5BbkNDRhIbFx
XvkQC/LRYirpW3/UYJtlfinXkwm5fwKTbgWJKkzqvUu/x8GA/MKYPPs5D2W4
crChtuAtLYRoXMSqBxtxEe7torzhEViaHDN/Zrcqtuc2E5lx3AY1WDl7p7Xt
pyDkhAF/W283x4PVbULSC1pm6HNGx0UuFEX6gyrTsSMKSyrIbTXbre2F3MG3
xp6fLVUOucuy84ZEuQOYMyZnKhBJImdbtxfZybMG7pN53OWXRJDrfn56bvqy
GXBq11+48kcAOXuG9GA9vjGYHMR5dpfxIHeTfSMlZ2sA9/ofj8UYcCJfuGj9
1thID6an/HtD7rEh/+i95EPgpg3Lz/MaflWwIKdtvN7g2K0BB5Uc5prnmJDf
u+7JUZumBpEmAiLmSwzInYi2hBaaVGCTNfBbXwgdEHLNVM2kNeFIolfMD9fG
Yv30pUNPvupge375npUL4bFeWBfvfPbkeRZq/+NS/JJrazTkXFxqU36nj5yX
XnFK4YwvDGSzeperKyKXG9EOWpFxBYVgH9ozg2eRB+dLf29Ltwf3hXuK9vVi
yG99kuonxFnB3xiOb0njQshXu9cMeKpMYVXOcSogiA85w0ZPDIm5EYRcvW75
qZwLeY/wdmHQpD64seJrpzazI2c29Tf6NaULXgY49k+2rMinfKgDqx9rwcDd
IqWf4czIv66skZXJacCfUrOXzmOMyInu52vLMatB67pKaJ8EPeQRqKSwqTfj
1GRClSpMkrCzq7mDIz+NsD0vG73o00RRDIf1p6wvtnmg9h1B6XKOwmHwwPfa
ismoJvJJxhPqDe+94So3B+3ERUBuecQ691u2MzQMrkjVPJVEnvVoJ7yo0A42
1uNUf90SQY5LvJN8+rAlLLxX+/rrrQDy1aNFzu+emUBCnGb3EWUe5JXUZlOr
dw1BqIT/lsM0B/IRB3NVQ2d98DZvnw9QYENeoJLh/IlZF1QTFHoFeFmQ/7X2
GFgW0AI7ysU7VQFMyO85+0qkd6sDw9wcRkTGAIN/eCU68Fpw+SVfJo8vBWPL
4g9XqLmkMI5P1T6Oh1pw3yeutmZdz8biYt6t81LaIW9842D0jfEyKIzOOqW1
WsOeD0zoWlmvBoL/y5a+91dUkJu9+fitYtMDDG5dJwxrl0Huoc+vPcruBIHe
GTcDNcSRMzBEBpbE28LOnb9dh/GEkTsMjv2ZmzWHJVFHfUorPuSc7KVu0wdN
YKnnsHCeGRfyKzWb+JLshgCxrv0njNmRjymu+nOt6sHth0rmr7ZYkBdPS94q
8NIBh+q0yg5KZuTSbf1nLIs1IV+f7aoSKSPcxo6YVHT9+95Dx7q1PSKwU36n
PdhUFLA9n/KtXmF5UoVd1ZgvU0/wRX6S7qPcdYtLEPA98dCvJUP0OUHR8Xxb
k/6Ap/bqjthbBeTLo0KXWvLdgUKRgiNVSQp5eyHzmPRXB/B/KJF5VFQU+deU
r8fi8WwgYUpimYxWELmk9pmZ/zx3GgtXxOsR4UHelqBPFahmDOKkrtsZ1RzI
N+P8nSavGoANsQzRwzVW5EdMmOXsE/SA9UdHQd4wM3Lmmiom+x5tOOkWn7BK
zwSKJW7S06GtuJNt9TLqabHYwZROxiFJNWzPc/6cl4mUewr3DHqsAu5cQe3z
VqH9CXMMiHKQ8i1XaCNn6RyoK070hbSWgDlWYkA+qLD+RrPAFWy46E5mBUog
V3x/W8HzlT0sJic+IfcWRm7Tc1bVrdwKJHSJyU8X8CH/m1caBWumEHjE4Ai7
NhfyOM/IW2SFRuBcLjbaxs6OvKjroDwxlQGEUTQPL91lQb5+VPP/zgvbSwtf
Z18wgfL2zMBl/1u4RvORafsX2XBH4V36/E9XaH73RvtIQCNuRje59QlXEcZB
R7Dj6+SF7fnU5tTf1MQkmLjziy5O1xrgrpioilATjtpG9uOLdxhGxeGfb7h6
GRvIzTkdv9CEc//VeHsgMh4T+X40qWlIH/khvKBDRM61MDJFPttbEwQ2FzZ2
equbcR+ip0Poh9OxRle+G/GO5tie/1XlrOm8fwW+fygg9fR0BAHZnVPxHi24
nyV/3Gt+BmOn2UIPyTSewb7rm3466NCC+0L2kp6CoRCrrRk6zHTQBbkJc9VQ
q3My8BvNPH2zYArhgnf65elbcY42QtsOGR0Yo+SHD16/4rHQyavKTBJVuICl
oIdBY3JQzCgx2UlLA3seZLCDfaaQg7OV5OzM8tTAJc92mHznJk7jwrtjH1Ui
YFR/IFFmxhDtZ9T6l28UtmHAUKE60v05C11/0zoXDZtDvVjkcXaPDMJcdJ0F
BM0+jivXAF8ouYdWUwi6L3wHCcOjc+Kx/Mx75GE5Rtje9V+ue36XLyQae7T2
peIwuSbyyNtq4ZqUGdiz678p58mtsepithaG+CZcc6eikclaMJbGMm06eFoW
tccEm2XcpmKhkclRLL3SCI4L1m/+/duEY6OKin9OFYIJ+xfzZm7LoPsof6RG
V6KsEIuZbtl8KuGO1rWDKfPpDf4RmJ/MgDt+tRJyoVXt2fn4asy9Lyv6pMYF
dH/tYgNDFXyjsU+yQb0GN1SRp1j8uMmr14kpfFdYGPmRjOZ5mqXMA6kFsViG
b6BZLYcm8rWEY6sblH2wM82l62ybDXv3ffnxhGqaWzzWXkBAuXpBF/WHqhut
zE+L68CZMjZakScQ9Yey2885AtyjseOJLlGeRMrYnrvlWrZez0nHeEeiljXj
TLAP5LVqNH6tuD+phirXVoKxIdnEd7T5Eqj9HFmndqdTHNg/sH7Ye0Qfjcfa
PpurW+ezsWMmvTztyVZo/hFg0lh+6HMZrjQefnfE1BI9Tw50fuS+eVYO7jg+
PDR4hAb1N86P22VV9Ekg9LPuwJ86OzQeH2IDz5YVrkCoSmDnUUdn9LsYP332
OCKdA9UTxEVzH+3RPpCwq0hjUaIIVNwsJkd8vdH8GaE7mXwSrwTu+EowTBW5
wwcXklhSrVYcdp6RKJ1qAmvlFLZ8cKoGO+6Rqyj0+hbu94uPl3QOH5D/muBo
rhz2BnSuhV2RVGnEUXvNGAtF5mFRNzUVRbvdsPcx70MCDzThtF6Qzb81bsKe
rfhGp+XFIKf5zLJClZMHjH6W9Xo87kAjncrzuqsJ51jQteO1GIxVTHwnbtqS
xsRefnttRNOMqwo/fOTRdhim7cX0jFtEEduSKVFaC2rGSf8yO65EHoXh1K3n
NRlVsJ4bOu3Zw8049zvM1mQBMVj41TcrH43UkS8VmasMwiwmy2hfN+9+G0um
+cstKtqCc+0M0GyYjcN0dtYvpvNpI38Ws94o/CIXKxw9Gn/1igN2+pftSb/v
LbgKDY9pe9lbmItsQq8GQQhydRnLscj3+WD1+ZJUOYUzmh9mtNjDGztrsNR6
vWsYYyh26dqB8FGjJpxtZSdD2kIw5luTqJFCJot+7+wj+qJX/z63P1HF+b6w
DBpfN2gYGJv++fQoEQvfXWl0HTIqX9Zn/XP6tXzhRiVp9Ht/fLE/ubAZhn0t
6cK+/pVH4678PPkibU0oNsvKikeWBmh8mX9uuR16PgKTuj2hfMRREV2H20Hq
NV7EUdjw84NU+c+UUHvWw6X3W9mrMatBJq9rg35YD0086ZB8K+723/WO1blg
zOOyYEqgqwTWfH5uMHr0Gu7ApuuILZcc5Pz29DlSSY36j04mnt1V+Sb4Y5/k
GaUSB3v97WMOMaXI03Ls+Xg/WfxTf+zacuoihW0TbiUiYSYo6t/9pW4bn/2i
hc4vwbovreeC/p0feRU81alU0PURI53RqfdqxMTDpM9Ou0QgH6yIsLrxOgWT
5nQ4r/PLBP1eIlml4NyxFtBcKxMt14iBPe/JvzAYfDcF28kAa9IcY8wg6VbR
4OUWnGDow2SKn2HYztgQecIKoH1XHz1ZW+ehEKz8hQnfz6Az2N74iumfohs+
F4M9MIxmCUlXQfODLXb9ygGfKuxx/YrrDzsfdM6117D2dQlPwl6x/JDiOG2G
fi/r31dkEl+zMe+R786XnR3Q9z4Z8fnbJJyEjR5W6lxNM8D2nm9k9P/wpbGP
h6VfgeNEUZYQmSZu84PiFk4/7OVN49+58Pzix4An4p6wd5158PylDwRkYqFh
jE1T0naYp62s7e37TbhKxwNjh7fisLnBJ7p5mXqonineqs+VFRlQ/nQFczGz
g732cZfWHNiDmyE/8mrDLGksuu+0fQeExoaasAc/7ahdXOOwvXpw1w78PNra
CLMtnDJzlBfRejokrnJoprMaWr7djUveCQVKcr4jI5WNOI5V1+ZvGeXYoJad
YgeXH7bnNXfWecgul0PnKZ+BGh5/tM6qtear3JvsxoZNYjNjZbJRvwoYFQuv
/BuGSZDzFnpnKqH56hnN8/iTjFFY8R/CJnw7dbSefu0Qa3A7HIJVH0r49fO1
HBq/pZeI5R8qJGA/IqZ+pKoaIhcf4v1cxlSOkZBd9X108jy6nmxc9zZnWPMw
gbuudefkndH6axjEuRq2no4RZ0sSZ9JZIo+7y/Q6c6ELc++2MbxMn47mB1+z
o+rl/dmYFk+v+HFee9TP1RzHL9H9ysVyVWLfJg07ovkhkdtUmlY9E5sa4/ds
trNCTsSp+cNnoQwrjpUmapz3RPPGaNr3NzY2hdiCbMHOoThX1F6V9O+Yo1gC
9uq5rnw+pQEaR6bnt+i08BsxI+u2RgfSMLQuN6rQy5p5RWO/1EZv06qooHF0
6Crf5Pt/40UmTjZ9YegMcsnm8++et5dhr3w12nwIPJAT15Yy3ZqvAMIwg+Ni
Cj5oP3Dutl47xeR97FZwGMkvhUQ0P1M+s62/XJ6CTWvfPVltboTWcfbvdyHb
Oh6jOhBY97ZVG43Tdpvn3kprYdiSxUGhLnxAXrmhzBrHkIktpnmbL/CZI18M
OFdSGV+Gcc00ZXQbuyMfor7f6JOQBXe/tz/BP2SL1n32WBGlD+9kIfONmvXM
VWo07vqkYjmoyg522xNej5ZLH0T9E9u+/ragNxP8Ws8dIUpzgL3fZaSja15+
JApjdex15i9VRN9rl5j6KkutEiKYHM88jzgPe/Nw3U6/4OsnshAgmRz+WJIa
lm4NBTdbNOB6DLuuJ59OAAXvh7F+PDbI66dTBhLPZIKDNU0MFZcLGtc1mYM1
3PMpmEj171/2KWaoP1+o9DI2mmzEqGl0PoUcjUb9sENA+rPejzhsZoch0fKI
Lrov/rXeLxk+xGGfHj/vak3QRPelsNshPvZff7BzYjWQ65PEujDjiz3rLTgZ
WdlZuvlgzB9vfkh0WQJ9TpopxVeGylysjff1TmSQPZpX3XMIyzhdIzDqmxF6
O2ryaH64ua1PzmikIX/JXeW2xVE6+b35QZIw08d/+gJ4XhRgyJVUR/OG6J9j
ciulEVB/CUuniNZH809tYx63VUACdH04lfknzwLdx+wRzpSaj+WQI4RHYqvq
h54jOeCx5O3MVWPnuya3QzYC0LgOI9SQ4duKgFl1AYNSc13Yc0ZfW60P60lw
p5VMUUDNAvbmEynBdy4TkhXwrOy+wqtYX9gbFx6fU+os+D5i+SH4i7dsG9C6
EHj+0tzhtGysLupnlLi8DRqPIkKydPxaASAoJ6L5IUMJjSNC0wNfcowj4XJm
xUuLUC30+WrX1QpHxBIB+yvG0NdjjJ7zsAnL90wTXIILT417O94Zw959Z/jz
StRUPB+ErtfO2ky6gNPPKJ7zqY24MlObhwOLrzGt1zUiisKVWJzG4Pc+wibc
iVAH0fZ/+yLcWbVpmt/7+6LPdO+SP9lkYrSpZSsGGjbItxRxadeVVzAZA/bF
KzTdaL7y1x3oOPCnFooi7vQ4jQdCmRc+di6kBZcTUTJzkaofW33Po9ordAX1
k7WeDO4ExiTsmIYS+4EUfeQY/kmr6ZAS+Bzdqxn+wA3Yn9XFkh5vxTl8em9I
vh6M3RyhvUPiJIntrVMHH4SZPbYKBq8bb0XxGXXR+kVdvMxjVxILPYUF9k/k
TNE+x1jeKUvAJRMuNI4KfH7khPaN9FqGx75GRsPKGKeuB4ERWjeb70gS/MFP
hTfCjwkj1O3QPv/WGWmN159CIcpFc8ZuQwf21i+OJJneLMGLIJ/sU7BsbAIM
YXPS9ENNOLUGcYm3lmkYp9mTTr/e/fO43Ne7j1M+BcNVv6p4jk01dH6fWn2h
Ec8cB0cPD3fVlxnA3vxvGOZFs8WaBQQm/27BmB16fsXVxnageT4acKrDaXq8
emgfFaVXW+9xJA0+4ed+Foi3gKfkxxfHCFpxclTDlvNfojC/7XEsQV8J9Vvj
TuLw6agwUKWiYSOzVUfzXjrt5tTFhxfB4M/PgGE7A/R7j/U60qwfTMVEXVnl
Ss0ssL3rxhiXwGguGQVjvBl0BxoN0DxmWkpiT3UxFVjZHln/5bZGda6963rd
tB0FWmdxJMZaOmgeSCTZJq46cgWCekNqUnL2+/PVcnmXwEPXIGl15efVXwFo
HAkwsHTr/r4CVUczMfkiB9QPYzyoSKZ7qkB264Mf10M/dL4rlc4Z8BusgbwA
EzIsLxg5zSPNsa+dSTB15cR742ZLWBn6cLJB9d958CorsH/PAtakIKaJKUe0
r9Os/+Z24msccNyafU8saY7GI5dz9A/7kIsQIrmQL8JkhPrP38y2IqPDV7AP
U+le0y8csb3P/yCZVkvufQ1ME0jeEm5fQP05o8+XVnncE2bHNb944ynuv8/i
K2xIJPGFm3QKd+NSlVG/fTnRw4NXEwBmV973+cdooN+1VEpNNa/mB89+6c9l
bSntv6dw77P0ag+EET/ajMFFNXS/Rt1IfUyvRsGX13+WD7Xqof7ZzMDQ6WHm
BZOu2UykmBzqh8ENLdnqdr7gqV8ouhwlj+5v68oD/CaqQIh6/ShnLEEZnbsJ
ixaPtm2dB1/iKvMCVxX0flCsLcjvqK4//MgjiPCYVEfXeabmM6OCVwhs3xoM
/h2mh+btwhN/LO1VfKDaY9jj7IA8mieD+2hzchv84bKjQdlOjRK6L49s/YT5
d0KgPzKPUslUA67Z9qqYPGvGvRUY1+36t96xlFOGzmpLYUdIZtuzc5pxTkxB
v77/m39ajYau5Xmdxc5saK/rSLTg7q34y5X+mz9Liw3cqiLPYHv7DfIOF1Hj
bGMwzFgmOFF6BuWsYh0erY+eNwN/rsqPdwnOov3J4OZ8x7vjhvBrI5mPRXQ/
nyYk6MwjLWcM1jYfpZV5JFB7JkXJy9sn9YHDArcilrSfW6O0HDst+dwAburj
DnZIiaL2QbqGEYfmdaBilXG03U0ItadgVuCOm9AD382QjoB5IdR+qPLYJx0l
LdBI0n66Yc6P2v/ckma6cFUH6qMcOnjo9/OHziz9rkvHNODrRkO+TSgPav9B
9tTU+4NaUCl9QIKcZD+XGPot7pY7lxqYOoenzp/cz8u1tW3g7wyrw2BVXU7h
xf28oroP/OmnV4ZXbpd+Lsjs5+U2d1Y4aB1U4BGHQE3Dpf284rjVN+XmKUXY
eIrvdKh1P0dnTu/8PXpHCao6HkqULu3nGIk+4Z/l61MAfYUYOXGr/XxdN0F+
55GHijB++AH/q1Rm1L6H39oAnsnDlUAzMUF+JtR+OvBcuk6DAvx4plPJZLyf
h7R/lTsiMg9Q4BOP9QADan/n9Q381DZ5MJ8MdZiKZdjPVaZs3BZnBHA2NN6g
sKdD7YfZXag5RgG2mCqVWPL385N+ByPn7F/KgT6fLddoMw1q71R9T9HtJMCN
U/0J3z7QoBzaqvvon3EeK/AU/3VtY2U/vyeoxuOegWf2b32RvLR+QRL5Xb1t
Y9FFIziWGoLvzSyGnOkR3/OKNANYfxy44ZUljDykZKUyrF4PRLb5Hc5RCe7n
6Hw+DG5p6MDPNTbamy9599sfu6f0q0cT5j4Ql4Wf3s/1yX/b4dB8pQo7CqN5
PZ/283s/210zJ2VUwNZpNODNWVbk9UwB759OKIFrcPZxoaf7+b37PsZDg7WK
wFX9deZ6AhPyuGrhgoFcBUi7e2+p+y0D8lPG9zU5KuShzWjio/QkHfIVv2cO
Fn0Ad+IzxKdo9/NmQl/x15aL7cAeT/1hUa0c8ldpawr6VywB89ip5RWT2neZ
IsLnOabgWuHPb2Ugjly0lmyWvNgIbB60XRH3EEGepyH5nUDfAChPHimZ4RFC
ziDfZvo2XA+eETIeKOnkQ56quXj44h9twCnf5hV9zY18scmgLs9LHabpyKW+
muzn9PxUP8+RXVOFawXs20V5+zm9qcutAkanVYDAXTjiBQUL8sH2hpWKTiUg
LxL2n3m0n9PLO6VaSpKuCO0sXwvJ5BiRyxz7ydwYpQA6n8I3asX283sk9yy9
idPlQYPFZfK6036uLLLGgsNW3gmOanSmftaTR/7tTpKft6gdPNw5dWmqVBq5
/9YE8ZNDlnCXksWfeU4CuQiDRJG6oCn0/j2mee+iKHLWi9Tbt/WMIJcu713x
uhDyzTsDzOqUBlDw+O+HBwv8yN0yTodd1NGD50ot14LbeJDjO/IdL1PVBCNh
rY8dn/bzeM4CRGmk0uoAPztoLxOyIb/Dx6DWFqIKH6fKuhJ8WZAv4vkdC1pT
hrwGGnIx0v2cnuE1lwiCMiVgOiTGOnePETme7nvdTn9FwD1Zrz1YTI9cjnfz
97ybAtQ66OOl3adF+TEbnU3L2EV3SFVrF1r2UUJ+1VFEdarMEQ5ldF+dZcAh
VzuclXW+2BY4eBO3r1NIIZdyzMXvD7OA1HA14dWfYsi9qJON+p+bgE7yvZSt
TWHkk7WypuuHjcA79PpPQldB5DOx6oEmE/rw6v2lzaNveJGfaj3+Xs9DGw6x
hvGRZuzn7uaYKx3IjmuCz3rr8LHM/dydNc36yWIidaDqud32ZGo/dze0IN0v
oKcKClEdE5YezMhbTB44KLxWBlaKY7FrnPt5PNGGy3PfY5TA5yRxihr1fh7v
rPFb/jFzRbDevBp5gn0/J0ahJKKlv+MLr5dAiXJHHbl/TKTsp49ucOaXG7+/
ggJy94wM8U9HHcGoUdawTEAG+U2BeeqGSRuIMpJXEf4ugfyxFsP1yV/mIM71
VuyjtijygeaDKsTeJmBxbND9xTUh5KkJRIKNXYaw5XGhVFRiP3dnPv9gRHVB
Fyyk4Zyj7X6+7vD2jr4PmzYw+HKpxomz7+ffJFs2J15rgFsnSXabIyty6qiA
AuExNTAnN0gte7ufr3OvMxAO5FSF1VuvqcSimZBP6tIWNTUoA1Md+f2tGwz7
+T07y15LJyV4pOXTRFlGh/Z7VGGEkUetI8BLienE7bOG+7k4TAG/f9sHRDtc
xl0X9veHUWs+GYxLrmCgxJws6QvIt1ievTwX6QBV4x65RE1SyB0fFW8/5LaB
k3Ff+nkoxJFr/blwtibMHE5QThARTggjv3FKanWazASE4pgmbTYEkPPFDUhH
+uiDhkusUb41134eTy9yeyNHFzKvHbm88Hs/R/f10Llh9SktqOD7IuN5gA35
8aGYMz/zNYDTUYnsuzEL8lLHE8t9dWqQ7aXgZDC7n6Nb9PqQcOmvCgQl6uTI
mjEi114JUsf+7fvfO0RX4gvRo3NBx+L4kMN8NsiIDheeBlfkn+tJS20fhIII
XriOpKce8vQEttSS0z5wgzNJI8VFCfmBUwIbpSdcwZZqrD77tSxyr8GM8zlb
9vBnvKS4K10S+VCV46GNCGtwfj5RFxAminzYXCv/Ib454L1MfjVZsJ+jM9Eq
4aU7YwhUBm8PCubu5+XoTMr++snog7blgyPOi/t5uRtpbR9nFHTB0ddX3KWT
DXlLtJXPi0It+Gp0YeDUt/28HPnnZiJDew0QPOd3idCRGXlC9X0e4zA1qPV9
GUVAup+jk30ycdRiVAUuURvtPB2hR+e1qajgcPzDRdjWBvnDN9Ke6H1BRMaT
lWrjDKjgdrYXx+2/B5yOeyOylR4M/WoRcu99tZBnCqqMP8j3BryD5IH4OgrI
B3qF1oVxLtDXt5qvJyaNfI3FVr440h56jPU+nG0TR65VVV+dM24FRnnih9Mp
9vNyjfod6hdcjCFbxyhYmpYX+cz9dbErPw2gci63Ro2MC3lbgZbNFyJ9wK+P
2zpVwY7cjKCb9M8PHXgXlviIpZwVee+w3NKCuRaMsb6w+LDKjFzgofjQFx4N
2K4SXZRO2M/LBdVltQ1pq8E2/hVbzkIGdN7UfkzlIRgUjX38tpm7wayB3mvw
F8+K6Y0nweCaYHLoTwvUPnbSV+kblxdYG0rKaCQD8uyU84Hrkc4gmJ+yxb12
BnnC62Pmb4js4UB4uxE1zX7+7Vt4hf4tFjMo/KSJmz7Cj1yy7X3tyCljWBFJ
uvwlghv5eGufKMVdA+iacLryoo0D+XkjjdP9o3rgSr9itxDMhvwYacQZnkod
oBvCY4wvZUEuJO05nEutBevNodgxsv382wcs6ULtujq8umG3NBLJiM6tF2Kz
2RXKYzERS+oTj79qofcOxZ8pjquf7sLOkJFxqwemImfvnTI+8N4D0jmUS9fJ
5dDnlOAoZXSeO8H2UNvw5l+J/RydI9HrnuuW0BwzYzNwSRA5VV+cyJc7piDZ
LngrXZUX+WmKxEyKPiN4a53y2PAYF/LOGeWZS+EGwLRhxTkRwY784lGtt4R1
enDs3HyprCcrctrCLBoTEx3gZ7LAf3ybGTlNdqYBNq4J0SEfsiKUmNDzBOfW
TPZT3vGY95/oP/fF9ND70FsnIUbm5jnQHXl4/meUNGpvpXTa/z/7wwF9LPP6
+f1cmV58J74SvSWY4o1c5c7hR748lVOoaGgKTovKn2Juc+8/x6A5bUkYagTU
V54M2jzgQF72wy12UN4Aqk9Ua95wYEPOc1mZuiBUD2o3f8pJBO/nzbSpGaK8
j+nAkur1vicfmFAewMvP/VFWjh+c8H7PMXpHHvkXxvV6m2RH4JrQGhZ8sp/7
MtZfCCkst4W5u4FkNwyEkIeu/CQ+nWsBxWN4O8wjvMh7HtCfSf5hAj16VwLZ
NLmQ542YzKYKGYHED39TvAx25I9/6lZ+JDSAGWqOEUX7/TzYA+EHvN7aevCR
RzGo5iozyl0Evyo7vlwQCZ+/Pm4NbdbYd8X4x8yFbkA/VfaDyUASefO1h2Nv
fjlA4pPF+bf+IsiVC8as8r7YwNdM+3nvGgHkhWcn+odOWUChxP0ZF2Ue5NZL
34xisk3A46n6gRP4nMjpXtn7xs4ZAvkdNTOScDbkhn5n2Stf68N7cTUB60AW
uHaxwjejpwona8jI/JnIDKyTrtfGDkqBvLbGna7sKhwpVftLwWojmDO73lM8
Iw4TFCt/lpyqcGR39VqjaQ3gIckPh1c//s23u/kl4qrE/+bBkpV4DKuEgLJG
PlXvSBUuo4NB15xaG97ucEnbFPOj90GzD3Q8/sZqQNcBVnqjIh7QPZNJ3VR3
DZduuWhEYqkGp0otL63ScaE645rTS0MlVeCUrIfqhX+/a6/Odh/1JYYWJfiL
b8Vt+G/fu1fnVg83/TN7RVCeszXlDGFGdQ6UNjWeOKsAnUZS2CccE1Ds1tlc
KpVxXUwefOrH5DJMGaBpt87xCpWFDU0Av9TvS5FedNCNc5IhlqrBdaaRms9V
WoL0KkMteb002BAej5M9WoPL6pSYc8eZQpZDhOLSaUnYGmh54vWuGvfGePpY
MJkRxORvmND0ikLuVUuSkvpqXGPU2WfmN/ThTsPpL9RSwiDqgG/6MqIaV4rz
oLXK1oWMyvmNNX8BeMVzo/iPTjVuwuqSR3qqFgz5E5YWSvOC56rBZwGmalx1
f2j01EkNaKM4mKuew4XqfMsxtMpeqgpg0hf1+y0bqlOQg1z48pwyOLB8SAzk
YEV1ZuEJqGX/Oxcdtqjqym1iRnW2OvJLuHMpwgmNlf6DXkwgsltnLwmvCjeh
AvANLiXwlDHAy9061+59e7tOKA/NHBOrorV0cG63zmFDxQRvdgCGAUrC7K80
MLnFfiTlVi3uuiIx2wWwA1s8GrisKAdhvS+0O6JrcZJH18mG/41rz8jkm9/a
zgBVasCVBf1a3OGjU9qzsSYg/ZHQfH5YDFqM6N/RstbinmVqz2YlGMJ18Q6F
6Z/CoEf/iFlrrQZXG2ZxiUZeHwZ18mg34gVhccbTLfxRDc79icDnY4s60Ny9
oniNgA+SGk7dqs+twX388aCmm0ALvk0MUHvxc6M6Nd8XX+6XUIdw8qdZQqrs
qE7PsvJFFhVVkOC/EFsZyYrqlNtQiBEoUQblbbfYGz+ZUZ1P8qxnjwkpgeQA
1VfZKibQ3a0T/1sCae2yAkwqi4kw/maAhd06HeS/ReSPyINapM8MrNBBwm6d
PQVN+RaTAJ9WFGeF2Gjh9+2vrwk5ruMaZjmzdNsdoTLoQgsVgTzkR2aclvpZ
h7MQsrhXfMwW7mGHNPWXz4KYqqSte38dLjxS9MFkiTm4vHR7LqggAQMnp6qu
Xq3DHT1wJnBz0BjwOD9X5X4XAa/RS4tPztXhngk0f+k4ZAjyYQPDAr5CQFQu
ILolXYcLeO2XpfNeD9KUlCoL8Pmh2v1tCA9xHc65nyPFS0sHCLPztGQWuFGd
JXfXGq4TakLnyR7i7AF2VCeOzzXLcEAN7LqG1JTmWVGdkl+K+oSXVSDjokEb
jTYLqtP2Rc05CWNlMLXFYgfmmMBzt05K6ieNvj8UgSjvcLjMOUYg3K3zItuq
cOA9BSBNOMT+V4seru3WGTIrP6NTKw+kZ5uqnnvTwmnfuqJLRTdwzLWHNY2O
u0MKVZUyx7oi3JbS/9TmdQMn010Qln3NAQabHi5X0smB/sFN7q9yN3DE1o8+
qt2xhsV8TRk6wTPw7WmZDxXJDZw9G9l2+V0zgGfF2sTCYpCcrdauOn0dt/Rn
rMNZwBjmlF5KJun+W6+tlneCmq/jfMd3biklGYC9xeYzTwUB6GXLV6qNu44T
wxnj0sL1YCZdoqn7LQ+qM4v6S7ccizZUL260Pw7iQHX6XQ63bs/UgGe9TE5R
nmyozjaPGPVyLzXoedbWTdnKgur8aVOTxFOsAuolOZuaMsyQtFvn4DJvZ/IJ
Zfjzlgx7usQI7Lt1ijeUTza0KoLHZuA5xnv00L1bZ73BWdLeeAVgEOgKvtFP
C+J8Hq6HyG/iZkd/G4dy+YJcsvPNbDL1f/tcsgaxz/W4qyQajhKGrvB16CI5
a4A8eD+4t+Z0ux5nXbN0IfOWPQiUP7hrPn0Wjl5ykM65VI/rtnyGFxZrBVz3
3n9nmRKHGp2jsY9M63GF5ZtZ5DOmACuvYvO8/62zVM3961z1ONOLx/zorhjB
TGkqdd+QIHyYMj/JsXUDFyuofDTrlAGsSdsJi/7mRXWSkHWL+P87zzr9Inh0
XJET1fkz84NHX64WZLAZGocSsaM6T3U7hHgzaoCnDgUuSJAV1elP3FMbcUIN
/r7ecGgsYYbq3Trl4pa/ftVSgSvGcXnGqkygsFunkw0HHclTJSgkzarqlGaA
yd06H3HSrjSEKMLM8tSWnSgdGH7lE4lNasD9lqRzeyQRBr6P14uITxigHMUB
8hVdWZbzUFc6S3sqSBlSgsO7PvI24HKpy2s2h5yBr+C434kJOeDcfQ/V/yHy
we03djBU6SLm/K/fPiR6rqX48iZux1PnSqyLJRjPbAjHzoqC3aB/tn/pTVyQ
1JUuX0ZTCPuk6I1bEIKdAtrxSp+bOO9IpR1+fCPYaerqz3LjB4PdOo8+ChS3
kdUH76Rq6m9nuVCdb+lyswmXdYC52KH1fh87qtPubccLflItSHP7nLbSw4rq
XPp8gCKlSR1uCD9yzSBngd7dOl1niwzuNKvCJ+x9l/y/edV2t055WYLDqn+V
4f4HIqnYIQb4vVunVN6vgfoEJVhtHfow3UgHPhXft//+vYUT6rS2r3e9DNLp
afn2FxyBePe9+a3NQzH5DkEQdZlPEd9XG+pE5ZLtKm7h6sY4Xp6L8YRoHxna
yQoF9L6SZfrS5uVLTpDxmbG0MEEaph+mUXUr3cIlL3s56xPbwT38DkrmOXGI
2H2vd/xOR4SyvQVollnXXpASARqTiWvMXxtwFz3meiVdTaDtBU9WgIQgqtOS
KY6Rb8sAoj3xlGw8uNH7/VDhYbofY3qQqOBb9fgGB6ozxYfcitVAB5gaXe/7
+bOhOh88ef6eKlMTTnC18MiVsKA6V8+8CXyhqg69kZURO+TMEL5bZx8pqSqb
hSrQJR4p7ExgBOrdOk+FqKtxtioDSXgXe7EiPfQLjH6S62jEJZ2BmotE17AH
Z9aXNksuYHvvr78zD6VsxV2A0S7e9OIiNWjafd+tEyZV4Kh1DmxZ4rn5bQHw
ME7fUutGXL7VREqSrSOIliqzbnWdQe95qVr6qZ8224A7u/KJ4l+iUJT4qv2V
QCPO4DvhBKuPOVjNzwvGPhSCx7v1sK/f1J6iNobfP/qNCmd4gGI3V0Mh9+JE
e/S/cxyDxvihXk5w3K1T1WDOzitMD1aXWOhy/637e3V+jiFiV+zQhvJtIUMG
RVb42/XfOluwDnJBSk1YOllTl5jLDNq7dWL3iUu2ptWgU/NY+Fs+JijcrZMP
d6Ag75AqVESkqJZ8pweT41JPIgKbcGqLTU0nTsZi/PZlpd8+aKP34+/a9KOd
VGOBcrMv59WUIWQUJ5pMnm7CFdMPT/J6uAHBx8oO6hOyMLGbT3C8TV2ub+4A
RdoavbWuEsDrIlR8Yr4Rpz+f2bx6zhpUyo+t6miLoO8doK+oz+42BW2p6+F2
vXwoX5Q/XRGaF2sENsJaITq03CgPoH4uyfQNsQHMn2agDFbjQO/ZuShs/+9c
0HCP4PYxQjZI360zJi2/eYVHGzzajZ1eCrGgHAXeleEWtjINMBhviXpXwwQ8
u3XOv+sYehelBkrJlkn3bzOg9/JdXPGBrs9dwI9tXSj1wFm4p5gZq13VhItY
Xnt719seokQuXCBwE4OZuasN94WbcRQbHVnFvJZw/7bFzRk+QRDdyz+L3x7N
xjOFMos3vzOe8kBMs/z64sFm3JPBN4/N1gxhcTAsYyOWE17tvmd3Uf0ssF2m
DweGfOcJ1tmAfjffgr++2RyRpws5uRZ4+LMs4LFbJ2XtbG9fmRZULr2k8zvD
DHd365xNyaFrFNAAf+u/BhPFjKDOvOKaateMM3rVbSLh6Aw6Au3PV/0l4cLj
rezfi804WUbvZJm7thBBStblKCKM8jAaG6e6X/FbAH748c2UFT4guVwxztvZ
jGPXOJnqr2UCfxc+3R4l4ka5hbfK6Zvm3oYwm99KABQcUG+mwWyV0Yxrq6E8
d09KH0z7ryyI9rKinAAtj/rzb6s6oM/77LHsJ2ZQ260T+/yN0JpOC8iO8FfV
mTDB6B8D7We0LTi26qA5nhoPkHtJM2IgJwP4VZYhZ2tbcPTFPPL9xx3hE0ve
QxJfUdDfzXcNNrkF49nYgKJIrD7HU0Eo3c2rjMU4xPMpmkPmpMHB6k0e+Lab
b3E9nNm4WmkMLGev6X8J5gRpiRuHCzVacA+va8XNLhlAfo7kA97nbJC0m7vY
MTrztGJED1gVj2uHN7DAyG6dHoFlhndMdSC9sHJabIMJXN+3iBwdacHdoOEP
sE7xB8MtH/EOXwXIjL1vE+LYivv4ZKU7cdgVcsaNRp/3S8DUbu5xhfNcGzOZ
A/gUC9FmjwqDgKZTVZ1YK87n5rfk30zWwB3I/GYjih/93UTP1nnNInczuBVD
eEL6DDfKI60mbVPtEBgDyb8T4DwJB8od0ZJNeDgHG0CjR7JwXwUruOzWWX7/
W4JRqB6ctzhuSdvCvJ+zukMu5EWSC4ajl1nr8FzQ/U3j/Jotv5WPFTzbkvGN
c8Zkdq+buPLw1+pvURjf1cP1q/HKyAvkH4l4V6cA8ZGrW35c5ihHFNm2xmqS
mQ0HG1mTyzTsUf0EJQ/e/V1uwS4drsbzmIzC9q7DUadzz6SvFWNbBhfNm3td
MJ3d8z5bln/ByoYcFOdT0X9vp4Hq3fP+MH5JhdQqDuqeZriGjdOgfUWTZ9H0
069+cD+Vz0j2rwbKR+104Sa55LqBs/vdr9GXWWj+6fu5wTbtl4Tdi9UNv3PW
FNubf9xGuL+ezImEIw0E67Uk+ui+xJ5J1eEsqsLYhk88nVzyQXk8ptJzYqSX
0jHNbZlXPz4Zo7zo1CnL8NySZHBqGWo3/GaCnhcRqXXh2y/XgaenKM/AuwCY
bu1cvvSgGedcI5JR/C0YU264NSpyTQrbm6++DN/nwlOMxOQj1ONk3qlgPsdO
c85ON+GUjV+9dMEPwSiYflwgbpHB9sYX3YK3K4FMHDbV5L2oyKKF7fWHWsXG
qkfD9+E8wbL77U8JKHfkZBitG+UXgz2WiVynylbD9tZHt8k3pjwmV+E5Z9Di
Io0XWmdlSAcZGZ7fgPfMSqaHJyPRPP8l7Jz9I6dLGNNsHLf9qCG2Nw+I/G48
Zn7vOuZfo3NV+28Q9on666Z+TAsOl5IC+JWhGJ9Rx0DvczmUy73tfc/oLUE5
Ft3WZxq75oXtzVe5g06joHUZm73JZ3n3uQW2N++FP7vRSC+ciB3UuTYh/c4A
5QbH1grPJ93Nxl7bbwuZFNmhfDjbvOntxEcp2KrWEr28vAl2kks9esO5Bff7
g3Md6bEIzIYtLfe1nQLKdT8LDZKS8w3BVC1Dbt1cPYsd2p2vbInFvil0lMFh
0qArvNc9IWt3HphycRhNFcvC7tb5nTvYbYHyz3nCpilO6bnYWtVhpitrdv8z
j/3/63u5397iql9WV5qwAqoD/EKBsdje/Zq6nydmH+4HuU35U2oNKmhcpKvH
HejpjIXHv+79lh03Rjkxd7mknJX3RUDrYVHywdATYnfXuxdTCz+S3l2Denn2
yEmWC/Bld918cTls4EDfCDAtP2NI46lGuVxNd0y7ejQciE//fnVmVAPlD3HQ
1NFEEAKdLK1WnCOqKD98p8PgFufzZuD50jhINRID/yvvurcffn85wki/yQ8O
xZ85l1ynhvarxV/SdKwC4mHg8emopEILqN3d3+54JlMUySfCPd68b2vXrNG8
F6DWy/KfvByfEsU08zV1tD7OL1ukCrpEQKkpltH3Qwutj2VDFBGLSmFgcusX
XzufJnqO3VGQVXVGJA56IFPjg7ABWu+Ivafw/9rGw6I69xr3n/2/d37ENz3J
ejgGBAc7f+XP6/zPHOn/8r39z10bJu+6lBzs1uB0zIKUM5rH5l39yrWD0zCH
F4lmUdcs0XziRfTqRuSfNIgyYYxIGrZB9+XyWZ9ri6KX4RccD9clsUbni9+v
HMezpqOA5OELT9cCI/i4u/93jh+O4pWNg5jN57lbwmboXKA5gtu5EnYOtpoe
madcl0f7BG+TRvFoCm/QuCNATP4eh/YnR7wL67i/+MI7IvUORXEFdD3fxunR
dfT5Q/sn1rcdzYr/Myf5v3zvHDqfWMX34MY5aP+WX0DGr4jWQTseNgH5aB8Y
Lell+c6tgPr5acs3Qe8p/YBJsT/GM1oRvX85aG5du8gaAH/aiZgGT6qgfU76
yKVNUZdAKKo2p/SgV4Wq3XWKCbcYY5xsCh+/2NCviEshn6wXYKyRtgLPOpmX
Br/lkGNXSeJtRI3AilaZt5JRHDmpJbfRSIs+hGistdFRiiA3kcLm313ShVXd
OfL4SEHk+cTNquNeWqCYfm6d/Ckv8spiZuXxGXWoeBF4kPcpF/Jg5rOm556q
gsB6YgyBPgfyx1tXC6wPqsBpP7xXeDg25CojDxewMCXYMHpFdDmCBfmSMnb7
PLci6N87LCe2zYT8ssShqcwDCmBUnJwtYM2I/OalvLCKbYD0m0rPKynpkSt2
M3x+cgpAUaDklhglLdjuPpfG327JuRZlAYdYnpQJtp5Frpp35Emlth3EEhPE
3e0A5JXX+1RFTEyA+17uDx5KCeQ8r0ifZ+gbgnHg896wByLIjwnJXCg6og+0
ZY1bruJCyOnf6F1dDdIBCae5FtJAPuSGnmJfL2drglpbbFmkBjfycpMB01AR
dfB9Wivd2cyB/Lvn8fwCMVVoWI8pa0lmQ07RQNF9KU4ZWDCzFyfusiA/Mcb1
mPakElQdF89K5WVGzjZ8AOfzTAGiJFO5zOsYkRc9I6NPvCUPv1ZbIcyIHrmL
muhIWCtAi91triG1/etJW5l9/kUdDqw71Yw4Q6mBeve5tI08LaGetg3gJDmP
8TXJIH/+1zqsQN0RqBaXF++GKCAvuEmk6rNpBh36TA9eGEoit5K2L+mWNwaM
QJrT7bIo8ozstvff4wzgRkxC8ZF+IeTlHvEe22564FXSpSOtzo/8Vgj9rGS4
NsT68Z6c/MKN/KJOF5vKYw2wON9bIcHNiZw9Mm6lKEkNyjRVKPm+sCFn/nJw
cKpaBVRrJK+8xmNFfkry+drhY8pQ/+5lb4kTM3L+uI0H8TWKcLTrVcLVg0zI
9YdT4pP+7fvndYUnOUvpkQtZE1wet5MHOtInSxSXaPevA/eRxwznAYyqJIpf
1FPDm93n0mbeDP49t+xhUUCFadgVh/xyYf3r//x/DmVj3x4SEykjj76U22Ou
ZwUUM899lVfOIB98men9utQU2kX8b5UViiG/F/uiykrNCOriibHjkcLIPzwY
eP/5sT5MTS4TlGgKIJ/I3vAcqtcFf/GMGulrPMjHBUojmjK1oOVdWWJhOydy
KdUdjvojGsBUc4cowZAdeSReh5HVvCrUkbbLa5qwIvfZ6d3KZVKBXoXCzvO1
zMgfHCAJcc1XggDszSNqKSbk6iIzLtVKisADszfv/6RHznqSzzuYVgH0EwO2
+l7SIp/z+Onxn//PEyzOWf2apYa03efSpqwEz8JlnGFpoOTirzJ55GqcOuNU
zt4gwtauOU6ljlw28PyZNyZ2YPDDQPUYrTRy5/y3NP1XLOBIW72Gwor4fvs7
Q4VpHiZwclylTt9eBLll5Lvqsy6GIPBMd1o+URD57BmLFlVafRiWT23mTeJF
7kXF/5W9WAcyuCUYiR24kI9TcKbeaNMEp3s3DQOH2ZFzXCzVLTZUh0ff6Ua1
O1iRSxab8S8aqgLp8Q5LxV/MyCMixO/ylyuDOXb1PXkIE/KNQ8VTMrxKwK1L
OZloy4D8aPBPCf4vCqBJct9uipUOOc1CX/DffnnASCfZHARpQHX3ufT9y7Nf
UzLOgd2BmW3SJCXk5/SKv08ZBsB3X5yyvrge8rFWoexDeo5wXyzhuzeFHPJh
GYn7BPY2UPLm/UHpZknkDnk7Pr0nzIEsOmVeK1oUOQtN6+SMiTGcdaV8q5Ug
hPz6y9VsXL4BJCeXa2WV8CGvPphSqBSuB9pv1dp/8nMjXwxVwtWUaYPeYcO/
Puc5kLNnl/LVzWmAzvKlIxwibMh57OzMKa+rQcVZtuF6YxbkqyOD/LmPVEDE
zCGospcJ+dcAeT0mLmW4dU6yn22UAbmYyOk77L2KMCBSsZB8iQ750XMq1QMp
CrCUwTo9H00DBwr/e861GySKKm73hUgShpBeO3XkZh/kB/8zb5z2ujBSJSqP
vPNBv8CLdntQm6Q5x0J8Frk/bHtNOVkB47ZmOOkPMeSjDCrhHLdNQbKrzc4v
VBh5OaW0zFlrIyAqZMO1LPMj91nhEh95pw/v5STV81l49r+3flGgdFAXShxm
b/xi59z35LIR+9ta0DdeeaP7ARty91yZVituDdB8IylQ1cOCfH3tUaDwUbV/
5/znaxw0zMhNfthwtsupgDH/Dbw4R0bkHsdjR37+v87uPJqqN3oYOBKhSJJ5
nucxGbPNs8s1z5SpDGXKnETGFH2VJFRUFCpFhbgyplSoqCiikKSINOn3fb91
nvP+7lp3We/772c969xzzj3nnufZe599bxjC4FZmAdVlXuS/ZveE3PMyAEt3
D8nSV9zQSKE/YdTf+Pk2T/anPA2FJO6nu9tnqYJJjRT6FmLjN66PG32iGgVP
5Ai5wefM0fbJ+xli4wmqV9dmZO4GC80g9SRxPTSevM8hNr75smudm+NOyD57
lP95qAYaT97/EBv/NehpTU6kJ9iIsHYStVXRePK+iNj4j+1VQ7MiLqA/eaLZ
4oEiGk/eLxEbv+5xVtdkkANUcCwZwDVZNJ68jyI2fvzISmFEFRF+etDdTKGR
QuPJ+yti4/fW37sRedQGApyCvySLiKPx5H0XsfE8uke7ZtutIKaS68f0UxE0
nrwfIzZekk/PaprJAoaiGwKN5oXQePI+jdh4eV6O4rAeU9iqSx9p6ymIxpP3
b8TGc0g/MlWeMIbeN5UDd1j40Xjyvo7YeKsHEcXCRkZwO05DdrCNBzj+ruut
zrqwNKQmk5jokjgauAgkzKWHmCVLLoaB1Nmok6JaRmh83fqn//0OsO1Lz3sm
pYP8KhubzN0WH3jqNbz7IkENeXmz9XX1WHfgz4qOkuBQRv7vd7TZoccJrhHn
eq8GyyNv5Lr3z9cwe6BtF4/dryWNfFjTNb9mzhZuvnukKcAggfyFiniK9jIB
xOeYLySniCJXVujNnxmyhDbBrKobMcLIaTTY+T+Ym4P4rM/NA92CyLl5Qyam
pUzh+Mqkh3EDP74dkY+6ze7GwG7QWl5vzQtf/saj9A2apuLd4uBWMEt+pp4V
chMuz4PXjULBuoEY8jpeD7nve7cj4oZ+sDkyPFBBVQP560/+u2cDveFKwfLk
my4V5FdW7l490uwKsQdHTK5aKiKvOj+w8Oy4I2SNpU0H3ZZB/k5n60/Vo3bw
aMShqJhHEvl2oY8XbfVtQd3aUPo5QQx53TvQZ5i0hu/f2Days4sgp1u3Uh7+
0wI4gkM7XukLIU+6n+KXetwMfBvbfJwSBfD9n1L6r7+37ajEo+IPvND3N85j
u2hu9qwijmQvPGmkXK1HwvzVVo/CvC1R0L+fZ/xiiTEaXy49EXg6ZTdwdQxq
TyTpIL82smfrGfedYMSqxSbBpoZ8c8fx/VPpnqBWHlYaVKuEvD09ZX5O3QXk
OYRZR47JIZ8uIFR1HXAAq7jAYpsAKeRhp/bJZJOI8CYuSEdeXxx5/YLFxOFz
NiDzNWLu3X0R5GfKgzuYpq0gqkVP1uWxEHLtmhuNdPIWML/dxj9cXhD5uFLe
ZM17U3g39lzO6gwf1PyNC8GLZpYvi8+hzdBHQCH5IvLjr2a7DT2S4Z+j91rW
CdkiPzjrFfqlIAwcGhQuGRvpI/eQ8v+vPxsYFbRQu2kgr3Bvbjnb5QP8uflf
aHNUkL/bsk7YP8cdtJfzX294r4D8Z/poscdrJ1gWGJce/iWNvODBylJ+mj3E
HG7ODvaVQH575ati0BoitL93rxAsE8XHe171eMZsA29U/MLrI4WRH7l6fcH6
pyWU6a9cWqwRRJ4/73bcNdgcln2NO+RC+CH7b7yFh3nLFF3GSQgJEma0/eCH
3OXXBe9LQnHwwSfjYaSgGfLHNm/lQtRCQbfy++m+kO3Iq4yiP0+Z+IHhuUT6
ZX415FqXzQaHwrxhaE1fc++/8xDMA+dutSsPuMJZhjXdwd9kkR84VXGt45Ij
uEctMGe3SyJ/XcTyK7XMDui4Rhv6z4khHx4PJV11sIVihrCKaVUR5Fv4xica
mAjgZ/+1zM9ACHkuH9VhAQFLuGPIznvISQAC/8bVM2QuDvOYxZM+cv9UcTyt
S8Lcg+hDo3e/mMSoVpvMkBiA/JFAUJy9WyYU/RN1np3giLaTt3CrgvlbJNTQ
M0/GXzZAPvi4Lak7cTekrfWnevVeA3nbII9f/46dMConvEknUwU5b4hm15Yi
T5BRlThdelABeU+oqlKPlQu05d2Nfb5PGvmAm9frQ8cd4NGJyA6ZZ+LIz7na
pqY9IULC1EpgLoco8m62KsecOhvgZDCnezcnhDystjaBeoM12KqWsHsp4/Ef
8jpSzF1S5SRScu0htEmy0joPj3eps8iuf/LdFnwX05oEgvF4l5A0Y3XZEgHS
f50zCKFRRF5/eftZkW5LCLvrE1eyVRa52dXQ7ZaK5mDeb9RIIyyFPLap6ubz
dabwnvio6nshHu8iryPFPKx/pjmh0hDYW9mV5q/h8S7xosJdmrYGYLVTt50o
JYTH5Qq3tCeL6kO6AsGm+DIe77L/FjKVw6MHQm69TW5ueLzry5UDJ5wVAWrV
5HoGiTz49q2ovhs3bYdrRozZBmlcKG5DXkeKefWbDbQ8K3aQciWlpSJBBXnW
Hf/zuw7bAg2VKC1HNx7Xqu+lU6o2J8CLhQ73Bx5yyOfiLIv7tv+73p9LsH64
Vhp5yWzwrC/JDJS9m+dprSSQk9eLYu5+V85WO8AQFghnrzhl4vGrOsnDIbac
BkBnTD31WkwQ+QaaA/SKC/+uz99HrTF/g8evOg3WusR/Akg2uFV3sgOPX9UG
aPXFMAK8b29SqJrC41fk9Z+YL4m2fA6ItIPEhMk+7SYl5FKkJc92EVsQcuLV
PtMuj1z8nphJwwVrID39eKOEXQb5fpm0KaNGC4gtEjrOLCiJnLyeE/PmgYed
P8UNoUqKTdY2GY8j8Rh7cNOO6QPXiS2px+P5kftqbGKTa9OD/oXEJi8TXuQ6
UvaqCZ0AU2mvllOduFHcw/hvHSb73zpMzKee0PZXzBPBjDlUkne7InLLIROf
CJIN7NHs+JzhLot8jm6oazujNeze7ZWjwi2FPP5v/aTn3/pJzDtlhFUvThlA
c/8Rg0YpAeSmTdJaepf14fb6twYbXvAiZzmqdjcoXw+6r4vTbn/CjeIJ5PWN
mA/lqG9VjiHC/HsWG473cshVjYQYWXfYQPn1u3mcRtLIyesPMe9e+rFWvMoA
THedE55O4kP+Y1QxZ3mfPmhI5DEd8+ZB627yOkDMA43yfYNoiRAlR7IQr5FB
Tl6Ph+IVBzqnfMMMYG1BjlzhCg9ah5LXv2FOXm8WRaHeDHOTls009LP7gKQ7
oxhSYYk8JMyyV/5ZEFi1t7/w+qSH/ERZyJbba3whedHKF0w08XWWRfdcv6kX
BO4YfsDarorci/T1Cv91FxhhV1rXI6WE/LWCxX/X21P/lss6mnLIyevNMBfO
8O8Te2ADiQPGaiH7xJEvtg8OOIhbg3uLEKs0lyjy8ndLIb1uFtASwKv7QUoY
OUsm3SfxDWbgEjcdIpyDr8uuzLCJN/GawPe+d7cKvPiRV7B60F+KMoKD5b6j
Det40XqBvD8S5lQ+h1d6pCKBPs3yfA+9KfIZ/p5NWxt3wd4HPosqxbrIjcXO
EmJmdsBzKse8zNptyEsMrhs8XvAARcIHphc/8fVUUrWzz9JDZxB2fqlee0UB
OXldGeZREXc2WYfaQIKhstQAhxjyW8VyG3zy/l3P1NLFvf6Mr5sCEkI4aMfN
gT2rw2yHnBByjZkLJjGVptCxpXZm3FcA+Xk1MzW9e8awtMvQb3QUXzeR149h
3q2sOXCYOhzEiWplqRmGyE95RjxP/RgAar4x19UEtZHnx9BfqPjsAxvnHu04
e3Ar8nausPgdTe7Q/eyOpWqEEnLyOjE0nsc2aXmzDVB7HatgG8HXQcA8HjJM
YwVhMXuD3SbxdVDKfhm7b6HmsPcLf5GfqSDy/hPRyt5mphCadiew5hkfmv+T
97nqo9AvBfOk2Rcy27z94X5d1KKclgby5G0mTcdZfeBm9zR7cpkKct2/9WBP
B/7Ug2EulynUcDGJAAf1iu/LtQojL52od/eKs4QeZd3JtkV8nfIxU/Gz/28z
WPMkZOHFHD+an1OPJ9wKof13/vyJpTb/gRpy8notzPXcXnXLjljDVIStOBVJ
CLk0n9NM5lcL0B1xPj/BJYjmvc+jVRzKHYOA+3xwRUK3FnLyuinMi0Rzn37T
s4ZBq8JE7meCaH5IXjcVSKFOCbs+BTvVS5a80knzL8xZL6o4krDv8XNH5g/V
mRJSygmJc19+hqB1K3n/5z4K/Z+x493zrTNQjyGOFNlzffZeoi4J8yeH771p
1M0hSWdPPUvkd0ZOXh+F+YXn5SKHHU+AYpaf1IY1fmj7NEfilYp2ZYNahSTT
GgdXdH7I+7hmU+jzmU2h79N5CnVQmG9SDmwaytoORSmPU3bbcKHnS5GhkozV
lSSII3E6XGFzRO4b8qdu6mrOn7op7PeT1mch80XwZbiy7qnUydwkdB8pVKec
WWsbT/o0Hh46dM8AfS9s+0ePXjmfReqtiS2+aOSM/Oe0Jr3AhQwY2/Rh0NjT
FVb7vsj7PFMaj10/2nOBEbfO7INbX3LvRrIboeOitivO+fgyGZIKxQZVW53R
/l9+bnnj/qtC6H9JKI0e3Y3HkYZ8UjLy8yBmW/qI3/Gd6PosejRoFPv7PJgE
aNv3xIWj8xPuLN8U7VROui4y3rwpeR8J8+F8UkJW/COwOHP4tOzkWXS8WXV6
LZMMsaSGuMQ99x9qo+vHYO+lA3u+JJGa3F5yGL0xRtdDXrs4d/9MDOnHqeDM
sQx15NaC3mrnwmJJGgkdjEkdWsjJ+wZTut6w47p+svnAz8uVpLyScfv2okjk
ZR5/6sTecP+pE8Pci2WE9e2zI//Of4xLdF+4ItcUl/nkq1gEhAfWulXCAej8
mDo93pBndIsUPD7d2Ls9Gx2vlMq029ZvMaR2tYSuOyWayDnbQvk6ryWQrnvG
1n81M0D7P5Qc6CgiFUsadX+wviJWEzl5H2Byn+z549j3zsOQ0Bi0fIBkfLqM
j3/ZAvmP6D91axve/albw/aHa+TV4EVCHUmSSuzLVeoU5PzmnkIpl1NJH1rL
5LU4bVa9f8n79GLXm0PdN+N92XkkO+N/WKgSfND+jImkPTc5cZkkf+X34mmV
ePS9nD67SStFPY30+4vQcbN7BJSPIO+ji/nr4D//xzTW9ef/mCiNxz7X8XD3
y29huSRbp/S+LdWe6L5Tra2N32SZQBqza3tPeI/f705HeZUP/EqFNUu6ps/L
HdH2yf8HCjte8r64mJP3xaXk2OfOncpjP2S0n1SZ1hsoXm2C9udJDuGV4mIM
ibZrFrIHdVZ9LlD6naHk5P1vMSfvf4tdJ/efSOvTRxwj+Q9mcRFEvJAnFWX2
ixLLSPu7JW69nd+Lrh/y/rSr3dfk1xt2nXzbMsTq+COftPtFVU2wmje6fowv
Mlt7umWRMrL3776+yw6dtyu+VFmJHx6RumMF+C0XSpGT99lD8zGy/n7Y9n/O
3xJiUd1Pyh1as17ysz76XNvXlWXRqikkkdKNZhWZ5ug8xBk7lojTHSSd2/X9
TQeTBboeyPugYv528ty5C4oJkJ9VT6Lea4OuE3V9U3mDomQIAMm4XAN7ivP8
1eZ75H1NKTl2XIpZZrEVirkkwUcpASP7nNH3Ql6Hhvm+qfxZtTd74WMQh7j1
M6C4P9j5kX+owX3nZy6cprk7byLhjZw/+Me3UO0amIudvePdGg+rzXOSPQsG
7QlnwGVN7Iy3XSiejzNvS0v0SgOaANEXil9dkWsnXf1qeyoLVtam8pY99kJ+
/nxJ0ZZ7JaCuE635eCoMz4tFfhybs94Ps63qE9RlRHz9MtxTTXUwGk46EPrL
Gi3Q/pDXW2LedO2VQEh+FOSbhDMDozE6bxEeJM/uklT4LjKjJaRqh5y8byf2
vRy5yBOwsyIRmHhLHtczWCCXanzMtiP7ADxVoF/Z8sGK4vyK0vax679474U6
F8It2DKi1JFWmYE86uHjYniZA6w2AVKTF7yQ557+c7+sZP+5Xyj9DmPnQfKT
7dXDXSlwnu9KR52LHcXfT0r36Wp56piXNekWDREwG8PgpT5uivxegZbrcdu9
kHHHzDLgCb6+K+TQKekpjgTJRk+LZBMTfP31sr78u3oEZE2cMHvx2Ajt/93M
FI2WuhBwcLWZ/2Khi9xnjGGheWY3ePQTR7gKtdF5bqsjrAsSiQCrXOlNo6P6
aP4WCXUx+Zf3Au3FvUFK8ybouMj7XlLK41Maj90vgix/1ncywf97fUe+7sP2
f3N6ZI+PczS8ab1Zr1drgrzaf2NL5cJ+MDH48WRXhzWKTzr++tGh9cAN2lR0
+CZFtZGPXop/KVBlAnw1zdLtTGIovic58uK7fqw3FG50P3rGSRc573ZDmZlG
V2Co4VLcw62BvENFWqjL3gzky1zsqa7j21ETrhWqJJpA2cPBgxbVeP0VK5Fm
In2bL3gPN/wsXdFDfvRXLWdBuBeIvWo4MdWvhfyVjZorZ6sLXHv7Q8TxuBry
8G1GcmI6FrDtp/v9d/vE8TikxMCi6qwp+Ly6eK/OTBQ5MWmDpvlPY/C9tJ+q
dJ8wir+VWY4sWkvuhqq50CHmSiPkcQEdU15bdgLvopzqy1pd5CeHLNOZtnhC
s/qDoIcz6sh5wzwbbJ47g6RH++WAaFXkXDQrdI2RVpBiJRnZ4CGBnLBOMoqn
3RwYt6oVzv4WRV74z2vOqExTUJ14uV2IAa+n2n54feeLCmOQWmuotM9HCMX3
ljMDQu1Tw4GQV3pd2soSuXmZeYaGSSBUD/aznO3TR6590e24LvsO8I+6Ekaj
pI18Nvn2u61D7hBy4lvy9v1qyIsOPfdMpHGGvPSztm2XlJHbPqbN01tnAxn7
jMzf75FETt84E93w1hKec7KeSXgqhvzAjaDQlwRz+GR4bnypVgT5XnFJL6KU
KXxsk8x+9x4/riT2Ra6tzsYQGWUT3B0oiO7H67JLre8q/CEqJit8OROQnxs+
9oNHwQeefwq032GqgTz7UM+icp0bGEzTMAvtxeuLuv2lXvRrOsGAheVTZQG8
vohoS3h7/4QteD2CIM7bUsi3FN2/vdOPAA0GYrfv94kjZ+X+mNjvbgkXO/ha
GWPxOqKE1JVOvlEzqPacmE7OxOuI+pbM/YsemIBmzuHc6Wn8uKRCWWjV/n3e
xD+pSqBhFaBYt0OpPodSHQ6lehvMjf/W1Uj/rauhVD9DqU6GUj0MpboXSvUt
mIf/rWNZ87eOZbV5O4+66gkjRQfIUBZKrZDB6xyuVZPCTX44wXA49SULLznk
Gr/P+58tsIfbXeFx6S54fn+i9Yf48xI3KNVMeSvNq4j8roo9nYuaEyQZWkRW
2ssgPxu6WVxsnT04qpaGZDTg+W7afI9t0Sbe4PypNHt2rTLyafttxdwnXaFU
/CAt4ZUcnme/4FZavd8RVKYv8g2lSiF/XZbGSptsB6aXOkYFTMTRc0qVP3OG
v38nsJiFpHU2qiJvVdhtGCHoBWs3pPmJligiP3j64fr08y6Q/Cnv2Y0eGeT9
Mx7/xc9F/4kapJqUQN6+9t2xDGo72LT+zlqRb3i+lft2uR6j/S5wKRf1bH6j
jtwiUZDK/O4O2PUs2N1ySRl57EqYaFW/B3RasTwY75BH/j678etYuzM8aXyv
eGpeCvkJnbGz3MoOEMrpaz0Xged/qX1vbWTNJMLIzXWD8ffx/Dil9Qj5fInS
vBS73tg//pmf7Dz9Z36Cfe6xwu50hoxDUHTrvt64oB0af/Pan+d7AP3/fr6T
36eU5uHY/V78heH70zOBMGb4KKJgRm/VPPUxsSptkc/24NXkv4tIr4b8H3Xr
/sGjRJjsaJL+JKiCv8fBXCk5W2UDFgrZh+yG8Dz1rlvrlg6ZWUPwyYqf36jl
kQcc6pOebbGA5DOfmI1+SCPniZP8tqXYDLgPWb3cFSm5ap462t7al3nIEFqb
FxNcJ/E8NVu6o+/wOQOoaalsYEnD89QXahY86nP1YWDemO8fAp6vt/dW2r9c
pAexC5Mll2L5kfPf5f0mSgK4cfTSREQu76r56Iak+v/+F9Uv1948fgzPR+uN
NYaSuIjw9KjjVWdfJeTXny6qP7C2gcZCo2nmAXnkR+dMl02vWkF1fphO1ykZ
PO8c2HqTTs8CvBlMEm0+Sa6aj2Zs5ulLyDeE98Stnsdu4/noa3QSIQ8CDGDK
ZO/Ej1g8H70tXYbjtrs+cHIPGzKQ+JFvn1u/+UOIHtztPX9V6z5+HqK8m7OE
CgAgylV3jIln1Xx0f7l/l1KPHTy8sumoA5sycnk+HWO6S7agfYBz0uupAvLo
i+wZ8e8JoCqjwK7sKYu88judXT+fFcRLJq6TT5daNR8dOqO1+J1oCL82zgnw
VuP56DS7o49D5Q1Atf2y1MfNAsgFhsU2iknrQ6zdHpvtm/D3HbYMj08y6+nB
yZ45zyoTvA4/+W8+2oosH/1LaU/UTQM7UPM+NcKaheeju1x4OKXAFvh+0zGX
WMrhzv56/YguAaIt86erdfD3EQr+5qNjyfLRh2vr6cLYDMEzKLLgQiyejzbr
DeW+tqQP5wr7Z+P88fcILiWVdcws60F8Ifvhc0d4Vs1HexJ/l0+3EyHgLEvV
lT3yyJtDy1rrXtqAOrPMNypumVXz0QnHVMu7n/57vY1afpS4h+ejF9kPvUom
6cOQYsKv2rHV89H22qGDolZEkI3hakoQlV01H21Yf7XhQ6EBvKP+lrCix/v/
nY92NJTN5vP0h0TZj9eYlfF65kEJxv/+T5k54fTLZOVtyI8dKP+954M7rJFe
9skAFTwfTTwlOXvKGRz70xPOhiuumkcuXizsKme0hZrSrOwr9/E88vvUhvW0
n62BY7iK6Vk5nke2Ye0UNHKyBDH4cvj2EJ5HrpFO6OOUMIcap4KxXCJeD9zK
F2CsaWYK+vxCOofW4Pllxqag3W1VxpBdNF3r14rPi2irmzs5zIJB4sIdfgVD
PeSKWfMbzaj8QI4nX5tLVBP5mQEqeeub3hCiZ/wjcfNW5AXSXPmd99zA7xYh
Sq9KadW8cIvjz4CxShv4ar7Jjt4Pzwsb08iVZdtZw0PppTC2MBHkbwNUfr99
YgEVQazdbr14fu2tPVPkidtmAN6nL00E4HW2v0kHTvF8MIFOV1XGxAB+NH+j
3y9RLcS/G1ytDm38nbQd+Rv6r9HBD3ZCwTS7d3z+NuTKter+LtNeYHASMpYM
VFbN8zI7Pp1/YmUDxf88bzMVEUVOEJ0PZr5jBSKZfRwVbsLI9aKEdJ84WYDi
K68I+5d4nlfYu0lLycYMwmhzvG3FBNA8ZPLna7NGw0CIAVp5BiUt5H12y+0B
jTvg4GjJ2O3ArcjJ+3hgbp2vXUD8QICIJsKAETVed8oe3SzMKWcFGepfBmK9
8brTXbt/1ze/Ngfua2N2FSsCaJ7pl/n9pmiVPyhGRlzauVd91bztSk5klaAR
AYivRpZufcfztu2ybe7byyyhNK22SDABz9uqC687yHgjGDpP5072M+LzIkp5
24P0r3nTzv87P7Gaubt5vdD/c94Wew5StxxzmhRyA4He/AecgVrITwX3jrbs
MYG+JpfnWT34e3lWfVunEoS9wJ4Qz/orTQd51enqh238rqBmtOj/OV4deXE3
2/Hh+6bAfPy040dJPO7xWO7EHR1OE0jfVt1fFI7HPagH6nte6u2AXCGq0gvq
gD9HLm8ol3ngARHT6/XyCJrIjeLMzpQouIANjWdlKTMe99A7oz7oTjSHGWri
i2eF+PtuIi2btq/dZQohv86Peffin5tyayKooc0YDKL0GFP18LgHqXOfMWmj
P9CIeTq8IegjFxTg0Jdz9IHBmYD3Fl3ayJPX9mf0/uMOLIybhzvLt+Fxko8u
e3WIztBZy3328ho87qGoRh+dxGQJ18OoM7kFxZH3plxxoHljBipe6cad6njc
IyyH+UsLgykMvn3CcOQkvp8N78y3soQbw56bRzKllPD4gMGyCaPF6yAwdPvm
uTPVCDmpX0BH67Yv5LBuuqkoAMirdonJWh/0hriAE/fWtmogT5kfTS+JcgPb
lMR29oCtyDlslE7eTHWCIrtIpgBjPO7R/vpc1QNqa5A6/iXEpwV/P2uRYaZ7
JMsCQnIzpBxv4u9nvZO+eW0hygx82ZXPn1zB38+ar+hmGa42gbHwN54xqfhx
ZQoEL3CIGMPYep7Ii9p4fICJlYMppGUX+C01R9++jscnJ/rPd7Rn7QS7nrHW
uEpt5CJRrVH/53/bL1k9rLbR2IacbxOxNirUFTTdd7FlJKng72GJWtAFdjiC
G9Nr28guReTRoaH/9UfqcpGK3JuAvz+Vr/+Bzz7ECqRzsqtsLMWQH7Erqoxi
sYANTJpeM1EiyGv3DNAsbDADNjvQ8H6Lvz8VPpJnLetgArm9Q6xWh/HjvRxz
/EXtMyMQGrc7yUjC31sh7zOPOXmfeczJ+8xjTt5nHnPyPvOYk/eZx5y8zzyK
t5D1mUfrRLI+85iT95nHnLzPPObkfeYxJ+8zjz1Pzfqqbu58ZA9awcP3U69J
o+cUZ1l8pdI6J3CqvXOmEWSR5zWX3PLRtgfW7x+CN3yQRM+RG5+ddzB3u4Ay
k+K2A0ryyI/dieZksXOEthaptbQO0ng9koBzGmOtHagHTNd8dMLjJKPX7LOO
GnkAW0Gs8QV7ReR14uJvF8adYepOZEvmJlnkDMc+3a2sdIBNyvLqpaWSyAcK
fqeWKtjBIt2FfbOzeF19HCfPmfIP3tC/HDZgNo/X7f+ul/Dx5neH3xuyP940
kEdOtew+qb/RGZS4itbTK0kj381IrHrH6AD9tDyTqZx4nKTRy4YYfYMItEzG
p/gr8DiJqFbTr2PMvvDzDbHwpZgq8kcHfI8OinvD5qoF44nDishrC68dY2Fx
g52xAxri4rLIhf2ZrxtZOMEU/665+hRJ5JlPRsx7o+xhgEa7QOS2GHKetV1v
v+sSoeZq1veSZHw+QN5HhVLdDnbfkfcvolT/SSm/ie0PeZ8f7LyR9/lB7yWR
9e2hVO9EqT4Q2x/y/jOU4jDYcU28rCozXYgBpsjOrxP0BLSdbZNpdss3okBG
o4G4tdmMYt4Q2/41KfaZaN4MmLlE5NXTxd+n6OWrC3xXdxAU1tgr+XXaoPuU
/H80sP3pkLhhUjMcCjJf66nr2gzwOrFQ1/SrDnvAuCKu63fI/5W35Q100tEP
gxOWLnYRvfrwP+E0XaE=
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[2], EdgeForm[
      None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxFmgn8V0P3x++9cyclW2mhlCJS0UZEIbJTqCxlTzwSIrIUyb4VkWyRnez7
+iBlJztl37fInn8I/d+f53Oe1/N6/c5vPt9z586dO3fmnM85M+2Hjx50RFUU
xQupKPgrbi+L4hAUFMX7/LsEvD74PfA0cE/wB+BLwRuA18hFMR85jd8voj+D
sj36dpTvISeBD6+5h8ZPB3em7sfI5Vx7l/oXU/ZA3wndR8hl/F6X8lPkanAX
yk+QK8CfUH86ZW/qPwE+Crws+DHwkeBG4CfBY8CNwXeDD638XneCR4L1rveC
RwFq9ZO230bG8vtp9MdQLo/+fvBhYC4Vh1HxPRo5Dfwg+sPRNwCvBv6c8jNk
Dvho9MuB23JTpTFB9ygyGn1D9A+DNdjLgFty/f9o93C1gcxA3wf9p+ArwRur
XfBV4E3AQ6jfmId+qO/BfeOy37k98j4ygTpvUv98cGc9izpPIbeh60l5QnY/
eoCPz+7HBuDx2eP4fOkxaMe9G6M/Gf2x/N4IPCF7XHqBT8we3+7g47LH4g3u
nUzZiXufA58KbgM+gjofMW5ngEeDPwGfCX6ZOmdTpwN4Lvgs8JrgtWnvfeRC
/aZ8BzkdvA7lh8hU8EvUP5NyDeq/Aj4HvBa4A9ffRc7ld0fKD5CLwEfy3M94
7lnUeZv6UzS/wK+DJ6lt8FrUfQ85j99vob9A8w79bPDJ4FbgWeAJ4FXBT4En
gluDd+a+Zfgub/J7F3BD8FuaB+BXefa61B0AzuhfR78TuAa/Bt4V3Aj8NngQ
eFnwPPDqWhvIibT/DfdfD94C3Jf3mMTvEUhrcCfka/RjeM4X4PPAO9JOop1X
uWcguAH4DfAOmpPgV9QWeDHyJHhzyt+QJ7SWKG+jrSG03wP8FXIz+kXovkR2
Qv8x5XSkL3gBcgPXt+S5Pan7NTJT85PyG+QW8I/UuZVyO+r8DL5dfQH/BL4N
vD14A+ouQO7g92aUi5DHNd8ov0XuBPfTekFmgTfk+Sdlr7dDwfN491Nopz+6
P5Cn0K9H+RlyDfgBnnUCZTPqdEX3OXItv7fmviHIiVzvhu4L5Dr09/H7eMqV
qX8P+DhwU/BD4HHg5uC7Sq+PJuBnwKeAVwM/Dj4JvAq4Pe3NQ07k9yPox1O2
QL+81htyCHg7GRi+y9zKNvgwfh+G6iXwaK0v8JaUvyNzdA/v+wbXTkY/EvwW
eCJ4aXb93fg9Cv07lKeqae6ZjRwAPhj9K8k2eSvq/ok8zbVtKf9GngNvQ/kX
8qzGh3IJ8gz4V9kJZC/u/xftvJZsc7ZHV9L/l6nzLe94I2V/9N2oc2y2De0K
Hpttc4dTrkr9Btw/gN9Lkbuovy/65ugr9C1q28YH0e8iX5SMB8p4g++mOID6
q1A/83t/cEtwDe5Pnd+R66mzH/oW6BP6vcErg//i2lDwSuBFWo/IP8id1H+U
Z36OLM97vKg1hayptUDdI7hnMO2shuyCfKu5xH1fIZNku6gzUs/g2jroPqts
9zpRfl7Z7nWn/AY5HzyBtn+m7hXgqTxjGWQp+CD0c5PXfj/q/oZcA96Ttlfk
Gb/K9iEfVJ4DJ1H/J+pfrnmCbjFyHXgLyv9DrtW8pc4cZFme8Tzlp0h7vSP3
NaHd8bF+b+D3NuAmXMtaM4V98ZXoNy28RmaA++ldtFbAW4FX1HqnzcvDblyP
fuvCvnsaeKPCNvx8cPew85PBXQvb6kngbloXWq+0c2np9Tsd/Waqw3t8Wpk/
aP1ehX5z8KrJ/ka+Zhj6JozPn9RrTBstZH/Q70PZDP3fsm+1/fJM9HtRNkW/
RPMf+aNy/Q6lv/994FaUKwQWTxjN81YKX3M6eO3wHWeAOwYXmgBevbD/OinZ
n8oOjAW31DjwzBn0oym/O/DMjyrbrrUoP668Znfi+kXZvnwAeGq2T9oRfGG2
r/2otL/S2H5Y2u9tCP4n24ZsRfsDqX9xts/bGTwtm2+tJHKHfErxZWk/qfH8
orTv1Zh/Vdrf6ltvz70XZPvaHcBTsn3nduDzs335puDTsu1jH/Ap2TZ0DfBd
mn+0MwJda96/MX3bk2uNkvXrcf2YbK52IGUr6izLtYPAq4GXAx8MbgNeXvYH
3Ba8Ang/vQ/lC7RzCPrV0a/I7y60OSaby24Cnphtx9cFH53NBfuCT832Dcto
3up9eO9tKCdl84xXS9tvfd++lD8jV4J35/ryPOtb+QCtD+R99BvJ5yHTwJtx
76bID+A+6H5CpoPPov2/qX8z+GzwP8lzckTtNan1uDZ1P6nMObtRfo1MBu/G
c5fjuQv4vQd4BfAv+vbID8jF1Nmcds7I9kPrI98hF6LvRfk9MlW2gjpnZ/OY
/uBzsn3YFuCzsnnPZuDTs/1WP/CZ2Rxoa/B52Vx/W/DkbA43vzRf0xrfXWPK
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
+FPvsHvyvdPD/55amnPomyl27hPfZZPS/ED3tuK9nkuOGTuF/uzo/0bRB3GK
vnHvqtRvjdxQOv+8LjbwRdreT3YUubn0c5XLFifcK56veSvfqpzjuJjbij00
Dztz//zKMazm34BYR/uU/i3cMfSK27vHGKrNk8M+yFZonW1bej3qIIa4+oGl
19m6sda6U3ZNzsMophPHFb9VnLxN2BDNpU9q19F7bYvM5Fq72vvaT4a97Rdj
0iO+qzjS97XjRL3LGlHnp+j/wHgX+VblY9SOfLf8tua+/K1+y+fqPeWz5a+b
J+emdM9hUV/3Kg9Z196LVM75uvA72v+dFf66afae3RXxHfaKfvYIrDFUTmBm
8NV9/vsdwUtr54fHU28GcnXpGKpbzKv3woYMLZ0D0r6h8no/x7vvHePzrWxb
7XVd0peuDTymZ5f+xhoT7ZVqb/2S0rZIOSPZAsV04urTov/Dwv7Ih4tPLI21
vG+0MzL6eUiI+q09U9k59fWLwvdNi3u1Bzk1sPZW2vCsm/i9hzgI8kDMQ/VV
flP7PWeW1isW0v6u8ip9Yo39GH5TcaF4jmJmxeTyrdsknyHQ+QGdPXgyOZ+v
2Hr17LraNzk++WyMzjncBt6p8LxUO8qViSvKP8o3Kk+gfMFsta/8cfLe0LXo
rim9D673GBrvomffWPqbat/0yNLfehNx5OSxur70+pZNWBH9Y5X3CxTb7pDc
h1ZhB9SWYhudNRkR63X/WKea5xfFXFc+/9fa30d71j2ZAy9V/lYz4ltpjRxQ
2ib3ob22lfe1tffdLPydcj/Kgyn/o5ydcpxzCo/BETEOOyfbFK1BnXVZj2e9
w+8ruT69tE3Q+A0PuzG4tG/TvBI+ONaFzphNDX6iPbjFYZ/V55GxFjaNe1Vf
Y6CxEFc5qna+QDyzUfZ+t9pWHzRO46OO4kPds0zMQ/lHxXl6V/GuEXGP+qy4
W239t7+D47nq75DAF8aYy4aIyyifLv6j2Gfj5Pym7Mmg5PzS0FgX8kHKe+r6
n2GflSufG+2IS31eeB3sG2tB+Sftv2tuyybJNmnN/lb7vNrh8U30bfQs9WtU
9G16vJfGQTFjO8Zhs2Sf3i5s7Fu1zxctDBuiHLKeq/zkhsn2cftoU/V1fmOV
2vlYrZXTY70oT6h8+n9y6cnzWXNc+7xHJZ8NGxZr5LrS+9Fjks+Y6XyM5qns
5+Ds/Jd886HZ+VnlZnVG7l/J+/WKByfFHGjO9fUbeE1q7/jo5DNsOl93SPKZ
H9VVnKlx0Dmlw5LPBT1Ye69LnETn90YmnyXT+brDk88w6MzMQcnni5Tz3ymF
HUiOX08qvc9+TPKZN53TOzL5vGXK3r/Wd5H/13mVUdEfzWP1X2cC5NtlK7QX
36F23kY8QXxvQaxTrS3NT+2VD08++yQ7ulrYUnEf5bg1bsrX6jsrZ6szWo8l
7wPqjNnjyftiWr86M6NnaF9+/+RzU9r3PzD5nJXOEx6cfD5K54VGJJ/X6hH+
XbxSZwPW5NpThf35jPDp6o84mda+zgysVTvvpDMDa9fOO+nMQMfaecsR8U31
jdYPLiGuofMD69TOc2pudG5gHjMwOS48lzo7hs2Uz1A+cDnkocLnc8raeUud
L6pq5yF1zmT52nt82q9X3ka5GuWyOosvFm5L+UXZc+1dNqm9b675pnMs18T8
7EZ/miVzMXEy2SrtMa0sPl2Y13cJbi/b0Dvsg/qvnL7y+eLM8mvy4zrrpDNL
Ou+ic1mta++f6mxVq9p7Ijo3tULtfUnlrrW3p1hG57VaxrvrjM2KtfdMlWvT
3lsVNlB7b7KZOqO1au28pfZ2c+1zXweEnxAv0p5mg9rnu+THlC/RfrFy0W1q
n/FQjr0t8mLhcxeKlSaH/Z4cNly2pFfYE51xPTT5DKfOr45KPrepWEr7f9qn
k+1sFvZTe14tY47JLso+iofofJG+tXJu2o9eBrkH3DF5r1NjOCy+i3iU9qab
1j7zoL0YzdtXCvMlnQ/W9/5//J2Kmg==
          "]], Polygon3DBox[CompressedData["
1:eJwtmgf8V9Mbx+8995yftBSKJA3JaGgoKkohJKSS0JKViOySkb1HNPTP3iJZ
yQpRyN7tpUJRyErE//P2ua+Xq/v+nvsdv3vPeZ7P83lOwyFn9TozZFm2Qv+L
+vegIsu66bgkz7KvxOv04h4VWdZBrw3Raz+L/9AxQuePaHyazlPKsuvFb4r/
FP+l4wLxBvHfOv9Xx6Xii8Srdf6rjjPEb4i763MP03Gt+Hm+X7+js3hY+fkN
dH6EjhvEm8Rtdd5OR0/xX+JK+qx3dTQsr99HY+119BVnOrbV2Hs6di4/v5bO
t9DvvUU8XbyeP1o8RnwDv1/vnS3uqt/xgHiKxj/T0ULjE8WnaayJ7seuuq6a
XhvNb9NrX+q8mcaf0LWVxePEP4jvE1cTXyVeIt6y5IniR8WX6f03iueLW4ov
El8v/kLcVDxGfJN4gbiVeJT4OvHn4j3El4tvFi8UtxZfKb5VvFi8lzjqvJKO
seLfxVdo/BbxInEb8SPi+8SbxceIR/IsxJ+JdxcPFA/S8Vj5e0/Q+Tkanyqu
If5Nf09T3Y/j9PoDfId4O43fr/MXNL69zn/RcbzGH+Qz9O/94n903k/jZ3Cu
Yyvd7zPED5bP50yNLxefrOsvFM8Q1xKfJL5APJ1nKx4sPlc8TVxTPER8nvgZ
8dbiE8Xni58TbyM+VTxK/Ip4O/Ep4pHil8S1xUHnO+l4VPyYeC+N1yr8W4Je
u1Dn12j8U53vxu8XXyqeI95RfDprR/yWuK74TvFk8U/iQ8XP6O/bSjxJ/K+4
ps631jGZuSSuofN/dRyt9/1Pr03Qv5PE63V+sMaHii8SzxRvL75BPE68UtxR
PEx8sXiWeAfxWPFE8RpxV/Ft4gni78RdxLeKx4u/Fe/P/BaPFr8uriOeJL5L
/LO4u/hj/f6q4gllfLhf4/eKN4p7ie8V3y3+XdxTfI74CvEH4p3FF4ivFn8i
3lV8tvhy8fviRuIzxZeJ54obiEeIx4jfEzcUXyO+TbxMvLd4G51vq+Me8STx
uRq/UvyhuLH4K/3e6uI7mc86rtf4HeKvdd5B49eJbxevELcXXyseK14u3kd8
nvgq8UfiXVjP4nvEf4iP4vnq8z+I/uzrxFvr/GONH6P5PFPcQ9fvr2N47hj5
jc5f0PieGr+ZeCieLm4hvon5prW0mWev8/7693F93kIdHfTeNXqt4L0VjpnX
6LXnNLaLuEnh+fmt/p2ha1rq827R9WvFL4nbiMeK/xC/Kd5ffJ/4e/HL4r3E
t4vXiF8UtxbfJn5J3Eifv4P+7S9epX+f13hzjd8oXqzvX6qjk757vfh3jc/S
eGeN31vGz131/j30+lrxs+L5Otrp+vmZf//rOmqIV/B9On9Lx/biX8TP6/wN
HTXFo5gf+uxW+rzq+vzTxXdp7E1ijsan8IwKx+Y65fuf1NjnOvYULxS30Fgr
HQeJF4sf0NgqHYeJl4mbaayNjkPES8VNdd5cRxfxT+Ij9b17irty78X36L27
6fe0LPx5k8XLdHTW+CLWt84/0m/uq/e9Kt6o694SdxHfL75dfKd4ra4/QNxP
fAwxOXcMJT8ewpzO/bzrkY90/SC9f265Xr4s4zHxrxF/r3iwxj8UV2F+insG
x+MdxZ+KB4rfFVeI3xcfIX6a+CP+kPgjfkVcW/yJuF9wfi/It+LDxFPJL+K5
4h7ip0il5Fvx4eJp4uH6fQ11f+ro33riH/TvKxpvq/E7xP+K3xEfLH5c/I/4
bXG34Pi7XjxTvLd4vPhn8WviDsFrZJ34VXE78TjxL+I3xPuK7xJvEL8u7iie
LH6MPEWM1f06VjxD/Ii4msaHip8WPySuEJ8g3iSeIz5A/KD4NfGjxBzxCPEc
cqO4rvhC8Qvih8VVxaeKp5H3xEk8WLy77s8X4lPFX4gnstbFP+r3HFLGx6/K
/ER8n1eul5z4UT6/OhV+PsynJuIdxceL3xbXZe2I+5TPbxdxXfKzeI54V3E9
cX/xO+JqrC3xIeInxI3FO4iPFc8u58O2FX7ePN/txbXER4lfFO/A2hP3Fr8s
rk8sEx9aWPMcWs5ftBdcR9fX1ngvXf+SXuupsR0Lx7YbyaF6fTfmis5X67XZ
0Xprm8LrsYLYVuG4SjytrvGt+T6970mNbyXeRty9nJ/M1xoVjkfEu3/QghX+
ntXl9x9Z+N4Snx6NjnevaHwVz6vw70G7fpt5bgzUNUMyzxGe7YDoucIz5tkP
ip5LzIGHouf/9vqMr1lP+ncnHRv5rcQojTfQ+H567TQ0hXgn8YByffK+t/X6
5szv/0njjTXeNHhO7KN/d9Y1lciXOmaW+YDv4fPRts3FzYI1LvOvfoXXP/GD
eElMI5ahZ1kLg3XNaZnXBNq9ma6vF6zh3ynj+SpxfXFAz4g7lfEe/Y1mR6sf
hYZL1jBol/8Fa/ftCsd6NPwBOt+78LWjcuuthkVZG+S+V1x/ZO571r68/oPM
Gv9Bna/Wd3yv84N4PuJvxD+Iu5FvxOvFf4r7iB8WfyteV+op9O93pb5i/U3m
t4lXiTsR38Urxd+U+gh9s6rUS+inu3mu4tXizuIuZb6flVnDjkjWx7wO9yqs
J/nb0OR9CtdcaCk01VE6bx+sZW7OXe/U1zEy9z2oWua/3oWvZ97ULHwt8+fY
wjmE3IEeR1u21vU7BWvMroXrK3LZ+bnnd13uae41R34klx2YO8eRD1vz/Mit
uXMn+Y/cSg4lP1KzUXtRg60o8+HWhZl5whxlbjJf9gheb6x1NNkXaKcK/80t
c687cnuz3OuPWN1f1xyXOWYTe08Qn505Bj8uPkV8CbFHXFe8Q7I2eCi3fqEG
ofbgNbRj92hth4akVqGGeaDMt230W2ol51/y8DuFP+9h8cW5P7+OjtG5X6MW
ahqde8nBaMke0doSTYn2GhmtrdBgaL/zo7UZGhCtdoH41syajVx8i/iZzDmZ
XHlRdG4jZ6LVRkXnTjQbWu3CaG2HZiNXXiyekDlnEo+pOandqOHqia+Lzq3U
OORb+JHc+ZFaqUV0bUXNRK21Z3TtRc1FbdU8upaixqJW7BJdi1Izou07R9dG
aHxq1a7RtSw1K7XT/tG1JTUUc5M5Sq3zfnAt1yy6dqOmI99fKr47tz6unaxp
0DI8I7Q/42gBagDqgZ8Ka1PeUyW55qLWGp+7Nl8TfU6NjvY+L1qLo8FZW6wx
5h/zcEvWusYXaPyO3Nr33OjfggZ+Rnym+Gpyq/hZ8Vnia8S7BWu7XuIDM2s8
arne0bGGmENtdlS09qNGQwv0ia4V0QRTxcPEl4t3Dq6tjomuPaixqEX6Rdde
1CTUgkeI981cE1LbHRkdq4hZ1H49o2tBasAnxaeJx4gboQHEQ8WXsZ7FU9Aq
4kvFDYK1zhDxyMyah1r++GgtRU1PrXt0dK1IzUtteKy4d+YaEa/huOjaH8/h
OT2rH/XaJp0fnbnW7Isez1xzThOfIb6SXBWsFW8QT8msGdGiN0ZrEzQKWvSm
aO2JJqXWOzy6NqbmQyuOjtaSaMbnxCPE15Lrg7XlZdFrAY2JdhwTrSXRkGjb
m6O1MhoXrXp9tHZFsz4tHi6+StwkuNa6MlrrU3NRG10RrUXQJGjVy5nfmTXr
a9H1ELUcOeQpYpn4Cp03Dtai14gfyqxJ8aqujtameFbPE9v12l96f9/M+nNd
8lxhzjwl/oGYl7s+n1TmZ+Lh5OD5hyalFr4r+HniYRDP7g6eX3gOeF23BXtT
eFSNxNcEe1l4Wg3FVwd7U3hUO4uvDfae8KAai68Lft54DDyfe4LnK54EXte4
YC8CT6Ky+Oxg7wYPp5L4rHJ9UUPhdU0M9kbwSLYUjwheX3ggeF0Tguc/Hghe
2fhg7250WZtcEeyd4aHtIr6+nD94BsSvW4PjO54B8e4W8cJkTwIv4kbxPPEl
5EjxleKl4nGFtcmd4vnl/cHruyq4VqNme1O8ZeHajhoP76CSeAHPV/+2E9+g
65eJxxfWNpPES8r7hTa5Q7yY/FFYi9wenO/4fcTjm4K9DTwO4u/N/L7CMYtY
RQyjlqSmbEAuCK5V0IxoxRqFvUk8SryuyzW+iPVWWCuNDa5dqGHwdi4O9qLw
pKqIzwn22vDcthBjPOPt4fEp7GbDxZ8VjknEImLQF4VjILGPGEX+pwZDb8/i
+wqvEdYGMXJh4TXI2iNmzC8cQ4gdrKFPCsc4YhsxjfiFJ0m8fSI4PqEJic9T
gvUHNSPx7Mlg/U+NSLx9rtT/rDHW1rPB+pmaknj4clkPUBMS714Kjod4ZsT7
h8t4Sg1JvfBuGd/RmMTrB4PjO54T8fqhYH8ZzYRW6qPjg8IaCO1zsa5ZXDgn
kYuIQXiReJJVdX5ucP7GI9V/2bBg7xIPs5r4vDL/4qnqNDstWA/goeors9OD
9QAerP7JzgjWP3jClBpDg/M7Hine4aXB+gBPGS/ysmA9gIeNNzom2BvEI0Rv
jAr2AvEE0Rcjg70/PED0wIXB3h4eH3rkomCvkPmK/rpA/FHhnEWuQhNeXc5H
aulLgr08PD283tHB8/mA6HiG5z5J5x+iZ3J7/uQDNAj5/hviuc436bUtdX6y
XntDvFG8hfhE8TJiD35ZsB8wS/ynxiuJT8qswzvqtRNz63H8smoV1m5ouBXE
ugrnVnLsbzw7catgP+4t8V/6vMriU8Qzxb+LY7C/8CXPCg3Ls8k8tzYn16LM
MdbOH8m1KmtotvhvcZVgv+LsZL8+Fw8Qv6rx38SFeJD4FfGv4iAemLleof7A
62JO4lmSN8mfaEr8xCoVXr+sT2IRMRNtSEzKda+rU/8y1zPHRmIk/i85hNxE
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
T+RWNAZ+YJtoP4I9U/iJe0X7Eexxwm/oGO1PsgcJf+ywaP+TPUD4BZ3ETTLv
AcJ/2C/aH2SPEX7mIdH+I3vq8DsPjvYb2ZOHP9ot2m9kDx9+WNto/4M9Wvgz
7aL9NPaM4Xd0iPZT2fNEPBmSrKfo+bN+TyTnZe7Rs35PTta77AEgvpySrFfp
8aN/T0jWt+wJYL2elKxvjyvrqbHRfmPfsj66Lbq+4PvwZ/aN9mvZw4Xf0j66
NqdGxz/aO9o/ZQ8c8Y79bWgzchz1yK3R64M9KPTW6cnRi6PXhz6+JLrfSQ+Q
fMUeM54dMYhaetfk2pqaGn+yQfLeQ/pt1PKNk58PNT21eBMdLTLX5PiXE/V5
X2bec0EtdlhyvqcmQ0+hP+n/zwv2X8eTkzPvsaHeGhftfw4s68U7ou9/v7J+
ul38WuY9X/i5E8QfZd6Dg5exc7L3wP3CH22YPJ+Zv3gTjXTUz+xRUGsekqw3
qDmpRQ9N1hvUpNT+hyfrJTyA/2rP5L2T1KDUlt2T8/E2pT46KFmvVS71U7fk
egLPh3qF+oW9FU/k9mZ2SfZG8GioJ9om5zs8FfTZwcl6rmpZf+ydnC/pKaDX
DkzWf3hkeFE9kmtfPCnydatkP5wePd7LHsleCB4M3sjuyfUjHgn6sn1y/4ge
Pl5Q02SvBk8Ib+WIZD2Jx4J3cmSyXsRDwTvpmawP8VDQrx2T9QI9EvRqh2S9
QA+KXj39YLQiPXv2B5PzyHVofOq3fZL1BD0V6qm9dPTI7EmhJ7sk13ep1AvN
iBmZ9xSgfw9I1suVSn3RJnkvAv1AvKDdkr0j8i36Zc9kf5/+Hf4k+5HZq0JP
kv1teDZ4Nesy65HmyX786lLPtEjuB7CHgfquXbJewTNDf7VO7iewJwL91DK5
X8meiv8Dzt7Jeg==
          "]], Polygon3DBox[CompressedData["
1:eJwt13fAjWUfB/D7eZznoJBIQ6nMRJKShpAUIfX2GEVlj8jIjhIZFVpoqPCm
lIbKJi8NpD1UWkpUJKOhvGU0Pj/3+ePbuX6f+3efnHOu+7qup2LXAYX985Mk
eVUKZIH/fFUkSTbKf4w/cXGh103qr+VK4w1siHGDTJKMNF6WlyRHu/cGdjYb
xF5lJdh4VsU9k9jX7Gx2N6vGprDvWQPWh9V170D2Mjuc9WX12GC2mpVk/d33
Br9F3cZra7lRztM3TN+LvIy+B1hNvY+w3awpu4udwqayrawhG8Tqu/cmtogd
xSawqvoms02sHruHVWfT2DbWiA1lDd17M3uJHcMeZbX0PcZ+Y61YP3aOviFs
LSvFXtDzKd8grYzXuzbN+FTj6cY79V2s77n4Xtjz8SPJNV6eZGexZ9QH9bVj
c9iZ7Gl2gLVlT7A6bC7bH98X+x9rxF5mR0o/tpJdyF5Rl5H+rLf6O//mZu47
0/WyMo995HW9tDT+QO8q48bGrxqXlQHxb1Z/yD+QFsbv88eNzzB+ynif92yt
b178vuxFli/XxffCzmUL1BnpxBay89kSdTHpFvM0fnO2WF1UurJnY/6xF9R5
ci1bFL8vW6ouLt3Zivjd2Cp1aenLlsR8ZsvVh0tP9nz8bmy+uoh0ZIvZBWyZ
+jDpwe5nNdjD6l0+2yVxbzw7/GO5LL4P1+Z7/VL9hVxh/HF+OocqGt9i/IF7
q7m3hu/9ISntWif+NjtR/YAUY1fFM8JmGJ/m3v+q97j3MjaAncyGsjfZSewg
W+reKl4ry0OssvpBKa6+Wu8aNiquu3e8+jP31ma3skpsHPuUnc4Gx3fg3hFs
CSvHZrLT9c1mv7PL2RrWlK1jx8Vnjd8o5gN/T5obv8dnGdc2ftx4r3uv0Pei
+nP+mVwe8y6eHeNm8fwbl5dh+p5Rv8vfkUtjHGuPcRPjNcZHyyB9r7GL2Vr1
MTKYrWaXsNfVx8aaxl5hF7HV6nIykA2M+efzDlcv8O8ry0qoO+jbz66MNZBd
H88gH6Beoa84O1J9n/zNLov1iZVVT5UkPlu8p+Ex6mmSF+tu7v3KqKfIP+pW
MX/YP65PZL+o68sMdoDdzn5WnyMPsv1sAvtJXU8eYPvYeLZbfbbcn/sc98o+
dTN5lv2gbyjbqK4oo9k2NoR9qT5ZbmVb2WD2hfokGcUS9ST5VX2BzAxST5a9
6gtlduw16rvk/+rGsT6wp73fNew59S++vxbx+7Jr2Tz2K2vJHmHt2Cz2HbuA
zY55zOawH1kT9lg8K+wJtp1dxLazYewrVknG5NaSjmyR+s/c2hRz74ZMui4X
ZNN5mFXfLX+wi+QJffP5dWyh+g/3FrKjzYty0i7mP38mSZ/7vpl0Hmez6RpQ
VH2P/MmayBx938Z+xj6N9UXfFvVmGZBJ993i7Jsi6R7dL5OuIUWz6X69Sr0y
k+7lFWOPjfeKfwtbwtqrO8hf6m7ylnub5vbS/eob9DaM+R+/P/ve6yD+ecy1
6PMeD3tty2ayb/XUj+ejIF1TYx1dGXuU8S8ySt9WdQXjyfEs6Hvb+C0pHXuz
+yvq6WfcKp4FSWJ/VLeWz9xbQ6azN/Stkx+1nBDrrcxRnysnsjf0HMd6x97I
bnTfSnaYaw/FOYE9yjaz89hc9VOZdD+NfbW8nt/lNrZdfYbc69IfbCzbqT5L
prKd7Cb2jbqqjEvS81H/THpeKpZNz0o7ZDjbxKrIWH3FfK4+cpRrhTLFv+dP
r+P07dJTV6bp28VGsM3qajKe/Ry/AftOfarcwX5jY9gP6tpyD/uJ3cy+VVeX
29keNpptU58ud7PdbCTboj5FJiTpPt2ePanekTuDzI15w55lP7PmSbqG98yk
622STdfzibHXxZxmH+ur6dKUWM9i72JfsrPYfbH/sfvZF3G+YFPZlbEnsY2s
bpKehwpjL2Rf5c6OVdTdfX+Hu9Y19kx2p3HLeDbVH+mrwcbE2s4mxP7JKrFJ
rFWsd+wTdhobGfOdjYk9kJ3Abom9go3NT+dVzK+bY09ht7HXWQU2OeZsrO9s
A6vFRrDGbDR7jR3PbmIXslvZK6w8q6ru4XOUcK0b/5BVZ9ezI+K7je+QVWM9
WUnWna1nvYzr8Di4L/d+xdgp6l76SrnWI74HdlusP/x29Tv6KrPOrGb8f9i8
vENTP+nJzojnULGUFWXDWSM2iq2KZ4t1jfMG681eyDu0fSXdY9+PtYMtzEv/
hugR+znryxbnHZoeSTdWi/WJfSzv0DaRLGOdDF5if7P27A7WIvaG+KzsVDY2
9n12B3uXVWHLWWe2gv3DOsS64H9eIc676o6xLkvJeMbZAX2F8X3pK8+6sILY
W9g6ti7mE39TXVJ6J+nfLs3ZRPX7ubNZnOl6Z9Kzb5Fser7LU1/t/X5jzeW5
JD3/9sqk55u8bHoWjg99lb497NLcXhvn6esz6Rk5P5uerfPV7fX9zlrE75Sk
fyv0yaTnyEw2/bvheHVXfdn4rDFX9R3HOrNM7KUxV9mxrBMrEs8xW8tmxdoi
jWPe8jKyN/ZVfTv0NJRZSbomtmU/qhvk9vM4O3Zjh7nWJb4bNs74Un6n+j3v
WZUtKkj3rtivCgvSPa2UnmuNDxq3lpfibKvOk2YxH4qkv990r230ztCzRX1+
7ozUUV9+rFH56Zn1CHYd+0vdRlbkznBd+Gux1+anfxvEvt9G39fqOrm1vUKs
QVI0PnfMc/YvzcLc4w==
          "]], 
         Polygon3DBox[{{970, 1124, 714, 836, 1388, 969}, {972, 1125, 715, 853,
           1391, 971}}]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {{}, {}, {}, 
     {GrayLevel[0.2], 
      Line3DBox[{428, 616, 1394, 429, 1493, 629, 456, 1495, 643, 470, 1499, 
       657, 484, 1505, 671, 498, 1513, 685, 512, 794, 1570, 699, 526, 1585, 
       851, 852, 837, 838, 713, 1571, 540, 808, 809, 795, 370, 826, 1578, 727,
        554, 847, 848, 796, 810, 1575, 740, 568, 803, 804}], 
      Line3DBox[{430, 617, 1395, 431, 630, 1407, 457, 1496, 644, 471, 1500, 
       658, 485, 1506, 672, 499, 1514, 686, 513, 1523, 859, 700, 527, 1534, 
       836, 714, 1580, 541, 396, 828, 357, 1572, 555, 263, 403, 1289, 339, 
       359, 317, 318, 1246, 315, 580, 266, 1218, 279, 802}], 
      Line3DBox[{432, 618, 1396, 433, 631, 1408, 458, 645, 1419, 472, 1501, 
       659, 486, 1507, 673, 500, 1515, 687, 514, 1524, 701, 528, 1535, 853, 
       715, 1586, 542, 827, 728, 1581, 556, 797, 741, 1577, 569, 849, 785, 
       829, 1568, 830, 834, 831, 581, 811, 813, 786, 1576, 816, 814, 817, 815,
        591, 805, 807, 1574, 787, 818, 812, 819}], 
      Line3DBox[{434, 619, 1397, 435, 632, 1409, 459, 646, 1420, 473, 660, 
       1429, 487, 1508, 674, 501, 1516, 688, 515, 1525, 702, 529, 1536, 716, 
       1449, 543, 729, 1460, 557, 413, 1300, 414, 360, 1271, 368, 1272, 221, 
       244, 326, 1250, 223, 299, 1230, 349, 247, 334, 249}], 
      Line3DBox[{436, 620, 1398, 437, 633, 1410, 460, 647, 1421, 474, 661, 
       1430, 488, 675, 1437, 502, 1517, 689, 516, 1526, 703, 530, 1537, 717, 
       1450, 544, 730, 1461, 558, 742, 1470, 570, 860, 1588, 861, 862, 863, 
       839, 1582, 841, 840, 842, 843, 1583, 788, 850, 789, 820, 801, 806, 
       1573, 790, 798, 791, 822, 821, 799}], 
      Line3DBox[{438, 621, 1399, 439, 634, 1411, 461, 648, 1422, 475, 662, 
       1431, 489, 676, 1438, 503, 690, 1443, 517, 1527, 704, 531, 1538, 718, 
       1451, 545, 731, 1462, 559, 743, 1471, 571, 752, 1478, 582, 854, 1587, 
       855, 856, 857, 858, 1579, 833, 832, 844, 1584, 845, 846, 800, 824, 825,
        823, 835}], 
      Line3DBox[{440, 622, 1400, 441, 635, 1412, 462, 649, 1423, 476, 663, 
       1432, 490, 677, 1439, 504, 691, 1444, 518, 705, 1447, 532, 1539, 719, 
       1452, 546, 732, 1463, 560, 744, 1472, 572, 753, 1479, 583, 761, 1484, 
       592, 769, 1488, 600, 777, 1491, 608}], 
      Line3DBox[{8, 871, 23, 885, 38, 900, 53, 915, 68, 930, 83, 945, 98, 959,
        113, 979, 980, 128, 1000, 143, 1012, 157, 1024, 170, 1036, 183, 1047, 
       195, 1059, 206}], 
      Line3DBox[{442, 623, 1401, 443, 1494, 636, 463, 1497, 650, 477, 1502, 
       664, 491, 1509, 678, 505, 1518, 692, 519, 1528, 706, 533, 1540, 720, 
       1453, 547, 1547, 733, 561, 1548, 745, 573, 1550, 754, 584, 1553, 762, 
       593, 1557, 770, 601, 1562, 778, 609}], 
      Line3DBox[{444, 624, 1402, 445, 637, 1413, 464, 1498, 651, 478, 1503, 
       665, 492, 1510, 679, 506, 1519, 693, 520, 1529, 707, 534, 1541, 721, 
       1454, 548, 734, 1464, 562, 1549, 746, 574, 1551, 755, 585, 1554, 763, 
       594, 1558, 771, 602, 1563, 779, 610}], 
      Line3DBox[{446, 625, 1403, 447, 638, 1414, 465, 652, 1424, 479, 1504, 
       666, 493, 1511, 680, 507, 1520, 694, 521, 1530, 708, 535, 1542, 722, 
       1455, 549, 735, 1465, 563, 747, 1473, 575, 1552, 756, 586, 1555, 764, 
       595, 1559, 772, 603, 1564, 780, 611}], 
      Line3DBox[{448, 626, 1404, 449, 639, 1415, 466, 653, 1425, 480, 667, 
       1433, 494, 1512, 681, 508, 1521, 695, 522, 1531, 709, 536, 1543, 723, 
       1456, 550, 736, 1466, 564, 748, 1474, 576, 757, 1480, 587, 1556, 765, 
       596, 1560, 773, 604, 1565, 781, 612}], 
      Line3DBox[{450, 627, 1405, 451, 640, 1416, 467, 654, 1426, 481, 668, 
       1434, 495, 682, 1440, 509, 1522, 696, 523, 1532, 710, 537, 1544, 724, 
       1457, 551, 737, 1467, 565, 749, 1475, 577, 758, 1481, 588, 766, 1485, 
       597, 1561, 774, 605, 1566, 782, 613}], 
      Line3DBox[{452, 628, 1406, 453, 641, 1417, 468, 655, 1427, 482, 669, 
       1435, 496, 683, 1441, 510, 697, 1445, 524, 1533, 711, 538, 1545, 725, 
       1458, 552, 738, 1468, 566, 750, 1476, 578, 759, 1482, 589, 767, 1486, 
       598, 775, 1489, 606, 1567, 783, 614}], 
      Line3DBox[{454, 792, 1569, 793, 455, 642, 1418, 469, 656, 1428, 483, 
       670, 1436, 497, 684, 1442, 511, 698, 1446, 525, 712, 1448, 539, 1546, 
       726, 1459, 553, 739, 1469, 567, 751, 1477, 579, 760, 1483, 590, 768, 
       1487, 599, 776, 1490, 607, 784, 1492, 615}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{865, 1394, 1067, 864, 1395, 1068, 866, 1396, 1069, 867, 1397,
        1070, 868, 1398, 1071, 869, 1399, 1072, 870, 1400, 1073, 871, 1401, 
       1074, 872, 1402, 1075, 873, 1403, 1076, 874, 1404, 1077, 875, 1405, 
       1078, 876, 1406, 1079, 877, 1569, 1188, 1080, 1189}], 
      Line3DBox[{879, 1312, 1493, 878, 1407, 1081, 880, 1408, 1082, 881, 1409,
        1083, 882, 1410, 1084, 883, 1411, 1085, 884, 1412, 1086, 885, 1313, 
       1494, 886, 1413, 1087, 887, 1414, 1088, 888, 1415, 1089, 889, 1416, 
       1090, 890, 1417, 1091, 891, 1418, 1092, 892}], 
      Line3DBox[{894, 1314, 1495, 893, 1315, 1496, 895, 1419, 1093, 896, 1420,
        1094, 897, 1421, 1095, 898, 1422, 1096, 899, 1423, 1097, 900, 1316, 
       1497, 901, 1317, 1498, 902, 1424, 1098, 903, 1425, 1099, 904, 1426, 
       1100, 905, 1427, 1101, 906, 1428, 1102, 907}], 
      Line3DBox[{909, 1318, 1499, 908, 1319, 1500, 910, 1320, 1501, 911, 1429,
        1103, 912, 1430, 1104, 913, 1431, 1105, 914, 1432, 1106, 915, 1321, 
       1502, 916, 1322, 1503, 917, 1323, 1504, 918, 1433, 1107, 919, 1434, 
       1108, 920, 1435, 1109, 921, 1436, 1110, 922}], 
      Line3DBox[{924, 1324, 1505, 923, 1325, 1506, 925, 1326, 1507, 926, 1327,
        1508, 927, 1437, 1111, 928, 1438, 1112, 929, 1439, 1113, 930, 1328, 
       1509, 931, 1329, 1510, 932, 1330, 1511, 933, 1331, 1512, 934, 1440, 
       1114, 935, 1441, 1115, 936, 1442, 1116, 937}], 
      Line3DBox[{939, 1332, 1513, 938, 1333, 1514, 940, 1334, 1515, 941, 1335,
        1516, 942, 1336, 1517, 943, 1443, 1117, 944, 1444, 1118, 945, 1337, 
       1518, 946, 1338, 1519, 947, 1339, 1520, 948, 1340, 1521, 949, 1341, 
       1522, 950, 1445, 1119, 951, 1446, 1120, 952}], 
      Line3DBox[{966, 1122, 1448, 965, 1533, 1351, 964, 1532, 1350, 963, 1531,
        1349, 962, 1530, 1348, 961, 1529, 1347, 960, 1528, 1346, 959, 1121, 
       1447, 958, 1527, 1345, 957, 1526, 1344, 956, 1525, 1343, 955, 1524, 
       1342, 954, 1393, 1523, 1304, 953, 1570, 1191, 1190, 1200}], 
      Line3DBox[{968, 1204, 1216, 1205, 1192, 1278, 1571, 1123, 1277, 1276, 
       1279, 1580, 1124, 970, 1297, 1298, 1586, 1125, 972, 1449, 1126, 974, 
       1450, 1127, 976, 1451, 1128, 978, 1452, 1129, 980, 1453, 1130, 982, 
       1454, 1131, 984, 1455, 1132, 986, 1456, 1133, 988, 1457, 1134, 990, 
       1458, 1135, 992, 1459, 1136, 994}], 
      Line3DBox[{993, 1546, 1362, 991, 1545, 1361, 989, 1544, 1360, 987, 1543,
        1359, 985, 1542, 1358, 983, 1541, 1357, 981, 1540, 1356, 979, 1539, 
       1355, 977, 1538, 1354, 975, 1537, 1353, 973, 1536, 1352, 971, 1391, 
       1535, 1296, 969, 1388, 1534, 1305, 1307, 1306, 967, 1390, 1585, 1292, 
       1231, 1233, 1232, 1237}], 
      Line3DBox[{995, 1176, 1228, 1238, 1294, 1363, 1578, 1261, 1239, 1240, 
       1202, 1264, 1572, 1137, 1263, 1262, 1280, 1581, 1138, 996, 1460, 1139, 
       997, 1461, 1140, 998, 1462, 1141, 999, 1463, 1142, 1000, 1364, 1547, 
       1001, 1464, 1143, 1002, 1465, 1144, 1003, 1466, 1145, 1004, 1467, 1146,
        1005, 1468, 1147, 1006, 1469, 1148, 1007}], 
      Line3DBox[{1019, 1158, 1477, 1018, 1157, 1476, 1017, 1156, 1475, 1016, 
       1155, 1474, 1015, 1154, 1473, 1014, 1549, 1366, 1013, 1548, 1365, 1012,
        1153, 1472, 1011, 1152, 1471, 1010, 1151, 1470, 1009, 1150, 1300, 
       1299, 1008, 1149, 1577, 1236, 1195, 1290, 1257, 1291, 1201, 1295, 1256,
        1289, 1255, 1229, 1177, 1234, 1194, 1575, 1223, 1222, 1241, 1193, 
       1242}], Line3DBox[{1031, 1166, 1483, 1030, 1165, 1482, 1029, 1164, 
       1481, 1028, 1163, 1480, 1027, 1552, 1369, 1026, 1551, 1368, 1025, 1550,
        1367, 1024, 1162, 1479, 1023, 1161, 1478, 1022, 1160, 1309, 1308, 
       1588, 1021, 1159, 1271, 1265, 1266, 1267, 1568, 1387, 1274, 1179, 1247,
        1245, 1197, 1244, 1246, 1243, 1198, 1178, 1196, 1235, 1020, 1206}], 
      Line3DBox[{1043, 1170, 1487, 1042, 1169, 1486, 1041, 1168, 1485, 1040, 
       1556, 1373, 1039, 1555, 1372, 1038, 1554, 1371, 1037, 1553, 1370, 1036,
        1167, 1484, 1035, 1302, 1301, 1587, 1034, 1282, 1310, 1281, 1582, 
       1311, 1033, 1293, 1184, 1272, 1183, 1275, 1273, 1032, 1224, 1249, 1576,
        1182, 1248, 1181, 1225, 1260, 1207, 1218, 1180, 1217}], 
      Line3DBox[{1054, 1173, 1490, 1053, 1172, 1489, 1052, 1561, 1378, 1051, 
       1560, 1377, 1050, 1559, 1376, 1049, 1558, 1375, 1048, 1557, 1374, 1047,
        1171, 1488, 1046, 1270, 1303, 1269, 1579, 1392, 1045, 1287, 1187, 
       1283, 1583, 1386, 1288, 1284, 1044, 1226, 1252, 1186, 1250, 1185, 1211,
        1227, 1210, 1251, 1385, 1574, 1220, 1221, 1209, 1219, 1208}], 
      Line3DBox[{1055, 1258, 1259, 1230, 1254, 1268, 1253, 1056, 1212, 1213, 
       1573, 1203, 1215, 1214, 1057, 1389, 1584, 1286, 1285, 1199, 1058, 1491,
        1174, 1059, 1379, 1562, 1060, 1380, 1563, 1061, 1381, 1564, 1062, 
       1382, 1565, 1063, 1383, 1566, 1064, 1384, 1567, 1065, 1492, 1175, 
       1066}]}}},
   VertexNormals->CompressedData["
1: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
tSD8ojoZPKJ43v+msX363gkHYAg9d/oBWTTqZS0oxfGp+MiYoP/UGXZopI4l
asYhkTuJfTg+1I3Kk45lbvDDbF7v/lJ8bpzucMI8Us/Ll6rs/Dwg9NShrIaL
yagl8zQ17m/tHTVbvPS94J2Iv/H7qtRV/2cc4f+0Jvyf9EluVDgPd+2rqglU
1IYkoR0HqZbWj76t4YI4/3xxC97xcGneiapg3FbB4oMe6VDa4vWOXYut4uFZ
I2Cy+W769/he5FYvFYTrYWZqbwkdfzOwsBUxjtQIQs6En9OM8HNyE37OV4Kn
wrAf/kXTycDdPx0h03vz4n7BOOT4sqsIc2vbNx44VWjgCimit/6iyqX+IKrG
i/NPJbB37PRwB9rwuk02S/3hcjxNI37ek6mOLV9lPUH7FlNd49LzPiN8mAGE
D3Mn4cP0MJ+5i5/LszLy+p4RHTBVGKjX2OWNuk7wcuC8Ye+t/idf0QA++1tL
HR7Zg1JS2wzwvKN6lSol5rMJ9AyUmm9/HIgCCP9kFuGfnCX8k4fPvW/B84ji
+VPb4pycYS+X0v3H0YmIkplcAevOw2e/Z0i4ucHI1AT/xtJkJFhZerUY5z0Z
rS0+Ih7AKn8oKWepP6/4G7sJf+ME4W8MfSa5gO9zRJWuOTRPD7a6S/DIzfkh
gxEOA1yXvhCvvSHFZgS1qZl2Wr8C0HXCfyhF+A9TCf9h6tbNNfW4zg+ZlGDo
cYGTYr0tSinJqOy74rYTS+33LbZkdvO4g79zS8JYWuqqD5CB8AG2ED7Aj6Nd
AXg+ehxyhy7OaifkPylYmJ30X/XjJRF+PE/Cj3dQQYW6FM8Xk30q67ncgEp4
SJTGI3XV/1ZL+N94Cf9bNeE34yb8Zn3/+M1uEX6zx4Tf7IBLqBeJN9KvErX/
+2YwS7py8G/dTjQQ1qqJ823eea3bakaiIPJqsEZh1Ar5uZO54XFRdH4YRbRL
Q2F4vP5NDhd0z/NyAc4PsxsEM6ozlCAsu9VyL4UXYrz3rB7HYX4wx6x2vwaw
3oyvtnL0Q23JphE4/kM3uY/JV+rAm/3To7+4AtEOwm+WTvjN1hN+s2PlZ9fg
dUF2oOlvy2kTkP1kK7NnOhyVbOA0Iq0L5i58u5JtDoWqoftehEWjRoEnmzFv
dh152t0+cysw0Tnou1E6HtU9ERXDdW/rjTuOUxq24NP63dAvPwnJMiqx4br3
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
Qf8PfWxrxA==
    "]],
  Axes->True,
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  Method->{},
  PlotRange->{{0.040000002857142856`, 
   0.07999999714285715}, {-125.29352192819334`, 
   322.8361791574411}, {-20.168500618880515`, 54.84174424433955}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot3D", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"r", ",", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "-", "\[CapitalThorn]\[CapitalGamma]"}], ")"}], 
             RowBox[{"-", "1"}]], ",", "\[ScriptB]E"}], "}"}], " ", "/.", " ", 
          RowBox[{"r", " ", "\[Rule]", "rIndex"}]}], ")"}], "/.", " ", 
        RowBox[{"\[GothicG]", "\[Rule]", "0.025"}]}], ")"}], "/.", " ", 
      RowBox[{"\[CurlyTheta]", "\[Rule]", "\[CurlyTheta]Index"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"\[CurlyTheta]Index", ",", "0.", ",", "0.05", ",", "0.005"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"rIndex", ",", "0.04", ",", "0.08", ",", "0.005"}], "}"}]}], 
    "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input"],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJxF1Xs01PkbwPFJOMWRjpJ1acaYMW4Ns4aSS/MM4zJrYhi33LJy2XLLlGkb
lUsKtR0ryy5jq3PG1mjt5FYIJbdNaFuRaTlhbbHsacnK5af8tFtPzzmfP7/P
eb++nz8+5Mgk32glAoFwYO2sXzupW+XuY+Iy1kjRd/Nz40FwsuStw7CpE6gN
Sg87qV1j1W2ZG5fujYANaXM1DY0AJcXvppy12/UPCq8kFtSu5GzftNEVzELz
WudNK1g0ce+lUUEK6P/g3u1jy4d64plpn3o5K3Nzg+xlpATqPHN7eRrJULa2
fVBayZp4CFX1WRktx4Y3993S9W750OPUST2sviKAjfeqV/VEO7GnIH/1crws
CDZ+I8lLK7fDnsx2w+yvt0ZAQdAA8eVxR+zx6C0tvr8tFnw3VFCzp9nYY1q3
ZGKUcBQOebEVSh6e2JM7mu7QsFAIb6My2Ar3L+Avn3dfVLEkoW9SOmmnWyrP
1MT9PeWFnU3eOoKZW3xIWfjm1E0ta+xc0UoiX/5NANlfHWny92diZ5ljVuPX
iUGgFZX9+6UQW+z8p2ZVQm7cD0Odp+svtNhh53OnEeOtJTFQaHi234bCws6B
3DEXHckRWLScW1Y56I6dIo5FbkT4RTjHaP8zyysSbJjvpoa16WpOT5jumZba
C0+lHUEf/3P00TZf81YeNCtxdJbf0LGfkK8cpiTlwy8bhPzOr6yw3+HJ3yNz
DQIw4JCzexYZ2G8vmT3vtTMILKq3BW/ut8b+pXPBws0++4Ge8EmByzNb7HeL
zuu/TomBOeGcQnrMAfs3TGz8XHtICNObrH45FsPB/h71mcEpSR6o8nXlk/dC
4b/+WlZlzNQNlii7ZbS0lTjH4KNLNYS0M4XNBSKd4pcpMkNX2fVO48ZyHhCe
CXJGxeboknePyI/m8WE3Pe9kFGEHuioIVbbrSwTgcJOoWwKW6DLS6OMVrgZC
xe2VjJx+BrrsUjUL6qfC4SI7nb+Yz0RXV5zjDe2aaOi57ls+dtYOXYdz7H1/
NxfCU3NtWTTBGV1y8446w47zwLDlsbs/C4QPrkTGpZVNOW6wz6GBVLSOhi62
NNZZbM2FuP+V2t6ppqEr294nriqfB7+292RK6kzQpZEgKuSc4MMekUHNAt0M
XaL+hvlOsQAC78An97kW6LrzZZuh/4NAcJmwGqyMt0RXbQpBNpkdDgGK2/K4
6k/RtcSsov/pHg0JD/KZi8Sd6NqhVbTtUk4yXNNK20XVAHRJKUWjpsEcOG2i
ZN/yGQVdiQTvuh1pbjA0GmBp/zMFXYembJ7cpHChg0BaXjlBRRdT9mOlmpgH
FL/S07dOGKOL2MY4lnSQDx4FNZbNYzR0PY3eYrc7VAB3S8kc8pApukJFJKW0
okCosttXEddigS7uy74aoWk4dDG1tG2pDHQFKZqetY1FwbXXDiosog26CmPV
F2rzncFHZSDjogEZXa9cx1VC/TmgFPPrhb0iMrrqDLUdY0VuILfRXze7SEZX
8Ph4F02bCzOy+lNfyI3QVVRI+rY9kgdlMuKsw1UKuk6yn/e9CuCDe8g53bNL
VHQ10zQD/PYIwM4njbzlMQ1dew4papWjAkGv3JzanWGGrkeq6Q8sesIgavLF
xCMZHV0i/7XRZkNyXPLzwGtEdImf/jRVn+cMZndDE+ItSOgaPlhl9T2fA81h
ysuvp0noCl8dWW1OcAO/2VWPCrEhuipj9N92q3IhM6n1FZVORpeXOv3xsCcP
vBRbNAb0jdAlpzXt6eHwwThp7PGTMAq6CnMfvNAiC8CpODnESc8YXXHxSQ0K
60DwHB5VZH1ngi6X5XD6/FUWzCSNLx6/oY+uA++9qjetdIK1DNCl6ZdAbb3g
DPrVZ/QspQboev3ileFfnhzwEI3Evzm4HV3q+rqpjGg3EPYFpEmERHRFFGeG
lC16QELoE/MrD0noMvDusvCx5cFv9pp6wh5DdN0+ZxS7ZM2HmesP/1F+S0YX
d9d0Y5KyAKI0tw0oLlPQ1c6izTLTnMBUqKGnY6WLLqOIHS695Sy4XW9sayLW
RdeH+0132eq4OKmLrtH+/XmPzjvDvtp7d6fS9dClIl3+3sOdA+qJlen3uPro
OhWWY3Yn1A0iJVMZt7wMPrr0xH3yKQ/Qc+1T23tlO7r+6Lh6nETiQdTE+aWs
QBK6Cnq7Nb4k80HIyhqc7DWEtnnTtaIfWIcy1eTFid5gULZ+YGzZEtTfu3bd
l2VlafhAqmvbxa4FKxD8Gypj2XvzrJsO+ELCEbYsSMzAPUzPmLM6yt7QqTLE
jOj4uGfd+3fw0ft38MOey0wxMdXSF5ypPw1+u58B/wcdVSQj
   "], {{{}, {}, {}, 
     {RGBColor[0.922526, 0.385626, 0.209179], EdgeForm[None], Specularity[
       GrayLevel[1], 6], 
      StyleBox[
       GraphicsGroup3DBox[{Polygon3DBox[{{94, 22, 97}, {99, 24, 96}}], 
         Polygon3DBox[{{96, 95, 98, 99}}], 
         Polygon3DBox[{{95, 94, 97, 23, 98}}]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30756835, 0.18676585, 0.147065275]}, {"Directional", 
          RGBColor[0.2306315, 0.0964065, 0.05229475], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          GrayLevel[0.3], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2306315, 0.0964065, 0.05229475], 
          
          ImageScaled[{2, 0, 
           2}]}}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}}, {{}, {}, {}, 
     {GrayLevel[0], Line3DBox[{96, 24, 99, 98, 23, 97, 22, 94, 95, 96}]}, 
     {GrayLevel[0.2], Line3DBox[{96, 99}], Line3DBox[{97, 94}], 
      Line3DBox[{95, 
       98}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}},
   VertexNormals->CompressedData["
1:eJxTTMoPSmViYGBIBmJmhlEwUkFhevIfnf/v7f+073nn9C1m/5or0WJBl3vs
SRUfaH+MglEwCkbBKBhZgFr1F7XEAWAKf4s=
    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{All, All, All},
  PlotRangePadding->{Automatic, Automatic, Automatic},
  Ticks->{Automatic, Automatic, Automatic}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"Transpose", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"\[CapitalThorn]\[CapitalGamma]", "-", "1"}], ")"}], 
           RowBox[{"-", "1"}]], ",", "\[ScriptB]E"}], "}"}], " ", "/.", " ", 
        RowBox[{"r", " ", "\[Rule]", "0.04"}]}], ")"}], "/.", " ", 
      RowBox[{"\[GothicG]", "\[Rule]", "0.025"}]}], ")"}], "/.", " ", 
    RowBox[{"\[CurlyTheta]", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "0.0", ",", "0.01", ",", "0.02", ",", "0.03", ",", "0.04", ",", 
       "0.05"}], "}"}]}]}], "]"}], "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {GrayLevel[0], PointSize[0.012833333333333334`], AbsoluteThickness[1.6], 
     StyleBox[
      PointBox[{{-99.56176509763053, 29.15961050954728}, {-66.85841824795256, 
       18.07308188568955}, {-50.51138950854333, 
       12.731463078779196`}, {-40.704372475919875`, 
       9.645997822535497}, {-34.1666666666669, 
       7.663421235129918}, {-29.496886321867137`, 6.295986563749956}}],
      FontSize->14]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-28.40212259099584, 0},
  BaseStyle->{FontSize -> 14},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{468., 289.23990673495075`},
  Method->{},
  PlotRange->{{-99.56176509763053, -29.496886321867137`}, {
    0, 29.15961050954728}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "\[ScriptB]EHi", ",", "\[ScriptB]ELo", ",", "HWHi", ",", "HWLo", ",", 
     "\[Thorn]gHi", ",", "\[Thorn]gLo", ",", "rM\[Gamma]Hi", ",", 
     "rM\[Gamma]Lo"}], "}"}], "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"ResultsByGandR", ",", "1"}], "]"}]}], ";", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[ScriptB]EHi", "/", 
     RowBox[{"Total", "[", "\[ScriptB]EHi", "]"}]}], ",", 
    RowBox[{"\[ScriptB]ELo", "/", 
     RowBox[{"Total", "[", "\[ScriptB]ELo", "]"}]}]}], "}"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "0.24888852716843063`", ",", "0.286455834652792`", ",", 
     "0.4646556381787773`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.1632198597738854`", ",", "0.22940802665786356`", ",", 
     "0.6073721135682509`"}], "}"}]}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[ScriptB]EHi", "/", 
    RowBox[{"Total", "[", "\[ScriptB]EHi", "]"}]}], ",", 
   RowBox[{"\[ScriptB]ELo", "/", 
    RowBox[{"Total", "[", "\[ScriptB]ELo", "]"}]}]}], "}"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "0.17391963510161543`", ",", "0.13335665454000575`", ",", 
     "0.6927237103583789`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.10208854589903965`", ",", "0.16892806322485437`", ",", 
     "0.728983390876106`"}], "}"}]}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Total", "[", "\[ScriptB]EHi", "]"}]], "Input"],

Cell[BoxData["3.0436126659605027`"], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SuperscriptBox[
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\[CapitalGamma]", "/", "R"}], ")"}], "+", 
      RowBox[{"\[Zeta]", " ", 
       RowBox[{"\[CapitalGamma]", "/", "R"}]}], "-", "1"}], ",", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\[CapitalGamma]", "/", "R"}], ")"}], "+", " ", 
      RowBox[{"\[Kappa]", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", "\[Aleph]"}], ")"}], 
        RowBox[{"1", "/", "\[Rho]"}]]}], "-", "1"}], ",", 
     RowBox[{"(", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[CapitalGamma]", "/", "R"}], "-", "1"}], ")"}], "+", " ", 
       RowBox[{"\[Kappa]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"\[Aleph]", "+", "1"}], ")"}], 
         RowBox[{"1", "/", "\[Rho]"}]]}]}], ")"}], "\[IndentingNewLine]", ",",
      " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[CapitalGamma]", "/", "R"}], "-", "1"}], ")"}], "+", 
      RowBox[{"\[Kappa]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["\[Rho]", 
           RowBox[{"-", "1"}]], 
          RowBox[{"(", 
           RowBox[{"\[Aleph]", "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["\[Rho]", 
                RowBox[{"-", "1"}]], "-", "1"}], ")"}], 
             SuperscriptBox["\[Aleph]", "2"], 
             RowBox[{"(", 
              RowBox[{"\[Omega]", "/", "2"}], ")"}]}]}], ")"}]}], "+", "1"}], 
        ")"}]}]}], "\[IndentingNewLine]", ",", "  ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[CapitalGamma]", "/", "R"}], "-", "1"}], ")"}], "+", 
      RowBox[{"\[Kappa]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["\[Rho]", 
           RowBox[{"-", "1"}]], 
          RowBox[{"(", "\[Aleph]", ")"}]}], "+", "1"}], ")"}]}]}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[CapitalGamma]", "/", "R"}], "-", "1"}], ")"}], "+", 
      RowBox[{"\[Kappa]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{"\[CapitalThorn]\[CapitalGamma]", "-", "1"}], ")"}]}], "/", 
          "\[Mho]"}], "+", "1"}], ")"}]}]}], "\[IndentingNewLine]", ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[CapitalGamma]", "/", "R"}], "-", "1"}], ")"}], "-", 
      RowBox[{"\[Kappa]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"\[CapitalThorn]\[CapitalGamma]", "-", "1"}], ")"}], "/", 
          "\[Mho]"}], "-", "1"}], ")"}]}]}], "\[IndentingNewLine]", ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[CapitalGamma]", "/", "R"}], "-", "1"}], ")"}], "+", 
      RowBox[{"\[Kappa]", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"\[CapitalThorn]\[CapitalGamma]", "-", "1"}], ")"}], "/", 
          "\[Mho]"}]}], ")"}]}]}], "\[IndentingNewLine]", ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"\[GothicCapitalG]", "+", "\[Mho]"}], ")"}], "/", "R"}], 
        "-", "1"}], ")"}], "+", 
      RowBox[{"\[Kappa]", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"\[CapitalThorn]\[CapitalGamma]", "-", "1"}], ")"}], "/", 
          "\[Mho]"}]}], ")"}]}]}], "\[IndentingNewLine]", ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[GothicCapitalG]", "/", "R"}], "+", 
          RowBox[{"\[Mho]", "/", "R"}]}], ")"}], "-", "1"}], ")"}], "+", 
      RowBox[{"\[Kappa]", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[CapitalThorn]", "/", "\[CapitalGamma]"}], "-", "1"}], 
           ")"}], "/", "\[Mho]"}]}], ")"}]}]}], "\[IndentingNewLine]", ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[GothicCapitalG]", "/", "R"}], "+", 
          RowBox[{"\[Mho]", "/", "R"}]}], ")"}], "-", "1"}], ")"}], "+", 
      RowBox[{"\[Kappa]", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[CapitalThorn]", "/", 
             RowBox[{"(", 
              RowBox[{"\[GothicCapitalG]", "+", "\[Mho]"}], ")"}]}], "-", 
            "1"}], ")"}], "/", "\[Mho]"}]}], ")"}]}]}], "\[IndentingNewLine]",
      ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[GothicCapitalG]", "/", "R"}], "+", 
          RowBox[{"\[Mho]", "/", "R"}]}], ")"}], "-", "1"}], ")"}], "+", 
      RowBox[{"\[Kappa]", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[CapitalThorn]", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "\[Mho]"}], ")"}], "/", 
              "\[GothicCapitalG]"}]}], "-", "1"}], ")"}], "/", "\[Mho]"}]}], 
        ")"}]}]}], "\[IndentingNewLine]", ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[GothicCapitalG]", "/", "R"}], "+", 
          RowBox[{"\[Mho]", "/", "R"}]}], ")"}], "-", "1"}], ")"}], "+", 
      RowBox[{"\[Kappa]", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[CapitalThorn]\[GothicCapitalG]", 
             RowBox[{"(", 
              RowBox[{"1", "-", "\[Mho]"}], ")"}]}], "-", "1"}], ")"}], "/", 
          "\[Mho]"}]}], ")"}]}]}], "\[IndentingNewLine]", ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[GothicCapitalG]", "/", "R"}], "+", 
          RowBox[{"\[Mho]", "/", "R"}]}], ")"}], "-", "1"}], ")"}], "+", 
      RowBox[{"\[Kappa]", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[CapitalThorn]\[GothicCapitalG]", 
             RowBox[{"(", 
              RowBox[{"1", "-", "\[Mho]"}], ")"}]}], "-", "1"}], ")"}], "/", 
          "\[Mho]"}]}], ")"}]}]}], "\[IndentingNewLine]", ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[GothicCapitalG]", "/", "R"}], "+", 
          RowBox[{"\[Mho]", "/", "R"}]}], ")"}], "-", "1"}], ")"}], "+", 
      RowBox[{"\[Kappa]", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"\[CapitalThorn]\[GothicCapitalG]", "-", "1"}], ")"}], 
            SuperscriptBox["\[Mho]", 
             RowBox[{"-", "1"}]]}], "-", 
           RowBox[{"(", "\[CapitalThorn]\[GothicCapitalG]", ")"}]}], ")"}]}], 
        ")"}]}]}], "\[IndentingNewLine]", ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[GothicCapitalG]", "/", "R"}], "+", 
          RowBox[{"\[Mho]", "/", "R"}]}], ")"}], "-", "1"}], ")"}], "+", 
      RowBox[{"\[Kappa]", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"\[CapitalThorn]\[GothicCapitalG]", "-", "1"}], ")"}], 
            SuperscriptBox["\[Mho]", 
             RowBox[{"-", "1"}]]}], "-", 
           RowBox[{"(", "\[CapitalThorn]\[GothicCapitalG]", ")"}]}], ")"}]}], 
        ")"}]}]}], "\[IndentingNewLine]", ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[GothicCapitalG]", "/", "R"}], "+", 
          RowBox[{"\[Mho]", "/", "R"}]}], ")"}], "-", "1"}], ")"}], "+", 
      RowBox[{"\[Kappa]", "  ", 
       SuperscriptBox["\[Mho]", 
        RowBox[{"-", "1"}]], 
       RowBox[{"(", 
        RowBox[{"\[Mho]", "-", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"\[CapitalThorn]\[GothicCapitalG]", "-", "1"}], ")"}], 
           "-", 
           RowBox[{"(", 
            RowBox[{"\[CapitalThorn]\[GothicCapitalG]", " ", "\[Mho]"}], 
            ")"}]}], ")"}]}], ")"}]}]}], "\[IndentingNewLine]", ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[GothicCapitalG]", "/", "R"}], "+", 
          RowBox[{"\[Mho]", "/", "R"}]}], ")"}], "-", "1"}], ")"}], "+", 
      RowBox[{"\[Kappa]", "  ", 
       SuperscriptBox["\[Mho]", 
        RowBox[{"-", "1"}]], 
       RowBox[{"(", 
        RowBox[{"\[Mho]", "-", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[CapitalThorn]\[GothicCapitalG]", 
            RowBox[{"(", 
             RowBox[{"1", "-", "\[Mho]"}], ")"}]}], "-", "1"}], ")"}]}], 
        ")"}]}]}], "\[IndentingNewLine]", ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[GothicCapitalG]", "/", "R"}], "+", 
          RowBox[{"\[Mho]", "/", "R"}]}], ")"}], "-", "1"}], ")"}], "+", 
      RowBox[{"\[Kappa]", "  ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[CapitalThorn]\[GothicCapitalG]", 
            RowBox[{"(", 
             RowBox[{"1", "-", "\[Mho]"}], ")"}], 
            SuperscriptBox["\[Mho]", 
             RowBox[{"-", "1"}]]}], "-", 
           SuperscriptBox["\[Mho]", 
            RowBox[{"-", "1"}]]}], ")"}]}], ")"}]}]}], "\[IndentingNewLine]", 
     ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[GothicCapitalG]", "/", "R"}], "+", 
          RowBox[{"\[Mho]", "/", "R"}]}], ")"}], "-", "1"}], ")"}], "+", 
      RowBox[{"\[Kappa]", "  ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox["\[Mho]", 
          RowBox[{"-", "1"}]]}], ")"}]}], "-", 
      RowBox[{"\[Kappa]", "  ", "\[CapitalThorn]\[GothicCapitalG]", 
       RowBox[{"(", 
        RowBox[{"1", "-", "\[Mho]"}], ")"}], 
       SuperscriptBox["\[Mho]", 
        RowBox[{"-", "1"}]]}]}], "\[IndentingNewLine]", ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[GothicCapitalG]", "/", "R"}], "+", 
          RowBox[{"\[Mho]", "/", "R"}]}], ")"}], "-", "1"}], ")"}], "+", 
      RowBox[{"\[Kappa]", "  ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox["\[Mho]", 
          RowBox[{"-", "1"}]]}], ")"}]}], "-", 
      RowBox[{"\[Kappa]", "  ", "\[CapitalThorn]\[GothicCapitalG]", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "\[Mho]"}], ")"}], 
       SuperscriptBox["\[Mho]", 
        RowBox[{"-", "1"}]]}]}], "\[IndentingNewLine]", ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[GothicCapitalG]", "/", "R"}], "+", 
          RowBox[{"\[Mho]", "/", "R"}]}], ")"}], "-", "1"}], ")"}], "+", 
      RowBox[{"\[Kappa]", "  ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox["\[Mho]", 
          RowBox[{"-", "1"}]]}], ")"}]}], "-", 
      RowBox[{"\[Kappa]", "  ", 
       RowBox[{"(", 
        RowBox[{"\[CapitalThorn]", "/", "\[GothicCapitalG]"}], " ", ")"}], 
       RowBox[{"(", 
        RowBox[{"1", "-", "\[Mho]"}], ")"}], 
       SuperscriptBox["\[Mho]", 
        RowBox[{"-", "1"}]]}]}], "\[IndentingNewLine]", ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[GothicCapitalG]", "/", "R"}], "+", 
          RowBox[{"\[Mho]", "/", "R"}]}], ")"}], "-", "1"}], ")"}], "+", 
      RowBox[{"\[Kappa]", "  ", 
       SuperscriptBox["\[Mho]", 
        RowBox[{"-", "1"}]], 
       RowBox[{"(", 
        RowBox[{"1", "+", "\[Mho]"}], ")"}]}], "-", 
      RowBox[{"\[Kappa]", " ", 
       SuperscriptBox["\[Mho]", 
        RowBox[{"-", "1"}]], " ", 
       RowBox[{"(", 
        RowBox[{"\[CapitalThorn]", "/", "\[GothicCapitalG]"}], " ", ")"}], 
       RowBox[{"(", 
        RowBox[{"1", "-", "\[Mho]"}], ")"}]}]}], "\[IndentingNewLine]", ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[GothicCapitalG]", "/", "R"}], "+", 
          RowBox[{"\[Mho]", "/", "R"}]}], ")"}], "-", "1"}], ")"}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[CapitalThorn]Rtn", "-", "1"}], ")"}], 
       SuperscriptBox["\[Mho]", 
        RowBox[{"-", "1"}]], 
       RowBox[{"(", 
        RowBox[{"\[Mho]", "-", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"\[CapitalThorn]\[GothicCapitalG]", "-", "1"}], ")"}], 
           "-", 
           RowBox[{"(", 
            RowBox[{"\[CapitalThorn]\[GothicCapitalG]", " ", "\[Mho]"}], 
            ")"}]}], ")"}]}], ")"}]}]}]}], "\[IndentingNewLine]", "}"}], 
   RowBox[{"-", "1"}]], " ", "/.", " ", 
  RowBox[{"\[GothicG]", " ", "\[Rule]", " ", 
   RowBox[{"-", "0.0049"}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "449.9952411456358`", ",", "449.995241145633`", ",", "449.995241145633`", 
   ",", "447.8993303474854`", ",", "445.73849703780036`", ",", 
   "445.8030078270854`", ",", "445.8030078270854`", ",", "445.8030078270854`",
    ",", "445.8921948701695`", ",", "445.89219487064406`", ",", 
   "448.0430078279028`", ",", "445.8921948701695`", ",", "445.8921948701695`",
    ",", "445.8921948701695`", ",", "445.89219487028265`", ",", 
   "445.89219487028265`", ",", "445.89219487062473`", ",", 
   "445.89219487062473`", ",", "445.8921948705668`", ",", 
   "445.8921948700729`", ",", "445.8921948700729`", ",", "445.8921948700729`",
    ",", "445.8921948707793`", ",", "445.89219487062473`"}], 
  "}"}]], "Output"]
}, Open  ]],

Cell[BoxData[" "], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[GothicCapitalG]", "/", "R"}], "+", 
         RowBox[{"\[Mho]", "/", "R"}]}], ")"}], "-", "1"}], ")"}], "+", 
     RowBox[{"\[Kappa]", "  ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SuperscriptBox["\[Mho]", 
         RowBox[{"-", "1"}]]}], ")"}]}], "-", 
     RowBox[{"\[Kappa]", "  ", 
      RowBox[{"(", 
       RowBox[{"\[CapitalThorn]", "/", "\[GothicCapitalG]"}], " ", ")"}], 
      RowBox[{"(", 
       RowBox[{"1", "-", "\[Mho]"}], ")"}], 
      SuperscriptBox["\[Mho]", 
       RowBox[{"-", "1"}]]}]}], ",", 
    RowBox[{"{", "\[GothicG]", "}"}]}], "]"}], " ", "/.", " ", 
  RowBox[{"\[GothicG]", "\[Rule]", 
   RowBox[{"-", "0.0049"}]}]}]], "Input"],

Cell[BoxData["22.42478159238507`"], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"1", "+", 
  RowBox[{"\[Kappa]", "/", "\[Mho]"}]}]], "Input"],

Cell[BoxData["22.42857142857144`"], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"G", "/", "R"}], "+", 
         RowBox[{"\[Mho]", "/", "R"}]}], ")"}], "-", "1"}], ")"}], "+", 
     RowBox[{"\[Kappa]", "  ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SuperscriptBox["\[Mho]", 
         RowBox[{"-", "1"}]]}], ")"}]}], "-", 
     RowBox[{"\[Kappa]", "  ", 
      RowBox[{"(", 
       RowBox[{"\[CapitalThorn]", "/", "G"}], ")"}], 
      RowBox[{"(", 
       RowBox[{"1", "-", "\[Mho]"}], ")"}], 
      SuperscriptBox["\[Mho]", 
       RowBox[{"-", "1"}]]}]}], ",", 
    RowBox[{"{", "G", "}"}]}], "]"}], "\[IndentingNewLine]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "R"], "+", 
  FractionBox[
   RowBox[{"\[CapitalThorn]", " ", "\[Kappa]", " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", "\[Mho]"}], ")"}]}], 
   RowBox[{
    SuperscriptBox["G", "2"], " ", "\[Mho]"}]]}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"Log", "[", 
    RowBox[{"x", " ", "+", " ", 
     RowBox[{"1", "/", "x"}]}], "]"}], ",", 
   RowBox[{"{", "x", "}"}]}], "]"}]], "Input"],

Cell[BoxData[
 FractionBox[
  RowBox[{"1", "-", 
   FractionBox["1", 
    SuperscriptBox["x", "2"]]}], 
  RowBox[{
   FractionBox["1", "x"], "+", "x"}]]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SuperscriptBox[
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\[CapitalGamma]", "/", "R"}], ")"}], "+", 
      RowBox[{"\[Zeta]", " ", 
       RowBox[{"\[CapitalGamma]", "/", "R"}]}], "-", "1"}], 
     "\[IndentingNewLine]", ",", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\[CapitalGamma]", "/", "R"}], ")"}], "+", " ", 
      RowBox[{"\[Kappa]", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", "\[Aleph]"}], ")"}], 
        RowBox[{"1", "/", "\[Rho]"}]]}], "-", "1"}], "\[IndentingNewLine]", 
     ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\[CapitalGamma]", "/", "R"}], ")"}], "+", 
      RowBox[{"\[Zeta]", " ", 
       RowBox[{"\[CapitalGamma]", "/", "R"}]}], "-", "1"}], 
     "\[IndentingNewLine]", ",", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\[CapitalGamma]", "/", "R"}], ")"}], "+", " ", 
      RowBox[{"\[Kappa]", " ", 
       SuperscriptBox["\[Aleph]", 
        RowBox[{"1", "/", "\[Rho]"}]], 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox["\[Aleph]", 
          RowBox[{"-", "1"}]]}], ")"}]}], "-", "1"}], "\[IndentingNewLine]", 
     ",", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\[CapitalGamma]", "/", "R"}], ")"}], "+", " ", 
      RowBox[{"\[Kappa]", " ", 
       SuperscriptBox["\[Aleph]", 
        RowBox[{"1", "/", "\[Rho]"}]], 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"\[Mho]", "/", 
          RowBox[{"(", 
           RowBox[{"\[Rho]", " ", "\[WeierstrassP]rtn"}], ")"}]}]}], 
        ")"}]}], "-", "1"}], "\[IndentingNewLine]", ",", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\[CapitalGamma]", "/", "R"}], ")"}], "+", " ", 
      RowBox[{"\[Kappa]", " ", 
       SuperscriptBox["\[Aleph]", 
        RowBox[{"1", "/", "\[Rho]"}]], 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"\[Mho]", "/", 
          RowBox[{"(", 
           RowBox[{"r", " ", "-", " ", "\[CurlyTheta]", "-", 
            RowBox[{"\[Rho]", " ", "\[Gamma]"}]}], ")"}]}]}], ")"}]}], "-", 
      "1"}], "\[IndentingNewLine]", ",", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\[CapitalGamma]", "/", "R"}], ")"}], "+", " ", 
      RowBox[{"\[Kappa]", " ", 
       SuperscriptBox["\[Aleph]", 
        RowBox[{"1", "/", "\[Rho]"}]], 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"\[Mho]", "/", 
          RowBox[{"(", 
           RowBox[{"r", " ", "-", " ", "\[CurlyTheta]", "-", 
            RowBox[{"\[Rho]", " ", "\[Gamma]"}]}], ")"}]}]}], ")"}]}], "-", 
      "1"}], "\[IndentingNewLine]", ",", " ", 
     RowBox[{"\[Gamma]", "-", "r", "+", " ", 
      RowBox[{"\[Kappa]", " ", 
       SuperscriptBox["\[Aleph]", 
        RowBox[{"1", "/", "\[Rho]"}]], 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"\[Mho]", "/", 
          RowBox[{"(", 
           RowBox[{"r", " ", "-", " ", "\[CurlyTheta]", "-", 
            RowBox[{"\[Rho]", " ", "\[Gamma]"}]}], ")"}]}]}], ")"}]}]}], 
     "\[IndentingNewLine]", ",", " ", 
     RowBox[{"\[GothicG]", "+", "\[Mho]", "-", "r", "+", " ", 
      RowBox[{"\[Kappa]", " ", 
       SuperscriptBox["\[Aleph]", 
        RowBox[{"1", "/", "\[Rho]"}]], 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"\[Mho]", "/", 
          RowBox[{"(", 
           RowBox[{"r", " ", "-", " ", "\[CurlyTheta]", "-", 
            RowBox[{"\[Rho]", " ", 
             RowBox[{"(", 
              RowBox[{"\[GothicG]", "+", "\[Mho]"}], ")"}]}]}], ")"}]}]}], 
        ")"}]}]}], "\[IndentingNewLine]", ",", " ", 
     RowBox[{"\[GothicG]", "+", "\[Mho]", "-", "r", "+", " ", 
      RowBox[{"\[Kappa]", " ", 
       SuperscriptBox["\[Aleph]", 
        RowBox[{"1", "/", "\[Rho]"}]]}]}], "\[IndentingNewLine]", ",", " ", 
     RowBox[{"\[GothicG]", "+", "\[Mho]", "-", "r", "+", " ", 
      RowBox[{"\[Kappa]", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{"r", " ", "-", " ", "\[CurlyTheta]", "-", 
             RowBox[{"\[Rho]", " ", 
              RowBox[{"(", 
               RowBox[{"\[GothicG]", "+", "\[Mho]"}], ")"}]}]}], ")"}]}], "/",
           "\[Mho]"}], ")"}], 
        RowBox[{"1", "/", "\[Rho]"}]], 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"\[Mho]", "/", 
          RowBox[{"(", 
           RowBox[{"r", " ", "-", " ", "\[CurlyTheta]", "-", 
            RowBox[{"\[Rho]", " ", 
             RowBox[{"(", 
              RowBox[{"\[GothicG]", "+", "\[Mho]"}], ")"}]}]}], ")"}]}]}], 
        ")"}]}]}]}], "\[IndentingNewLine]", "}"}], 
   RowBox[{"-", "1"}]], " ", "/.", " ", 
  RowBox[{"\[GothicG]", " ", "\[Rule]", " ", "0.2"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.9058447760633708`", ",", "0.9058447760633705`", ",", 
   "0.9058447760633708`", ",", "0.9012450701674786`", ",", 
   "0.8921617342639542`", ",", "0.9002552712354855`", ",", 
   "0.9002552712354855`", ",", "0.8936682934923281`", ",", 
   "0.8936682934923281`", ",", "0.9037295053104406`", ",", 
   "0.9371616388580852`"}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"-", 
    RowBox[{"Log", "[", 
     RowBox[{"\[GothicG]", "+", "\[Mho]", "-", "r", "+", " ", 
      RowBox[{"\[Kappa]", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{"r", " ", "-", " ", "\[CurlyTheta]", "-", 
             RowBox[{"\[Rho]", " ", 
              RowBox[{"(", 
               RowBox[{"\[GothicG]", "+", "\[Mho]"}], ")"}]}]}], ")"}]}], "/",
           "\[Mho]"}], ")"}], 
        RowBox[{"1", "/", "\[Rho]"}]], 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"\[Mho]", "/", 
          RowBox[{"(", 
           RowBox[{"r", " ", "-", " ", "\[CurlyTheta]", "-", 
            RowBox[{"\[Rho]", " ", 
             RowBox[{"(", 
              RowBox[{"\[GothicG]", "+", "\[Mho]"}], ")"}]}]}], ")"}]}]}], 
        ")"}]}]}], "]"}]}], ",", 
   RowBox[{"{", "\[GothicG]", "}"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"1", "-", 
    FractionBox[
     RowBox[{"\[Kappa]", " ", "\[Rho]", " ", "\[Mho]", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox[
         RowBox[{
          RowBox[{"-", "r"}], "+", "\[CurlyTheta]", "+", 
          RowBox[{"\[Rho]", " ", 
           RowBox[{"(", 
            RowBox[{"\[GothicG]", "+", "\[Mho]"}], ")"}]}]}], "\[Mho]"], 
        ")"}], 
       FractionBox["1", "\[Rho]"]]}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"r", "-", "\[CurlyTheta]", "-", 
        RowBox[{"\[Rho]", " ", 
         RowBox[{"(", 
          RowBox[{"\[GothicG]", "+", "\[Mho]"}], ")"}]}]}], ")"}], "2"]], "+", 
    FractionBox[
     RowBox[{"\[Kappa]", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox[
         RowBox[{
          RowBox[{"-", "r"}], "+", "\[CurlyTheta]", "+", 
          RowBox[{"\[Rho]", " ", 
           RowBox[{"(", 
            RowBox[{"\[GothicG]", "+", "\[Mho]"}], ")"}]}]}], "\[Mho]"], 
        ")"}], 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        FractionBox["1", "\[Rho]"]}]], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        FractionBox["\[Mho]", 
         RowBox[{"r", "-", "\[CurlyTheta]", "-", 
          RowBox[{"\[Rho]", " ", 
           RowBox[{"(", 
            RowBox[{"\[GothicG]", "+", "\[Mho]"}], ")"}]}]}]]}], ")"}]}], 
     "\[Mho]"]}], 
   RowBox[{
    RowBox[{"-", "r"}], "+", "\[GothicG]", "+", "\[Mho]", "+", 
    RowBox[{"\[Kappa]", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox[
        RowBox[{
         RowBox[{"-", "r"}], "+", "\[CurlyTheta]", "+", 
         RowBox[{"\[Rho]", " ", 
          RowBox[{"(", 
           RowBox[{"\[GothicG]", "+", "\[Mho]"}], ")"}]}]}], "\[Mho]"], ")"}], 
      FractionBox["1", "\[Rho]"]], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       FractionBox["\[Mho]", 
        RowBox[{"r", "-", "\[CurlyTheta]", "-", 
         RowBox[{"\[Rho]", " ", 
          RowBox[{"(", 
           RowBox[{"\[GothicG]", "+", "\[Mho]"}], ")"}]}]}]]}], 
      ")"}]}]}]]}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"-", 
    RowBox[{"Log", "[", 
     RowBox[{"\[GothicG]", "+", "\[Mho]", "-", "r", "+", " ", 
      RowBox[{"\[Kappa]", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{"r", " ", "-", " ", "\[CurlyTheta]", "-", 
             RowBox[{"\[Rho]", " ", 
              RowBox[{"(", 
               RowBox[{"\[GothicG]", "+", "\[Mho]"}], ")"}]}]}], ")"}]}], "/",
           "\[Mho]"}], ")"}], 
        RowBox[{"1", "/", "\[Rho]"}]]}]}], "]"}]}], ",", 
   RowBox[{"{", "\[GothicG]", "}"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"1", "+", 
    FractionBox[
     RowBox[{"\[Kappa]", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox[
         RowBox[{
          RowBox[{"-", "r"}], "+", "\[CurlyTheta]", "+", 
          RowBox[{"\[Rho]", " ", 
           RowBox[{"(", 
            RowBox[{"\[GothicG]", "+", "\[Mho]"}], ")"}]}]}], "\[Mho]"], 
        ")"}], 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        FractionBox["1", "\[Rho]"]}]]}], "\[Mho]"]}], 
   RowBox[{
    RowBox[{"-", "r"}], "+", "\[GothicG]", "+", "\[Mho]", "+", 
    RowBox[{"\[Kappa]", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox[
        RowBox[{
         RowBox[{"-", "r"}], "+", "\[CurlyTheta]", "+", 
         RowBox[{"\[Rho]", " ", 
          RowBox[{"(", 
           RowBox[{"\[GothicG]", "+", "\[Mho]"}], ")"}]}]}], "\[Mho]"], ")"}], 
      FractionBox["1", "\[Rho]"]]}]}]]}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"Log", "[", 
     RowBox[{"\[GothicG]", "+", "\[Mho]", "-", "r", "+", " ", 
      RowBox[{"\[Kappa]", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{"r", " ", "-", " ", "\[CurlyTheta]", "-", 
             RowBox[{"\[Rho]", " ", 
              RowBox[{"(", 
               RowBox[{"\[GothicG]", "+", "\[Mho]"}], ")"}]}]}], ")"}]}], "/",
           "\[Mho]"}], ")"}], 
        RowBox[{"1", "/", "\[Rho]"}]], 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"\[Mho]", "/", 
          RowBox[{"(", 
           RowBox[{"r", " ", "-", " ", "\[CurlyTheta]", "-", 
            RowBox[{"\[Rho]", " ", 
             RowBox[{"(", 
              RowBox[{"\[GothicG]", "+", "\[Mho]"}], ")"}]}]}], ")"}]}]}], 
        ")"}]}]}], "]"}], ",", 
    RowBox[{"{", "\[GothicG]", "}"}]}], "]"}], " ", "/.", " ", 
  RowBox[{"\[GothicG]", "\[Rule]", "0.2"}]}]], "Input"],

Cell[BoxData["3.1278064262945255`"], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Mean", "[", 
  RowBox[{"{", 
   RowBox[{
   "0.9058447760633708`", ",", "0.9058447760633705`", ",", 
    "0.9058447760633708`", ",", "0.9012450701674786`", ",", 
    "0.8921617342639542`", ",", "0.9002552712354855`", ",", 
    "0.9002552712354855`", ",", "0.8936682934923281`", ",", 
    "0.8936682934923281`"}], "}"}], "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData["0.8998653624530191`"], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["\[Rho]"], "Input"],

Cell[BoxData["2"], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"\[Aleph]", ",", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{"\[CapitalThorn]\[CapitalGamma]", "-", "1"}], ")"}]}], 
     RowBox[{"\[Rho]", "/", "\[Mho]"}]}]}], "}"}], "/.", " ", 
  RowBox[{"\[GothicG]", " ", "\[Rule]", " ", 
   RowBox[{"-", "0.0049"}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.04020302517608876`", ",", "0.04019696512913562`"}], 
  "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"\[CapitalGamma]", "/", "R"}], "-", "1"}], ",", 
    RowBox[{"\[Gamma]", "-", "r"}]}], "}"}], "/.", " ", 
  RowBox[{"\[GothicG]", " ", "\[Rule]", " ", 
   RowBox[{"-", "0.0049"}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.10705312275664047`"}], ",", 
   RowBox[{"-", "0.11989999999999999`"}]}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"\[CapitalGamma]", "/", "R"}], ")"}], "+", 
    RowBox[{"\[Kappa]U", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", "\[Aleph]"}], ")"}], 
      RowBox[{"1", "/", "\[Rho]"}]]}], "-", "1"}], "}"}], "/.", " ", 
  RowBox[{"\[GothicG]", " ", "\[Rule]", " ", 
   RowBox[{"-", "0.0049"}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", "0.002222245722986141`", "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[Zeta]", " ", 
     RowBox[{"\[CapitalGamma]", "/", "R"}]}], ",", 
    RowBox[{"\[Kappa]U", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", "\[Aleph]"}], ")"}], 
      RowBox[{"1", "/", "\[Rho]"}]]}]}], "}"}], "/.", " ", 
  RowBox[{"\[GothicG]", " ", "\[Rule]", " ", 
   RowBox[{"-", "0.0049"}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.1092753684796266`", ",", "0.10927536847962661`"}], 
  "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"??", "\[Aleph]"}]], "Input"],

Cell[CellGroupData[{

Cell["Global`\[Aleph]", "Print", "PrintUsage",
 CellTags->"Info-1835f62e-2271-40e7-8a5e-f5809f249cb9"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {GridBox[{
       {
        RowBox[{"\[Aleph]", "=", 
         FractionBox[
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SuperscriptBox[
            RowBox[{"(", 
             FractionBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"R", " ", "\[Beta]"}], ")"}], 
                FractionBox["1", "\[Rho]"]], " ", 
               RowBox[{"(", 
                RowBox[{"1", "-", "\[Mho]"}], ")"}]}], "\[GothicCapitalG]"], 
             ")"}], 
            RowBox[{"-", "\[Rho]"}]]}], "\[Mho]"]}]}
      },
      BaselinePosition->{Baseline, {1, 1}},
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{"Columns" -> {{
           Scaled[0.999]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  Definition[$CellContext`\[Aleph]],
  Editable->False]], "Print",
 CellTags->"Info-1835f62e-2271-40e7-8a5e-f5809f249cb9"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[Zeta]", " ", "\[CapitalGamma]"}], ",", " ", 
    RowBox[{"R", " ", "\[Kappa]U", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", "\[Aleph]"}], ")"}], 
      RowBox[{"1", "/", "\[Rho]"}]]}], ",", " ", 
    RowBox[{"R", " ", "\[Kappa]U", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"\[Aleph]", "+", "1"}], ")"}], 
      RowBox[{"1", "/", "\[Rho]"}]]}], ",", " ", 
    RowBox[{"R", " ", "\[Kappa]U", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[Rho]", 
         RowBox[{"-", "1"}]], 
        RowBox[{"(", 
         RowBox[{"\[Aleph]", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[Rho]", 
              RowBox[{"-", "1"}]], "-", "1"}], ")"}], 
           SuperscriptBox["\[Aleph]", "2"], 
           RowBox[{"(", 
            RowBox[{"\[Omega]", "/", "2"}], ")"}]}]}], ")"}]}], "+", "1"}], 
      ")"}]}], ",", " ", " ", 
    RowBox[{"R", " ", "\[Kappa]U", " ", 
     SuperscriptBox["\[Aleph]", 
      RowBox[{"1", "/", "\[Rho]"}]], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Aleph]", 
         RowBox[{"-", "1"}]], "+", "1"}], ")"}], 
      RowBox[{"1", "/", "\[Rho]"}]]}], ",", " ", 
    RowBox[{"R", " ", "\[Kappa]U", " ", 
     SuperscriptBox["\[Aleph]", 
      RowBox[{"1", "/", "\[Rho]"}]], 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{
        RowBox[{"(", 
         SuperscriptBox["\[Rho]", 
          RowBox[{"-", "1"}]], ")"}], 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[Aleph]", 
           RowBox[{"-", "1"}]], "-", 
          RowBox[{"\[Omega]", " ", 
           SuperscriptBox["\[Aleph]", 
            RowBox[{"-", "2"}]]}]}], ")"}]}]}], ")"}]}]}], "}"}], " ", "/.", 
  " ", 
  RowBox[{"\[GothicG]", " ", "\[Rule]", " ", ".2"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.1503847732990113`", ",", "1.1503847732990116`", ",", 
   "1.1503847732990116`", ",", 
   RowBox[{"-", "56.39934950706545`"}], ",", "1.1503847732990116`", ",", 
   "1.1503673713061509`"}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"??", "\[Omega]"}]], "Input"],

Cell[CellGroupData[{

Cell["Global`\[Omega]", "Print", "PrintUsage",
 CellTags->"Info-4985fbf2-74fb-4dd2-85dc-808759bc68f6"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {GridBox[{
       {
        RowBox[{"\[Omega]", "=", 
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Rho]"}], ")"}]}]}]}
      },
      BaselinePosition->{Baseline, {1, 1}},
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{"Columns" -> {{
           Scaled[0.999]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  Definition[$CellContext`\[Omega]],
  Editable->False]], "Print",
 CellTags->"Info-4985fbf2-74fb-4dd2-85dc-808759bc68f6"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[Aleph]", 
   RowBox[{"1", "/", "\[Rho]"}]], " ", "/.", " ", 
  RowBox[{"\[GothicG]", " ", "\[Rule]", " ", 
   RowBox[{"-", "0.0049"}]}]}]], "Input"],

Cell[BoxData["0.20050692051918995`"], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"\[Aleph]", ",", 
    RowBox[{
     RowBox[{"-", "\[Rho]"}], " ", 
     RowBox[{"\[WeierstrassP]\[Gamma]", "/", "\[Mho]"}]}]}], "}"}], " ", "/.", 
  " ", 
  RowBox[{"\[GothicG]", " ", "\[Rule]", " ", "0.12"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"53.407742228731614`", ",", "47.336490852219`"}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Aleph]", " ", "/.", " ", 
  RowBox[{"\[GothicG]", " ", "\[Rule]", " ", "0.02"}]}]], "Input"],

Cell[BoxData["10.176510694174379`"], "Output"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[CapitalGamma]", "/", "R"}], "-"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[ScriptB]E", ",", 
      RowBox[{"(", 
       RowBox[{"R", "/", 
        RowBox[{"(", 
         RowBox[{"\[CapitalGamma]", "+", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "R"}], " ", 
            RowBox[{"(", 
             RowBox[{"\[WeierstrassP]\[Gamma]", "/", "\[Mho]"}], ")"}], 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"\[Omega]", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "\[WeierstrassP]\[Gamma]"}], "/", "\[Mho]"}], 
                ")"}]}]}], ")"}]}], ")"}], "-", "R"}], ")"}]}], ")"}]}], 
     "}"}], " ", "/.", "  ", 
    RowBox[{"\[GothicG]", " ", "\[Rule]", " ", "\[GothicG]Index"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"\[GothicG]Index", ",", "0.02", ",", "0.09"}], "}"}]}], 
  "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {GrayLevel[0], Thickness[Medium], Opacity[1.], LineBox[CompressedData["
1:eJwVznk41HkAx/FxDpop2jQh97E6Hqsck8V+vpGj6GncR5tsS0WXfVTKlIq2
Lbpo5mFVEkrjCIPfyBa1srZplZra2lwdkqPIUf1mxrC7f7yf179vy027guPV
GQzG2v/632GGW+yrVAHuFzY6CQibPHkhM08/LMCFQHOHpR5s0lS3s9fqmACd
efadrVw2ydlaEhOXLcAqicJ/2oFNVnTM2fCuVACbyhPhGaZscuxSf9SHJwKo
e50J6VawiNV3ghC5gxA8n92yexSLRPFHfQ3eCLEmaCBtnROLbOkKdDmVkIsf
nwlvyBbNIgUZH8T2f+dBq6/NNtZPj3Qo/TwvuudjvtJbqzNVlxRHr364ofk8
zLznHVl8XYdcmjn10XPRRVTcsBBEq5jEI2u/UWJNAVoi5dykACYZSj5TyjUq
RJjZjIQj0iYBrRp60r8KUWt1m59mok2mTgQkpZ+5jKDJugphlha5M+ZcsMan
CHaf+9wT2FpE04sffOhLEcqMdijK8jRJrpZQ70VDMXTjeu4aWmoSbOdlrtpR
gqZlAzoCiQbh+vaynzpeAevW2yrvAA1SqXOf8/jjFVTwHfdk9asT7s7IwZ7i
qzjY0bdlxSl1YuB3o8lgcynkiUW2ckd1wmj5bX2oyTWY3Jvr1t+jRiDOnrrZ
ew1rEozdmZlq//3etc4pFGEsMHkw41s10q7569yU0DL0nTX9fHiCQUbHiVY6
pxxvXQy6G0UMYns0s/lCezmitqqfrtjCIM9VjgybwxUISpjVHbeIQbqGylY9
WlmJBEuj/d0dM5hM/YN3+nMlaou7yl2/n8GGtPrYnxqvI/WB1aEDr6fhnaj2
5XZqFZjbqmW7d02j4EDKYn1ONdKXtFuMMKfRooroDN5XjdyX82xOnFchmaeb
ZCqrhm+MnkjqpsIPnEE/s6U1COsMKtHungKdK7YUn6zB7M1elef5UzAaCuxt
769Bg4WwKt96Cq8/dRQc8BeDbu0ddGxTwkVm61VbLEZajqLrbLISbTYiewuV
GNJM+1ufrJVQc5xvYBFTC0GX7wq7DgVaWaHdpQ21mNxT4ul0VIFlxfzy343r
4C+bpFY6K9BV+ejmV/w6SKf1I1gDchhk0jXvn9QhbHi4pL9IjlFzXVGkaz3i
Wy7rT0TJEfHLUEZgdj3eDa/LF3HkmN6kuLx3qB7338Z+w3tOYy09cccpgALz
XF58uJCG3cam1n1XKAQyOQ+3RdIwSgx6PquUgkT6YOnGCBqsPX1DBdcoZHnW
lQaH0xjP1NNvLafgcm5i0i2URjMVHm0gpjA0Vvtel0cjcvboiKiJgo5Lc2CV
H43MW+YLOp9RUL6MKZ/DpXHwT/Hinf9QOJL1rkTblUaSzMdTrZNCfIiyUeVM
I3xw26aveygku1d7vF9Ow9qwoSK5j8LV6hah1IHGze28lawxCtY+3PyTdjSq
Ut6EXBqnYOi3MPpnWxpF6Xs3L5+kEDXu4ZpmQ+N43oWsyC8UWrNNvZOsaITd
HXhaoqLQxnt8PcyMhv9D/gB3hkLpmB5vnSkNjxezlVKGBCmTEezVC2lYfXS2
GNOQQJhj0uVhTMNQ2bb8qJYESDz+wdWIho72eh8OU4JdCz8bL1tAQ6k/ElGm
I4GDdGPcEg6NEZMjiZ56ErwS3r5nO5/Gvw1SUgI=
     "]], LineBox[CompressedData["
1:eJwVjnk41AkcxkeoSDG1kmyOIQkpG5WibzlS0eEoVFJ2t0NRUim/KQwNKVma
MSNGcjTuY5jfGOGbQqWlY0hrRKqtaJwJNam1f7zP+3z+eJ/Pa+B/wv3PaRQK
xW8q//cnis2BnjAWjNcJi+9b12Frh0SPEcGClzdGqL1mdVhbEdRNY7Jgn8c6
HS1aHSYdyd7/RyILvr7rHLs6pw7XPFX3/cBnQeiANdn14S4yb7736W9lgWKj
cw417S7S1rM8vlqwwcpwjfiU6l30IQY3Ud+y4bHAIzT4Ww12DeWuMutlw9ju
QjDprUH/Q/7GToNsKFFau2WgvQYD3NqUz8vZYMFd184X1mDYkjv1r+clwwHv
ex9agmswTcK0L3VMBp7Do/OvZNX42kx3/Y7bybDYMzCZ2X8HD3e6Wscf5cCt
rVIXvmYVKvk5ZMEJDjC9DY+kzqzCjB4b6shpDnzL0LyYIhdjx3vj/t0RHIhP
exZY3iPG7cOUHH0OB+5VRYBvsRitpgt/qajnQPgJZn/4FjFOW7FotEOPC8Zm
sgW1zEpMj+oXmLzggsq5DPulOiIM759/qVbKhe/b2ZJYDREe8Nrg5dnDhc8O
8dJBZREamF2Xh8um9m72Vq1DJGY/X+PYPi0F5r6pcvzSSGK+QXTbpeUp8Lb6
RWfSaRJFuHDiTWwK2Lle+WN2mxCfyp3teOtuwODcGlp2XgVm7dnyxBdTYfls
FhYFCfDmz/ghu6U8GDdcZc3IL0XbK+e1A8rSgabxeGLfnGLsC0ngr9bOgF+7
IntPuxSgS4OiatPfGSAWb6JxZ+fh98suJxkJt8DkXn3jC9ltrBu2St/qlAm3
5wtswpbloJI94R4+ngmVLuLzkfws5CizVTsqsyCBMLVotchEOL4zzjEwGx76
Gv3dMpqBqzd1z25bkQPHJDKmZsxNLJr5WOv5UA74mQw32wTycHWQd29X1m0w
tux84c9PRaqzuJZ6iA+HRo8Iqz6mIOX+nb2eOrlQb6ngHRXIRRAkfq/uzgXd
T4n/No4lT/2tN0zKyIOWM0KeHZ+NzUopc0M980H7wrKV72NYODiyQZmhVQAO
x7bYeB69jouj4zCteYplPPbDU0n4cnIFxSiiEIZyD65tSkrEzr58x2cbi8DW
5PGdwrK/cDSscee1sSJw0gk2SHyVgL4XhQeCq4rB2DxIQW3XNXQIUBi/G1YC
tyo6440Hr2I6PdRUQ6sUmlQvGKWLruD9SS+p+7lSyCRmjMuIOAzZqXJykaQU
LDcocTceuYwHtXqddc3LQLHL1XxfQCxOcAQGgqtlIHz+MKTwcAxq97l2N78v
gyaNtJb2aCa++fI0nb5ZAIIveZNRvEtoLVlsX54lANUdsSLa82h8YJRnoj8p
gMnUZQElmtGosGI+VX9/Oez707Kb5xmFDWqer/iV5dAmNfTbls9Ayyyi4N7C
CnCvMj8ukkdiZ9Gz6nlEBVh8Ye0q8YlEatxEmay1AmqHtzHcmiJwUE8lz3uV
ELo2qUjrV0WgV0xflGuiEDSCP6i/OxyOP/y/3TrbJ4TSyN9nxYRcxG0Tn+tW
upCw0meNt0HoBTT2q204l0PC4soFb5uT6agd4PZyFp8EtZxTpDyJjmpn3vWl
55KgtzHewzSBjiNxqhoNBSTwvxr1XY6hI5K791AFJJRIGhju5+joPWdwIK+W
BK7Q2VJlDx3javQWSNvJKf8sxVm6dLzwUGAa9A8Jsl5elttCOp6UONkpSEkI
VNOekTKfjrt7j/kv6SLh9bHPmqbqdDTUrCwMeUfCgLr/tl0UOlYf37lRbZiE
ytfFo0/eEFgS+tbj5ggJsVc782ndBGYyzh76bZQEn/5M/bNSAmO5aVe8x0lI
dTbZqtdK4K76j23ZkyToZuxPCGsgcPMT4uPqnyR0kDdsJXUE2nbMkTdRRMB3
buGb1xJIG7LSH1YUgTDeVdRDEqgpf/BbtLIIOh4t32tXTuDM6XudtGaIYMe1
ddUpJQTKNQa88meKoHCrbcdYAYEDOpEBdqoiYET8qPDMJfA/xboZBg==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.02, 0},
  BaseStyle->{FontSize -> 14},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{468., 289.23990673495075`},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0.02, 0.09}, {-0.13445325880776668`, 3.656532673008859}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[Aleph]", "=", 
  RowBox[{"(", 
   RowBox[{
    SuperscriptBox["\[CapitalThorn]\[CapitalGamma]", 
     RowBox[{"-", "\[Rho]"}]], "-", "1"}], ")"}]}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[ScriptB]E", ",", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"\[CapitalGamma]", "/", 
           RowBox[{"(", "R", ")"}]}], ")"}], "-", 
         RowBox[{"\[WeierstrassP]rtn", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"\[WeierstrassP]\[Gamma]", "/", "\[Mho]"}], ")"}], 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"(", 
                   RowBox[{"\[WeierstrassP]\[Gamma]", "/", "\[Mho]"}], ")"}]}], 
                 "\[Omega]"}], ")"}]}], ")"}]}]}], ")"}]}]}], ")"}], 
       RowBox[{"-", "1"}]]}], "}"}], " ", "/.", "  ", 
    RowBox[{"\[GothicG]", " ", "\[Rule]", " ", "\[GothicG]Index"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"\[GothicG]Index", ",", "0.02", ",", "0.09"}], "}"}]}], 
  "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {GrayLevel[0], Thickness[Medium], Opacity[1.], LineBox[CompressedData["
1:eJwVznk41HkAx/FxDpop2jQh97E6Hqsck8V+vpGj6GncR5tsS0WXfVTKlIq2
Lbpo5mFVEkrjCIPfyBa1srZplZra2lwdkqPIUf1mxrC7f7yf179vy027guPV
GQzG2v/632GGW+yrVAHuFzY6CQibPHkhM08/LMCFQHOHpR5s0lS3s9fqmACd
efadrVw2ydlaEhOXLcAqicJ/2oFNVnTM2fCuVACbyhPhGaZscuxSf9SHJwKo
e50J6VawiNV3ghC5gxA8n92yexSLRPFHfQ3eCLEmaCBtnROLbOkKdDmVkIsf
nwlvyBbNIgUZH8T2f+dBq6/NNtZPj3Qo/TwvuudjvtJbqzNVlxRHr364ofk8
zLznHVl8XYdcmjn10XPRRVTcsBBEq5jEI2u/UWJNAVoi5dykACYZSj5TyjUq
RJjZjIQj0iYBrRp60r8KUWt1m59mok2mTgQkpZ+5jKDJugphlha5M+ZcsMan
CHaf+9wT2FpE04sffOhLEcqMdijK8jRJrpZQ70VDMXTjeu4aWmoSbOdlrtpR
gqZlAzoCiQbh+vaynzpeAevW2yrvAA1SqXOf8/jjFVTwHfdk9asT7s7IwZ7i
qzjY0bdlxSl1YuB3o8lgcynkiUW2ckd1wmj5bX2oyTWY3Jvr1t+jRiDOnrrZ
ew1rEozdmZlq//3etc4pFGEsMHkw41s10q7569yU0DL0nTX9fHiCQUbHiVY6
pxxvXQy6G0UMYns0s/lCezmitqqfrtjCIM9VjgybwxUISpjVHbeIQbqGylY9
WlmJBEuj/d0dM5hM/YN3+nMlaou7yl2/n8GGtPrYnxqvI/WB1aEDr6fhnaj2
5XZqFZjbqmW7d02j4EDKYn1ONdKXtFuMMKfRooroDN5XjdyX82xOnFchmaeb
ZCqrhm+MnkjqpsIPnEE/s6U1COsMKtHungKdK7YUn6zB7M1elef5UzAaCuxt
769Bg4WwKt96Cq8/dRQc8BeDbu0ddGxTwkVm61VbLEZajqLrbLISbTYiewuV
GNJM+1ufrJVQc5xvYBFTC0GX7wq7DgVaWaHdpQ21mNxT4ul0VIFlxfzy343r
4C+bpFY6K9BV+ejmV/w6SKf1I1gDchhk0jXvn9QhbHi4pL9IjlFzXVGkaz3i
Wy7rT0TJEfHLUEZgdj3eDa/LF3HkmN6kuLx3qB7338Z+w3tOYy09cccpgALz
XF58uJCG3cam1n1XKAQyOQ+3RdIwSgx6PquUgkT6YOnGCBqsPX1DBdcoZHnW
lQaH0xjP1NNvLafgcm5i0i2URjMVHm0gpjA0Vvtel0cjcvboiKiJgo5Lc2CV
H43MW+YLOp9RUL6MKZ/DpXHwT/Hinf9QOJL1rkTblUaSzMdTrZNCfIiyUeVM
I3xw26aveygku1d7vF9Ow9qwoSK5j8LV6hah1IHGze28lawxCtY+3PyTdjSq
Ut6EXBqnYOi3MPpnWxpF6Xs3L5+kEDXu4ZpmQ+N43oWsyC8UWrNNvZOsaITd
HXhaoqLQxnt8PcyMhv9D/gB3hkLpmB5vnSkNjxezlVKGBCmTEezVC2lYfXS2
GNOQQJhj0uVhTMNQ2bb8qJYESDz+wdWIho72eh8OU4JdCz8bL1tAQ6k/ElGm
I4GDdGPcEg6NEZMjiZ56ErwS3r5nO5/Gvw1SUgI=
     "]], 
    LineBox[{{0.020000001428571428`, 5.119435372527698}, {
     0.020021470253562892`, 5.168981891992236}, {0.02004293907855436, 
     5.219550442194812}, {0.020085876728537295`, 5.323882425433946}, {
     0.02017175202850316, 5.54630652754301}, {0.020193220853494627`, 
     5.605001656832203}, {0.020214689678486095`, 5.665015519978667}, {
     0.020257627328469027`, 5.789180876400484}, {0.020343502628434894`, 
     6.055454204360474}, {0.02036497145342636, 6.126078821787413}, {
     0.02038644027841783, 6.198445812443304}, {0.02039497119557379, 
     6.228292748065288}}], LineBox[CompressedData["
1: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
nouBWA5E+xaqUo4Q+D+Xa/RA
     "]], 
    LineBox[{{0.022130768238215703`, 6.228292748065288}, {
     0.022130903666304724`, -4.176145679794092}}]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.02, 0},
  BaseStyle->{FontSize -> 14},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{468., 289.23990673495075`},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0.02, 0.09}, {-4.176145679794092, 6.228292748065288}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[ScriptB]E", " ", ",", 
      RowBox[{"1", "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"\[Gamma]", "-", "r"}], ")"}], "+", 
         RowBox[{"\[CurlyTheta]", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"\[Gamma]", "/", "\[Mho]"}], ")"}], 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"\[Gamma]", "/", "\[Mho]"}], ")"}], "\[Omega]"}]}], 
              ")"}]}]}], ")"}]}]}], ")"}]}]}], "}"}], "/.", " ", 
    RowBox[{"\[GothicG]", " ", "\[Rule]", " ", "\[GothicG]Index"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"\[GothicG]Index", ",", "0.02", ",", "0.09"}], "}"}]}], 
  "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {GrayLevel[0], Thickness[Medium], Opacity[1.], LineBox[CompressedData["
1:eJwVznk41HkAx/FxDpop2jQh97E6Hqsck8V+vpGj6GncR5tsS0WXfVTKlIq2
Lbpo5mFVEkrjCIPfyBa1srZplZra2lwdkqPIUf1mxrC7f7yf179vy027guPV
GQzG2v/632GGW+yrVAHuFzY6CQibPHkhM08/LMCFQHOHpR5s0lS3s9fqmACd
efadrVw2ydlaEhOXLcAqicJ/2oFNVnTM2fCuVACbyhPhGaZscuxSf9SHJwKo
e50J6VawiNV3ghC5gxA8n92yexSLRPFHfQ3eCLEmaCBtnROLbOkKdDmVkIsf
nwlvyBbNIgUZH8T2f+dBq6/NNtZPj3Qo/TwvuudjvtJbqzNVlxRHr364ofk8
zLznHVl8XYdcmjn10XPRRVTcsBBEq5jEI2u/UWJNAVoi5dykACYZSj5TyjUq
RJjZjIQj0iYBrRp60r8KUWt1m59mok2mTgQkpZ+5jKDJugphlha5M+ZcsMan
CHaf+9wT2FpE04sffOhLEcqMdijK8jRJrpZQ70VDMXTjeu4aWmoSbOdlrtpR
gqZlAzoCiQbh+vaynzpeAevW2yrvAA1SqXOf8/jjFVTwHfdk9asT7s7IwZ7i
qzjY0bdlxSl1YuB3o8lgcynkiUW2ckd1wmj5bX2oyTWY3Jvr1t+jRiDOnrrZ
ew1rEozdmZlq//3etc4pFGEsMHkw41s10q7569yU0DL0nTX9fHiCQUbHiVY6
pxxvXQy6G0UMYns0s/lCezmitqqfrtjCIM9VjgybwxUISpjVHbeIQbqGylY9
WlmJBEuj/d0dM5hM/YN3+nMlaou7yl2/n8GGtPrYnxqvI/WB1aEDr6fhnaj2
5XZqFZjbqmW7d02j4EDKYn1ONdKXtFuMMKfRooroDN5XjdyX82xOnFchmaeb
ZCqrhm+MnkjqpsIPnEE/s6U1COsMKtHungKdK7YUn6zB7M1elef5UzAaCuxt
769Bg4WwKt96Cq8/dRQc8BeDbu0ddGxTwkVm61VbLEZajqLrbLISbTYiewuV
GNJM+1ufrJVQc5xvYBFTC0GX7wq7DgVaWaHdpQ21mNxT4ul0VIFlxfzy343r
4C+bpFY6K9BV+ejmV/w6SKf1I1gDchhk0jXvn9QhbHi4pL9IjlFzXVGkaz3i
Wy7rT0TJEfHLUEZgdj3eDa/LF3HkmN6kuLx3qB7338Z+w3tOYy09cccpgALz
XF58uJCG3cam1n1XKAQyOQ+3RdIwSgx6PquUgkT6YOnGCBqsPX1DBdcoZHnW
lQaH0xjP1NNvLafgcm5i0i2URjMVHm0gpjA0Vvtel0cjcvboiKiJgo5Lc2CV
H43MW+YLOp9RUL6MKZ/DpXHwT/Hinf9QOJL1rkTblUaSzMdTrZNCfIiyUeVM
I3xw26aveygku1d7vF9Ow9qwoSK5j8LV6hah1IHGze28lawxCtY+3PyTdjSq
Ut6EXBqnYOi3MPpnWxpF6Xs3L5+kEDXu4ZpmQ+N43oWsyC8UWrNNvZOsaITd
HXhaoqLQxnt8PcyMhv9D/gB3hkLpmB5vnSkNjxezlVKGBCmTEezVC2lYfXS2
GNOQQJhj0uVhTMNQ2bb8qJYESDz+wdWIho72eh8OU4JdCz8bL1tAQ6k/ElGm
I4GDdGPcEg6NEZMjiZ56ErwS3r5nO5/Gvw1SUgI=
     "]], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.02, 0},
  BaseStyle->{FontSize -> 14},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{468., 289.23990673495075`},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0.02, 0.09}, {-1.1428569655976886`, 3.656532673008859}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"$PerformanceGoal", "=", "\"\<Quality\>\""}], ",", 
       "\[GothicG]"}], "}"}], ",", 
     RowBox[{
      RowBox[{"\[GothicG]", "=", "\[GothicG]Slider"}], ";", "\[ScriptB]E"}]}],
     "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[GothicG]Slider", ",", "0.08", ",", "\"\<\[GothicG]\>\""}], 
      "}"}], ",", "0.07", ",", "0.09", ",", "0.005"}], "}"}]}], 
  "]"}]], "Input"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[GothicG]Slider$$ = 0.07, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`\[GothicG]Slider$$], 0.08, "\[GothicG]"}, 0.07, 0.09,
       0.005}}, Typeset`size$$ = {82., {1., 13.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`\[GothicG]Slider$13990$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`\[GothicG]Slider$$ = 0.08},
       "ControllerVariables" :> {
        Hold[$CellContext`\[GothicG]Slider$$, \
$CellContext`\[GothicG]Slider$13990$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Block[{$PerformanceGoal = 
         "Quality", $CellContext`\[GothicG]}, $CellContext`\[GothicG] = \
$CellContext`\[GothicG]Slider$$; $CellContext`\[ScriptB]E], 
      "Specifications" :> {{{$CellContext`\[GothicG]Slider$$, 0.08, 
          "\[GothicG]"}, 0.07, 0.09, 0.005}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{370., {65., 74.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["\[ScriptB]E"], "Input"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{"1", "+", "\[GothicG]"}]], "1.1144`", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "0.8973438621679827`"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", "\[GothicG]"}], ")"}]}], "+", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"0.`", "\[VeryThinSpace]", "+", 
        RowBox[{"1.`", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           FractionBox[
            RowBox[{"0.1011415963375421`", " ", 
             SqrtBox[
              RowBox[{"1", "+", 
               RowBox[{"200.`", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  RowBox[{"0.9740013780315789`", " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "+", "\[GothicG]"}], ")"}], "2"]}]}], 
                 ")"}]}]}]]}], 
            RowBox[{"1", "+", "\[GothicG]"}]]}], ")"}]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", "\[Tau]"}], ")"}]}], 
     RowBox[{"1", "+", 
      FractionBox[
       RowBox[{"0.1011415963375421`", " ", 
        SqrtBox[
         RowBox[{"1", "+", 
          RowBox[{"200.`", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"0.9740013780315789`", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"1", "+", "\[GothicG]"}], ")"}], "2"]}]}], 
            ")"}]}]}]]}], 
       RowBox[{"1", "+", "\[GothicG]"}]], "-", 
      FractionBox[
       RowBox[{"1.1144`", " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", "\[Tau]"}], ")"}]}], 
       RowBox[{"1", "+", "\[GothicG]"}]]}]], "-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"0.`", "\[VeryThinSpace]", "+", 
         RowBox[{"1.`", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            FractionBox[
             RowBox[{"0.1011415963375421`", " ", 
              SqrtBox[
               RowBox[{"1", "+", 
                RowBox[{"200.`", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", 
                   RowBox[{"0.9740013780315789`", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "+", "\[GothicG]"}], ")"}], "2"]}]}], 
                  ")"}]}]}]]}], 
             RowBox[{"1", "+", "\[GothicG]"}]]}], ")"}]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"0.8973438621679827`", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", "\[GothicG]"}], ")"}]}], "-", "\[Tau]"}], 
        ")"}]}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       FractionBox[
        RowBox[{"0.1011415963375421`", " ", 
         SqrtBox[
          RowBox[{"1", "+", 
           RowBox[{"200.`", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"0.9740013780315789`", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "+", "\[GothicG]"}], ")"}], "2"]}]}], 
             ")"}]}]}]]}], 
        RowBox[{"1", "+", "\[GothicG]"}]], "-", 
       FractionBox[
        RowBox[{"1.1144`", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", "\[Tau]"}], ")"}]}], 
        RowBox[{"1", "+", "\[GothicG]"}]]}], ")"}]}]}], ")"}]}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["rBase"], "Input"],

Cell[BoxData["0.03`"], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["\[GothicG]Base"], "Input"],

Cell[BoxData["0.`"], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"??", "\[ScriptM]E"}]], "Input"],

Cell[CellGroupData[{

Cell["Global`\[ScriptM]E", "Print", "PrintUsage",
 CellTags->"Info-a31b878e-7d31-4f84-aa41-8fb6edd14536"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {GridBox[{
       {
        RowBox[{"\[ScriptM]E", "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             FractionBox[
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", "+", "r"}], ")"}], " ", "Severance", " ", 
               RowBox[{"(", 
                RowBox[{"1", "-", 
                 FractionBox[
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1", "-", "PDies"}], ")"}], " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"1", "+", "r"}], 
                    RowBox[{"1", "+", "\[CurlyTheta]"}]], ")"}], 
                    FractionBox["1", "\[Rho]"]]}], 
                  RowBox[{"1", "+", "r"}]]}], ")"}], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  FractionBox[
                   RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"1", "+", "r"}], 
                    RowBox[{"1", "+", "\[CurlyTheta]"}]], ")"}], 
                    FractionBox["1", "\[Rho]"]], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Mho]"}], ")"}]}], 
                    RowBox[{"1", "+", "\[GothicG]"}]], ")"}], 
                    RowBox[{"-", "\[Rho]"}]]}], "\[Mho]"]}], ")"}], 
                FractionBox["1", "\[Rho]"]], " ", 
               RowBox[{"(", 
                RowBox[{"1", "-", "\[Mho]"}], ")"}]}], 
              RowBox[{"1", "+", "\[GothicG]"}]]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               FractionBox[
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"1", "+", "r"}], ")"}], " ", 
                 RowBox[{"(", 
                  RowBox[{"1", "-", 
                   FractionBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "PDies"}], ")"}], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"1", "+", "r"}], 
                    RowBox[{"1", "+", "\[CurlyTheta]"}]], ")"}], 
                    FractionBox["1", "\[Rho]"]]}], 
                    RowBox[{"1", "+", "r"}]]}], ")"}], " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{"1", "+", 
                    FractionBox[
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"1", "+", "r"}], 
                    RowBox[{"1", "+", "\[CurlyTheta]"}]], ")"}], 
                    FractionBox["1", "\[Rho]"]], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Mho]"}], ")"}]}], 
                    RowBox[{"1", "+", "\[GothicG]"}]], ")"}], 
                    RowBox[{"-", "\[Rho]"}]]}], "\[Mho]"]}], ")"}], 
                  FractionBox["1", "\[Rho]"]], " ", 
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[Mho]"}], ")"}]}], 
                RowBox[{"1", "+", "\[GothicG]"}]]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"Severance", " ", "\[Mho]"}]}], ")"}]}]}], ")"}], "/", 
          
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox[
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "+", "r"}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{"1", "-", "\[Tau]"}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{"1", "-", "\[Mho]"}], ")"}]}], 
             RowBox[{"1", "+", "\[GothicG]"}]], "+", 
            FractionBox[
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "+", "r"}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                FractionBox[
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"1", "-", "PDies"}], ")"}], " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    FractionBox[
                    RowBox[{"1", "+", "r"}], 
                    RowBox[{"1", "+", "\[CurlyTheta]"}]], ")"}], 
                   FractionBox["1", "\[Rho]"]]}], 
                 RowBox[{"1", "+", "r"}]]}], ")"}], " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"1", "+", 
                 FractionBox[
                  RowBox[{
                   RowBox[{"-", "1"}], "+", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"1", "+", "r"}], 
                    RowBox[{"1", "+", "\[CurlyTheta]"}]], ")"}], 
                    FractionBox["1", "\[Rho]"]], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Mho]"}], ")"}]}], 
                    RowBox[{"1", "+", "\[GothicG]"}]], ")"}], 
                    RowBox[{"-", "\[Rho]"}]]}], "\[Mho]"]}], ")"}], 
               FractionBox["1", "\[Rho]"]], " ", 
              RowBox[{"(", 
               RowBox[{"1", "-", "\[Mho]"}], ")"}]}], 
             RowBox[{"1", "+", "\[GothicG]"}]]}], ")"}]}]}]}
      },
      BaselinePosition->{Baseline, {1, 1}},
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{"Columns" -> {{
           Scaled[0.999]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  Definition[$CellContext`\[ScriptM]E],
  Editable->False]], "Print",
 CellTags->"Info-a31b878e-7d31-4f84-aa41-8fb6edd14536"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{"\[ScriptM]ENoSoi", ",", "r"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"1", "/", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "-", "r", "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "+", "r"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "PDies"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox[
             RowBox[{"1", "+", "r"}], 
             RowBox[{"1", "+", "\[CurlyTheta]"}]], ")"}], 
           FractionBox["1", "\[Rho]"]]}], 
         RowBox[{"1", "+", "r"}]]}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", 
         FractionBox[
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SuperscriptBox[
            RowBox[{"(", 
             FractionBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"1", "+", "r"}], 
                  RowBox[{"1", "+", "\[CurlyTheta]"}]], ")"}], 
                FractionBox["1", "\[Rho]"]], " ", 
               RowBox[{"(", 
                RowBox[{"1", "-", "\[Mho]"}], ")"}]}], 
              RowBox[{"1", "+", "\[GothicG]"}]], ")"}], 
            RowBox[{"-", "\[Rho]"}]]}], "\[Mho]"]}], ")"}], 
       FractionBox["1", "\[Rho]"]]}], "+", 
     FractionBox[
      RowBox[{"1", "+", "\[GothicG]"}], 
      RowBox[{"1", "-", "\[Mho]"}]]}], ")"}]}], "-", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "+", "r"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", 
          FractionBox[
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", "PDies"}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              FractionBox[
               RowBox[{"1", "+", "r"}], 
               RowBox[{"1", "+", "\[CurlyTheta]"}]], ")"}], 
             FractionBox["1", "\[Rho]"]]}], 
           RowBox[{"1", "+", "r"}]]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", 
           FractionBox[
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SuperscriptBox[
              RowBox[{"(", 
               FractionBox[
                RowBox[{
                 SuperscriptBox[
                  RowBox[{"(", 
                   FractionBox[
                    RowBox[{"1", "+", "r"}], 
                    RowBox[{"1", "+", "\[CurlyTheta]"}]], ")"}], 
                  FractionBox["1", "\[Rho]"]], " ", 
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[Mho]"}], ")"}]}], 
                RowBox[{"1", "+", "\[GothicG]"}]], ")"}], 
              RowBox[{"-", "\[Rho]"}]]}], "\[Mho]"]}], ")"}], 
         FractionBox["1", "\[Rho]"]]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", "r"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          FractionBox[
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", "PDies"}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              FractionBox[
               RowBox[{"1", "+", "r"}], 
               RowBox[{"1", "+", "\[CurlyTheta]"}]], ")"}], 
             FractionBox["1", "\[Rho]"]]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "+", "r"}], ")"}], "2"]], "-", 
          FractionBox[
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", "PDies"}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              FractionBox[
               RowBox[{"1", "+", "r"}], 
               RowBox[{"1", "+", "\[CurlyTheta]"}]], ")"}], 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              FractionBox["1", "\[Rho]"]}]]}], 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "+", "r"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", "\[CurlyTheta]"}], ")"}], " ", "\[Rho]"}]]}], 
         ")"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", 
           FractionBox[
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SuperscriptBox[
              RowBox[{"(", 
               FractionBox[
                RowBox[{
                 SuperscriptBox[
                  RowBox[{"(", 
                   FractionBox[
                    RowBox[{"1", "+", "r"}], 
                    RowBox[{"1", "+", "\[CurlyTheta]"}]], ")"}], 
                  FractionBox["1", "\[Rho]"]], " ", 
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[Mho]"}], ")"}]}], 
                RowBox[{"1", "+", "\[GothicG]"}]], ")"}], 
              RowBox[{"-", "\[Rho]"}]]}], "\[Mho]"]}], ")"}], 
         FractionBox["1", "\[Rho]"]]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", "r"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox[
             RowBox[{"1", "+", "r"}], 
             RowBox[{"1", "+", "\[CurlyTheta]"}]], ")"}], 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            FractionBox["1", "\[Rho]"]}]], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox[
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "PDies"}], ")"}], " ", 
              SuperscriptBox[
               RowBox[{"(", 
                FractionBox[
                 RowBox[{"1", "+", "r"}], 
                 RowBox[{"1", "+", "\[CurlyTheta]"}]], ")"}], 
               FractionBox["1", "\[Rho]"]]}], 
             RowBox[{"1", "+", "r"}]]}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             FractionBox[
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"1", "+", "r"}], 
                    RowBox[{"1", "+", "\[CurlyTheta]"}]], ")"}], 
                    FractionBox["1", "\[Rho]"]], " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "-", "\[Mho]"}], ")"}]}], 
                  RowBox[{"1", "+", "\[GothicG]"}]], ")"}], 
                RowBox[{"-", "\[Rho]"}]]}], "\[Mho]"]}], ")"}], 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            FractionBox["1", "\[Rho]"]}]], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Mho]"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox[
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                FractionBox[
                 RowBox[{"1", "+", "r"}], 
                 RowBox[{"1", "+", "\[CurlyTheta]"}]], ")"}], 
               FractionBox["1", "\[Rho]"]], " ", 
              RowBox[{"(", 
               RowBox[{"1", "-", "\[Mho]"}], ")"}]}], 
             RowBox[{"1", "+", "\[GothicG]"}]], ")"}], 
           RowBox[{
            RowBox[{"-", "1"}], "-", "\[Rho]"}]]}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", "\[GothicG]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", "\[CurlyTheta]"}], ")"}], " ", "\[Rho]", " ", 
          "\[Mho]"}], ")"}]}]}], ")"}]}], ")"}], "/", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "-", "r", "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", "r"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         FractionBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "PDies"}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             FractionBox[
              RowBox[{"1", "+", "r"}], 
              RowBox[{"1", "+", "\[CurlyTheta]"}]], ")"}], 
            FractionBox["1", "\[Rho]"]]}], 
          RowBox[{"1", "+", "r"}]]}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          FractionBox[
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              FractionBox[
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"1", "+", "r"}], 
                   RowBox[{"1", "+", "\[CurlyTheta]"}]], ")"}], 
                 FractionBox["1", "\[Rho]"]], " ", 
                RowBox[{"(", 
                 RowBox[{"1", "-", "\[Mho]"}], ")"}]}], 
               RowBox[{"1", "+", "\[GothicG]"}]], ")"}], 
             RowBox[{"-", "\[Rho]"}]]}], "\[Mho]"]}], ")"}], 
        FractionBox["1", "\[Rho]"]]}], "+", 
      FractionBox[
       RowBox[{"1", "+", "\[GothicG]"}], 
       RowBox[{"1", "-", "\[Mho]"}]]}], ")"}], "2"]}]}]], "Output"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"FindStableArm", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[ScriptM]Max", ",", "\[ScriptM]MaxMax"}], "}"}], "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"2", ",", "4"}], "}"}], " ", "\[ScriptM]E"}]}], ";", 
  RowBox[{"\[ScriptC]Max", "=", 
   RowBox[{"cE", "[", "\[ScriptM]MaxMax", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Severance", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"$PerformanceGoal", "=", "\"\<Quality\>\""}], ",", " ", "r"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"r", "=", "rSlider"}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", "R", ")"}], " ", "\[Beta]"}], ")"}], "^", 
            RowBox[{"(", 
             RowBox[{"1", "/", "\[Rho]"}], ")"}]}], "/", "\[CapitalGamma]"}], 
          " ", "\[GreaterEqual]", "  ", "1"}], "||", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", "R", ")"}], " ", "\[Beta]"}], ")"}], "^", 
            RowBox[{"(", 
             RowBox[{"1", "/", "\[Rho]"}], ")"}]}], "/", 
           RowBox[{"(", "R", ")"}]}], " ", "\[GreaterEqual]", "  ", "1"}]}], 
        ",", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{
           RowBox[{
           "Text", "[", "\"\<Impatience Condition Not Satisfied.\>\"", "]"}], 
           ",", "24"}], "]"}], ";", 
         RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[ScriptM]TargetDiagram", "[", 
       RowBox[{
       "\[ScriptM]Max", ",", "\[ScriptM]MaxMax", ",", "\[ScriptC]Max"}], 
       "]"}]}]}], "\[IndentingNewLine]", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"rSlider", ",", "rBase", ",", "\"\<r\>\""}], "}"}], ",", 
     RowBox[{"rBase", "-", "0.025"}], ",", 
     RowBox[{"rBase", "+", ".06"}], ",", "0.005"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";", 
  RowBox[{"<<", "ManipulatePrepare.m"}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NotebookDirectory", "::", "nosv"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The notebook \
\[NoBreak]\\!\\(\\*TemplateBox[List[FrontEndObject[LinkObject[\\\"aepsi_shm\\\
\", 3, 1]], 175, \\\"FrontEndObject[LinkObject[\\\\\\\"aepsi_shm\\\\\\\", 3, \
1]]\\\", \\\"175\\\", \\\"\\\\\\\"Untitled-9\\\\\\\"\\\"], \
\\\"NotebookObjectUnsaved\\\"]\\)\[NoBreak] is not saved. \\!\\(\\*ButtonBox[\
\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/NotebookDirectory\\\", ButtonNote -> \
\\\"NotebookDirectory::nosv\\\"]\\)\"\>"}]], "Message", "MSG"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"SetDirectory", "::", "fstr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"File specification \[NoBreak]\\!\\($Failed\\)\[NoBreak] is \
not a string of one or more characters. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/fstr\\\", ButtonNote -> \
\\\"SetDirectory::fstr\\\"]\\)\"\>"}]], "Message", "MSG"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NotebookDirectory", "::", "nosv"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The notebook \
\[NoBreak]\\!\\(\\*TemplateBox[List[FrontEndObject[LinkObject[\\\"aepsi_shm\\\
\", 3, 1]], 175, \\\"FrontEndObject[LinkObject[\\\\\\\"aepsi_shm\\\\\\\", 3, \
1]]\\\", \\\"175\\\", \\\"\\\\\\\"Untitled-9\\\\\\\"\\\"], \
\\\"NotebookObjectUnsaved\\\"]\\)\[NoBreak] is not saved. \\!\\(\\*ButtonBox[\
\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/NotebookDirectory\\\", ButtonNote -> \
\\\"NotebookDirectory::nosv\\\"]\\)\"\>"}]], "Message", "MSG"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"SetDirectory", "::", "fstr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"File specification \[NoBreak]\\!\\($Failed\\)\[NoBreak] is \
not a string of one or more characters. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/fstr\\\", ButtonNote -> \
\\\"SetDirectory::fstr\\\"]\\)\"\>"}]], "Message", "MSG"]
}, Open  ]]
},
WindowSize->{1393, 999},
WindowMargins->{{42, Automatic}, {Automatic, 0}},
FrontEndVersion->"10.2 for Mac OS X x86 (32-bit, 64-bit Kernel) (July 6, \
2015)",
StyleDefinitions->"Default.nb"
]

