(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



(* Initialization stuff; of no intrinsic interest *)
ClearAll["Global`*"];ParamsAreSet=False;
If[Length[$FrontEnd] > 0,NBDir=SetDirectory[NotebookDirectory[]]];(* If running from the Notebook interface *)
(* If running from shell, must start from inside same directory in which notebook resides *)
If[$VersionNumber<8,(*then*) Print["These programs require Mathematica version 8 or greater."];Abort[]];
(* Method of displaying figures depends on whether being run in batch mode or interactively *)
If[$FrontEnd == Null,OpenFigsUsingShell=True,OpenFigsUsingShell=False]; 
(* Current working directory should correspond to appropriate location now whether running from shell or notebook *)
AutoLoadDir=SetDirectory["../../CoreCode/Autoload"];Get["./init.m"];
(* CoreCode directory is above Autoload *)
CoreCodeDir=SetDirectory[".."];
(* root directory is above CoreCode *)
rootDir = SetDirectory[".."];
Get[CoreCodeDir<>"/MakeAnalyticalResults.m"];
Get[CoreCodeDir<>"/VarsAndFuncs.m"];
StableArmStyle={Black,Thick}; (* Allows for different style than in TractableBufferStock handout generated by the same code *)
TractableFigDir=SetDirectory[rootDir<>"/Examples/TractableBufferStock/Figures/"];
TractableCodeDir=SetDirectory[rootDir<>"/Examples/TractableBufferStock"];
cssUSSavingDirCode=SetDirectory[rootDir<>"/Examples/cssUSSaving"];cssUSSavingDirFigs=SetDirectory[rootDir<>"/Examples/cssUSSaving/Figures"];

VerboseOutput=False;


(* Generate phase diagram *)

Get[CoreCodeDir<>"/ParametersBase.m"];
FindStableArm;
Get[TractableCodeDir<>"/cFunc.m"];
Get[TractableCodeDir<>"/PhaseDiag.m"];
ExportFigsToDir["TractableBufferStockPhaseDiag",cssUSSavingDirFigs];


(* Show effects of increase in unemployment risk *)

Get[CoreCodeDir<>"/ParametersBase.m"];(* Restore the baseline parameter values *)
\[Mho]Base=\[Mho]=0.01;
\[CapitalGamma]Base=\[CapitalGamma];
FindStableArm;
{\[Kappa]EBase,\[ScriptM]EBase,\[ScriptC]EBase} = {\[Kappa]E,\[ScriptM]E,\[ScriptC]E};
{\[ScriptM]Max,\[ScriptM]MaxMax}={1.5,5} \[ScriptM]E;
\[ScriptC]LowerPlot=Plot[cE[\[ScriptM]],{\[ScriptM],0,\[ScriptM]Max},PlotStyle->Dashing[{.01}]];
cEPFPlot = Plot[cEPF[\[ScriptM]],{\[ScriptM],0,\[ScriptM]MaxMax},PlotStyle->Dashing[{.02}]];
Degree45 = Plot[\[ScriptM],{\[ScriptM],0,cE[\[ScriptM]MaxMax]},PlotStyle->Dashing[{.01}]];
cFuncPlotBase=cFuncPlot=Plot[cE[\[ScriptM]],{\[ScriptM],0,\[ScriptM]MaxMax},PlotStyle->Black];
Stable\[ScriptM]LocusOrigPlot=Plot[{\[ScriptM]EDelEqZero[\[ScriptM]]},{\[ScriptM],0,\[ScriptM]MaxMax},PlotStyle->Dashing[{.01}]];
(* Now increase unemployment risk by 2 percentage points *)
\[Mho]=\[Mho]Base+0.02;
FindStableArm;
cFuncPlotNew=Plot[cE[\[ScriptM]],{\[ScriptM],0,\[ScriptM]MaxMax},PlotStyle->RGBColor[0,0,0]];
cFuncPlotNewPoints=Map[{{#,\[ScriptC][#]}}&,Table[\[ScriptM],{\[ScriptM],0,\[ScriptM]MaxMax,0.01}]];
Stable\[ScriptM]LocusPlot=Plot[{\[ScriptM]EDelEqZero[\[ScriptM]]},{\[ScriptM],0,\[ScriptM]MaxMax},PlotStyle->Dashing[{.01}]];
Stable\[ScriptM]LocusPoints=Map[{{#,\[ScriptM]EDelEqZero[#]}}&,Table[\[ScriptM],{\[ScriptM],0,\[ScriptM]MaxMax,0.1}]];

SimGeneratePath[\[ScriptM]EBase,100];
\[ScriptM]\[ScriptC]PathPlot = ListPlot[\[ScriptM]\[ScriptC]Path,PlotStyle->{PointSize[0.015]}];
{\[ScriptM]MinNew,\[ScriptM]MaxNew}={0,5};
{\[ScriptC]MinNew,\[ScriptC]MaxNew}={0,1.5};
TractableBufferStockTarget = Show[cFuncPlotBase,Stable\[ScriptM]LocusPlot,Stable\[ScriptM]LocusOrigPlot
,Graphics[Text["Target \[LongRightArrow]",{\[ScriptM]EBase,1.02\[ScriptC]EBase},{1,0}]]
,Graphics[Text[" \[LongLeftArrow] Sustainable \[ScriptC]",{\[ScriptM]E,0.98\[ScriptC]E},{-1,0}]]
,Graphics[Text["c(\[ScriptM]) \[LongRightArrow]",{0.7\[ScriptM]EBase,0.85\[ScriptC]EBase},{1,0}]]
,Ticks->None
       ,PlotRange->{{\[ScriptM]MinNew,\[ScriptM]MaxNew},{\[ScriptC]MinNew,\[ScriptC]MaxNew}}
       ,AxesLabel->{"\[ScriptM]","\[ScriptC]"}];
OldAndNewcFuncsPlot = Show[Stable\[ScriptM]LocusPlot,cFuncPlotBase,cFuncPlotNew
,PlotRange->{{0,\[ScriptM]MaxMax},{0,Automatic}}
,AxesOrigin->{0.,0.}
];

PhaseDiagramIncreaseMhoPlot = Show[OldAndNewcFuncsPlot,\[ScriptM]\[ScriptC]PathPlot,Stable\[ScriptM]LocusOrigPlot
,Graphics[Text["Orig Target \[LongRightArrow]",{\[ScriptM]EBase,1.02\[ScriptC]EBase},{1,0}]]
,Graphics[Text["New Target\[LowerRightArrow]",{\[ScriptM]E,1.04\[ScriptC]E},{1,0}]]
,Graphics[Text["Orig c(\[ScriptM]) \[LongRightArrow]",{1.25\[ScriptM]EBase,1.2\[ScriptC]EBase},{1,0}]]
,Graphics[Text[" \[LongLeftArrow] New c(\[ScriptM])",{\[ScriptM]EBase,cE[\[ScriptM]EBase]},{-1,0}]]
,Ticks->None
,AxesLabel->{"\[ScriptM]","\[ScriptC]"}
,PlotRange->{{\[ScriptM]MinNew-1,\[ScriptM]E+2},{\[ScriptC]MinNew,1.3\[ScriptC]EBase}}
,AxesOrigin->{0.,0.}
];

HowMany=75;
\[ScriptM]Path=Take[Transpose[\[ScriptM]\[ScriptC]Path][[1]],HowMany];
\[ScriptC]Path=Take[Transpose[\[ScriptM]\[ScriptC]Path][[2]],HowMany];
(*savRateBase = (\[ScriptM]EBase-1)/(R/);*)
MPCPath=Map[cE'[#]&,Rest[\[ScriptM]Path]];
PrependTo[\[ScriptM]Path,\[ScriptM]EBase];
PrependTo[\[ScriptC]Path,\[ScriptC]EBase];
PrependTo[\[ScriptM]Path,\[ScriptM]EBase];
PrependTo[\[ScriptC]Path,\[ScriptC]EBase];
PrependTo[\[ScriptM]Path,\[ScriptM]EBase];
PrependTo[\[ScriptC]Path,\[ScriptC]EBase];
PrependTo[MPCPath,\[Kappa]EBase];
PrependTo[MPCPath,\[Kappa]EBase];
PrependTo[MPCPath,\[Kappa]EBase];
PrependTo[MPCPath,\[Kappa]EBase];
timePath=Table[i,{i,Length[\[ScriptC]Path]}];
\[ScriptC]PathPlot = ListPlot[Transpose[{timePath,\[ScriptC]Path}],PlotRange->All];
\[ScriptM]PathPlot = ListPlot[Transpose[{timePath,\[ScriptM]Path}],PlotRange->All];
MPCPathPlot = ListPlot[Transpose[{timePath,MPCPath}],PlotRange->All];

cPathAfterMhoRise=Show[\[ScriptC]PathPlot
,Ticks->{{{4,"0"}},None}
,AxesLabel->{"Time","\!\(\*SubsuperscriptBox[\(\[ScriptC]\), \(\[ScriptT]\), \(e\)]\)"}
,AxesOrigin->{-3,0}
,PlotRange->{{-3,Automatic},{0,Automatic}}
];
(*
ExportFigsToDir["cPathAfterMhoRise",cssUSSavingDirFigs];
Show[cPathAfterMhoRise]
*)

mPathAfterMhoRise=Show[\[ScriptM]PathPlot
,Ticks->{{{4,"0"}},None}
,AxesLabel->{"Time","\!\(\*SubsuperscriptBox[\(\[ScriptM]\), \(\[ScriptT]\), \(e\)]\)"}
,PlotRange->{{-3,HowMany},{0,Automatic}}
,AxesOrigin->{-3,0}
,PlotRange->{{-3,Automatic},{0,Automatic}}
];
(*
ExportFigsToDir["mPathAfterMhoRise",cssUSSavingDirFigs];
Show[mPathAfterMhoRise]
*)

MPCPathAfterMhoRise=Show[MPCPathPlot
,Graphics[{Dashing[{0.01}],Line[{{timePath[[1]],\[Kappa]},{timePath[[-1]],\[Kappa]}}]}]
,Graphics[Text["\[UpArrow]",{(timePath[[1]]+timePath[[-1]])/2,\[Kappa]},{0,1}]]
,Graphics[Text["Perfect Foresight MPC",{(timePath[[1]]+timePath[[-1]])/2,\[Kappa](4/5)},{0,1}]]
,Ticks->{{{4,"0"}},None}
,AxesLabel->{"Time","\!\(\*SubscriptBox[\(\[Kappa]\), \(\[ScriptT]\)]\)"}
,PlotRange->All
,AxesOrigin->{-3,0.}];

(*
ExportFigsToDir["MPCPathAfterMhoRise",cssUSSavingDirFigs];
Show[MPCPathAfterMhoRise]
*)

(*
ExportFigsToDir["PhaseDiagramIncreaseMhoPlot",cssUSSavingDirFigs];
Show[PhaseDiagramIncreaseMhoPlot]
*)

savRatePath=((\[ScriptM]Path-1)(R-1)+1-\[ScriptC]Path)/((\[ScriptM]Path-1)(R-1)+1);
savRateAfterMhoRiseRaw=ListPlot[savRatePath,PlotRange->All];
savRateAfterMhoRisePlot=Show[savRateAfterMhoRiseRaw
,Graphics[{Dashing[0.01],Line[{{1,savRatePath[[-1]]},{Length[savRatePath],savRatePath[[-1]]}}]}]
,Graphics[{Arrowheads[{-.025,.025}],Arrow[{{5,savRatePath[[-1]]},{5,savRatePath[[5]]}}]}]
,Graphics[Text[" \[LongLeftArrow]  Overshooting",{5,(savRatePath[[-1]]+savRatePath[[5]])/2},{-1,0}]]
,Ticks->{{{5,"t"}},{{savRatePath[[1]],"\!\(\*SubscriptBox[OverscriptBox[\(\[ScriptS]\), \(\[Hacek]\)], \(t\)]\)"},{savRatePath[[-1]],"\!\(\*SubsuperscriptBox[OverscriptBox[\(\[ScriptS]\), \(\[Hacek]\)], \(t\), \('\)]\)"}}}
,AxesLabel->{"Time","\!\(\*SubscriptBox[\(\[ScriptS]\), \(t\)]\)"}
,BaseStyle->{FontSize->18}
];
ExportFigsToDir["savRateAfterMhoRisePlot",cssUSSavingDirFigs];




(* Wealth shock *)

Get[CoreCodeDir<>"/ParametersBase.m"];
\[ScriptM]Max=1.5 \[ScriptM]E;
\[ScriptM]MaxMax=5 \[ScriptM]E;
FindStableArm;
cFuncPlotBase=cFuncPlot=Plot[cE[\[ScriptM]],{\[ScriptM],0,\[ScriptM]MaxMax}];
Stable\[ScriptM]LocusPlot=Plot[{\[ScriptM]EDelEqZero[\[ScriptM]]},{\[ScriptM],-0.2,\[ScriptM]MaxMax},PlotStyle->{Black,Thickness[0.002]}];
WealthShockSize=2;
SimGeneratePath[\[ScriptM]E-WealthShockSize,30];
{\[ScriptM]MinNew,\[ScriptM]MaxNew}={0,20};
{\[ScriptC]MinNew,\[ScriptC]MaxNew}={0,2.`};
\[ScriptM]\[ScriptC]PathPlot = ListPlot[Take[\[ScriptM]\[ScriptC]Path,-(Length[\[ScriptM]\[ScriptC]Path]-1)],PlotStyle->{Red,PointSize[Medium]}];WealthShock=Show[cFuncPlotBase,Stable\[ScriptM]LocusPlot,\[ScriptM]\[ScriptC]PathPlot
,Graphics[Text["\!\(\*SubsuperscriptBox[\(\[CapitalDelta]\[ScriptM]\), \(\[ScriptT] + 1\), \(e\)]\)= 0 \[LowerRightArrow]",{\[ScriptM]E/3,\[ScriptM]EDelEqZero[\[ScriptM]E/3]},{1,-1}]]
,Graphics[Text["\[ScriptC](\[ScriptM])\[LongRightArrow]",{0.1` \[ScriptM]E,0.45` \[ScriptC]E},{-1,0}]]
,Graphics[Line[{{\[ScriptM]E,0},{\[ScriptM]E,\[ScriptC]E}}]]
,Graphics[Line[{{\[ScriptM]E-2,0},{\[ScriptM]E-2,cE[\[ScriptM]E-2]}}]]
,Graphics[Arrow[{{\[ScriptM]E,\[ScriptC]E/2},{\[ScriptM]E-2,\[ScriptC]E/2}}]]
,Graphics[Text["\!\(\*SubscriptBox[\(\[ScriptC]\), \(t\)]\) \[LongRightArrow]",{\[ScriptM]E-2,cE[\[ScriptM]E-2]},{1,0}]]
,Graphics[Text[" \[LongLeftArrow] \!\(\*SubscriptBox[\(\[ScriptC]\), \(t + 1\)]\)",{\[ScriptM]E-2+0.22,cE[\[ScriptM]E-2+0.22]},{-1,0}]]
,Graphics[Text["Wealth Shock",{\[ScriptM]E-1,\[ScriptC]E/2},{0,-1}]]
,Graphics[Text[" \[UpperLeftArrow] Target",{\[ScriptM]E,\[ScriptC]E},{-1,1}]]
,Graphics[Text["\[ScriptC](\[ScriptM])\[LongRightArrow]",{0.1` \[ScriptM]E,0.45` \[ScriptC]E},{-1,0}]]
,Graphics[{Black,PointSize[Medium],Point[{\[ScriptM]E,\[ScriptC]E}]}]
,Ticks->{{{\[ScriptM]E,"\!\(\*SubscriptBox[OverscriptBox[\(\[ScriptM]\), \(\[Hacek]\)], \(\\\ \)]\)"},{\[ScriptM]E-2,"\!\(\*SubscriptBox[\(\[ScriptM]\), \(t\)]\)"}},{{\[ScriptC]E,"\!\(\*OverscriptBox[\(\[ScriptC]\), \(\[Hacek]\)]\)"}}}
,PlotRange->{{\[ScriptM]MinNew,\[ScriptM]E+1},{\[ScriptC]MinNew,\[ScriptC]E+.2}}
,AxesLabel->{"\[ScriptM]","\[ScriptC]"}];
ExportFigsToDir["WealthShock",cssUSSavingDirFigs];




(* Increase in natural borrowing limit *)

Get[CoreCodeDir<>"/ParametersBase.m"];\[GothicG]   =\[GothicG]Base   =0.01;
{\[ScriptC]EBase,\[ScriptM]EBase,\[Kappa]EBase} = a{\[ScriptC]E,\[ScriptM]E,\[Kappa]E};
\[ScriptM]Max=1.5 \[ScriptM]E;
\[ScriptM]MaxMax=5 \[ScriptM]E;
FindStableArm;
\[Kappa]EBase = \[Kappa]E //N;\[ScriptC]EBase = \[ScriptC]E //N;\[ScriptM]EOrig=\[ScriptM]EBase //N;
DebtLimPDV=0.2/((R)-\[GothicCapitalG]);Stable\[ScriptM]LocusPlot=Plot[{\[ScriptM]EDelEqZero[\[ScriptM]]},{\[ScriptM],-DebtLimPDV,\[ScriptM]MaxMax},PlotStyle->{Black,Thickness[0.002]}];
StableArmStyle={Black,Thick}; (* Allows for different style than in TractableBufferStock handout *)
{\[ScriptM]MinNew,\[ScriptM]MaxNew}={0,20};
{\[ScriptC]MinNew,\[ScriptC]MaxNew}={0,2.`};
\[ScriptC]LowerPlot=Plot[cE[\[ScriptM]],{\[ScriptM],0,\[ScriptM]Max},PlotStyle->Dashing[{.01}]];
cEPFPlot = Plot[cEPF[\[ScriptM]],{\[ScriptM],0,\[ScriptM]MaxMax},PlotStyle->Dashing[{.02}]];
Degree45 = Plot[\[ScriptM],{\[ScriptM],0,cE[\[ScriptM]MaxMax]},PlotStyle->Dashing[{.01}]];
cFuncPlotBase=cFuncPlot=Plot[cE[\[ScriptM]],{\[ScriptM],0,\[ScriptM]MaxMax},PlotStyle->Black];
cFunc=Show[cFuncPlotBase,Stable\[ScriptM]LocusPlot
,Graphics[Text["\[UpperLeftArrow] Sustainable \[ScriptC]",{0.6` \[ScriptM]E,0.9` \[ScriptC]E},{1,0}]],Graphics[Text["\[ScriptC](\[ScriptM])\[LongRightArrow]",{0.1` \[ScriptM]E,0.45` \[ScriptC]E},{-1,0}]]
,Graphics[{Thickness[0.002],Dashing[{0.02}],Line[{{\[ScriptM]E,0},{\[ScriptM]E,\[ScriptC]E}}]}]
,Graphics[{Thickness[0.002],Dashing[{0.02}],Line[{{0,\[ScriptC]E},{\[ScriptM]E,\[ScriptC]E}}]}]
,Graphics[Text[" \[UpperLeftArrow] Target",{\[ScriptM]E,\[ScriptC]E},{-1,1}]]
,Graphics[Text["\[ScriptC](\[ScriptM])\[LongRightArrow]",{0.1` \[ScriptM]E,0.45` \[ScriptC]E},{-1,0}]]
,Graphics[{Black,PointSize[Medium],Point[{\[ScriptM]E,\[ScriptC]E}]}]
,Ticks->{{{\[ScriptM]E,"\!\(\*SubscriptBox[OverscriptBox[\(\[ScriptM]\), \(\[Hacek]\)], \(\\\ \)]\)"}},{{\[ScriptC]E,"\!\(\*OverscriptBox[\(\[ScriptC]\), \(\[Hacek]\)]\)"}}}
,PlotRange->{{\[ScriptM]MinNew,\[ScriptM]E+1},{\[ScriptC]MinNew,\[ScriptC]E+.2}}
,AxesLabel->{"\[ScriptM]","\[ScriptC]"}];
Get[CoreCodeDir<>"/ParametersBase.m"];
(* Restore the baseline parameter values and solve again *)
{ r ,\[CurlyTheta] ,\[GothicG],\[Mho]}={rBase,\[CurlyTheta]Base,\[GothicG]Base,\[Mho]Base};
\[ScriptM]Max=1.5 \[ScriptM]E;
\[ScriptM]MaxMax=5 \[ScriptM]E;
FindStableArm;
\[Kappa]EBase = \[Kappa]E //N;\[ScriptC]EBase = \[ScriptC]E //N;
cFuncPlotBasePoints=Map[{{#,cE[#]}}&,Table[\[ScriptM],{\[ScriptM],0,\[ScriptM]MaxMax,0.01}]];
cFuncPlotBase=cFuncPlot=Plot[cE[\[ScriptM]],{\[ScriptM],0,\[ScriptM]MaxMax},PlotStyle->StableArmStyle];
Stable\[ScriptM]LocusPlot=Plot[{\[ScriptM]EDelEqZero[\[ScriptM]]},{\[ScriptM],-5,\[ScriptM]MaxMax},PlotStyle->Dashing[{0.01`}]];
(* Now suppose that there is an exogenous perfectly certain increase to permanent income by the amount 0.2 per year - think of it as a government transfer received by everyone in the population (this is equivalent to but more transparent than introducing unemployment insurance) *)
DebtLimPDV=0.2/((R)-\[GothicCapitalG]);
cEwithNewDebtLim[m_]:= cEInterp[m+DebtLimPDV];
SimGeneratePathUsing[cEwithNewDebtLim,\[ScriptM]E,100]; 
cFuncPlotNew=Plot[cEwithNewDebtLim[\[ScriptM]],{\[ScriptM],-DebtLimPDV,\[ScriptM]MaxMax},PlotRange->All,PlotStyle->StableArmStyle];
\[ScriptM]\[ScriptC]PathPlot = ListPlot[\[ScriptM]\[ScriptC]Path,PlotStyle->{PointSize[0.015]}];
{\[ScriptM]MinNew,\[ScriptM]MaxNew}={0,20};
{\[ScriptC]MinNew,\[ScriptC]MaxNew}={0,2.`};TractableBufferStockTarget=Show[cFuncPlotBase,Stable\[ScriptM]LocusPlot,Graphics[Text["Perm Inc \[LongRightArrow]",{0.6` \[ScriptM]E,0.98` \[ScriptC]E},{1,0}]],Graphics[Text["\[LongLeftArrow] \[ScriptC](\[ScriptM])",{0.9` \[ScriptM]E,0.85` \[ScriptC]E},{-1,0}]],Ticks->None
,PlotRange->{{\[ScriptM]MinNew,\[ScriptM]E+1},{\[ScriptC]MinNew,\[ScriptC]E+rBase}}
,AxesLabel->{"\[ScriptM]","\[ScriptC]"}];

PhaseDiagramDebtLimRisePlot=Show[cFuncPlotNew,cFuncPlotBase,\[ScriptM]\[ScriptC]PathPlot,Stable\[ScriptM]LocusPlot
,Graphics[Text["\[UpperLeftArrow] Orig Target ",{\[ScriptM]EBase,0.98` \[ScriptC]EBase},{-1,1}]]
,Graphics[Text["\[LongLeftArrow] \[CapitalDelta] \!\(\*SubsuperscriptBox[\(\[ScriptM]\), \(t + 1\), \(e\)]\) = 0",{2\[ScriptM]EBase,\[ScriptM]EDelEqZero[2\[ScriptM]EBase]},{-1,1}]]
,Graphics[Text[" \[LongLeftArrow] Orig \[ScriptC](\[ScriptM]) ",{1.35` \[ScriptM]EBase,1.2` \[ScriptC]EBase},{-1,0}]]
,Graphics[Text["  New \[ScriptC](\[ScriptM]) \[LongRightArrow] ",{\[ScriptM]EBase+1,cEwithNewDebtLim[\[ScriptM]EBase+1]},{1,0}]]
,PlotRange->{{-DebtLimPDV,\[ScriptM]MaxNew},{\[ScriptC]MinNew,\[ScriptC]MaxNew}}
,AxesLabel->{"\[ScriptM]","\[ScriptC]"}
,Ticks->{{{-DebtLimPDV,"-\!\(\*UnderscriptBox[\(\[ScriptH]\), \(_\)]\)"},{0,"0."}},None}];
ExportFigsToDir["PhaseDiagramDebtLimRisePlot",cssUSSavingDirFigs];




